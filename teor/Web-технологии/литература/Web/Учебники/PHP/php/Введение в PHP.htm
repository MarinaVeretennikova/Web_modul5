<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0055)http://www.intuit.ru/department/pl/plphp/1/plphp_1.html -->
<HTML><HEAD><TITLE>INTUIT.ru::Интернет-Университет Информационных Технологий</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1251"><LINK 
href="Введение в PHP.files/printable.css" type=text/css rel=stylesheet>
<META content="MSHTML 6.00.2900.2180" name=GENERATOR></HEAD>
<BODY leftMargin=0 topMargin=6 marginwidth="0" marginheight="6">
<DIV align=left><SPAN style="FONT-WEIGHT: bold; COLOR: #000000">&nbsp;&nbsp; 
<SPAN style="FONT-SIZE: 12pt">Интернет-Университет Информационных 
Технологий</SPAN> </SPAN></DIV>&nbsp;&nbsp; <SPAN 
style="COLOR: #330066; TEXT-DECORATION: underline" 
align="rright">http://www.INTUIT.ru</SPAN> 
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD colSpan=3 height=8><IMG height=8 src="Введение в PHP.files/empty.gif" 
      width=1></TD></TR>
  <TR>
    <TD class=orang colSpan=3 height=1><IMG height=1 
      src="Введение в PHP.files/empty.gif" width=1></TD></TR>
  <TR>
    <TD colSpan=3 height=8><IMG height=8 src="Введение в PHP.files/empty.gif" 
      width=1></TD></TR>
  <TR vAlign=top>
    <TD><IMG height=1 src="Введение в PHP.files/empty.gif" width=8></TD>
    <TD><!-- content -->
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD class=head>Язык программирования PHP</TD></TR>
        <TR>
          <TD height=4><IMG height=4 src="Введение в PHP.files/empty.gif" 
            width=1></TD></TR>
        <TR>
          <TD class=orang height=1><IMG height=1 
            src="Введение в PHP.files/empty.gif" width=1></TD></TR>
        <TR>
          <TD height=8><IMG height=8 src="Введение в PHP.files/empty.gif" 
            width=1></TD></TR>
        <TR>
          <TD><SPAN class=headsub>1. Лекция: Введение в PHP: версия для печати 
            и PDA</SPAN> <BR><SPAN class=rtxt>Лекция содержит: историю языка (от 
            PHP/FI до PHP5); описание его возможностей (краткий перечень 
            платформ, протоколов, баз данных, приложений электронной коммерции и 
            функций, которые поддерживаются PHP); области применения (как 
            серверное приложение, в командной строке, создание GUI приложений); 
            способы использования (как PHP встраивается в HTML-код и простейшие 
            примеры.); создание первого скрипта на PHP. Установка и настройка 
            программного обеспечения, необходимого для работы с PHP.</SPAN> 
        </TD></TR>
        <TR>
          <TD height=8><IMG height=8 src="Введение в PHP.files/empty.gif" 
            width=1></TD></TR>
        <TR>
          <TD class=orang height=1><IMG height=1 
            src="Введение в PHP.files/empty.gif" width=1></TD></TR>
        <TR>
          <TD height=8><IMG height=8 src="Введение в PHP.files/empty.gif" 
            width=1></TD></TR>
        <TR>
          <TD>
            <H3>История PHP</H3>
            <P>Язык <SPAN class=keyword>PHP</SPAN> был разработан как инструмент 
            для решения чисто практических задач. Его создатель, <SPAN 
            class=keyword>Расмус Лердорф</SPAN>, хотел знать, сколько людей 
            читают его online-резюме, и написал для этого простенькую <SPAN 
            class=keyword>CGI</SPAN>-оболочку на языке Perl, т.е. это был набор 
            Perl-<SPAN class=keyword>скриптов</SPAN>, предназначенных 
            исключительно для определенной цели – сбора статистики посещений. 
            </P>
            <P><B>Для справки.</B><A name=keyword-context.1></A><SPAN 
            class=keyword_def> CGI</SPAN> (Common Gateway Interface – общий 
            интерфейс шлюзов) является стандартом, который предназначен для 
            создания серверных приложений, работающих по протоколу HTTP. Такие 
            приложения (их называют шлюзами или <SPAN 
            class=keyword>CGI</SPAN>-<SPAN class=keyword>программами</SPAN>) 
            запускаются <SPAN class=keyword>сервером</SPAN> в режиме реального 
            времени. <SPAN class=keyword>Сервер</SPAN> передает запросы 
            пользователя <SPAN class=keyword>CGI</SPAN>-<SPAN 
            class=keyword>программе</SPAN>, которая их обрабатывает и возвращает 
            результат своей работы на экран пользователя. Таким образом, 
            посетитель получает динамическую информацию, которая может 
            изменяться в результате влияния различных факторов. Сам шлюз (<SPAN 
            class=keyword>скрипт </SPAN><SPAN class=keyword>CGI</SPAN>) может 
            быть написан на различных языках программирования – Cи/C++, Fortran, 
            Perl, TCL, UNIX Shell, Visual Basic, Python и др. </P>
            <P>Вскоре выяснилось, что оболочка обладает небольшой 
            производительностью, и пришлось переписать ее заново, но уже на 
            языке Си. После этого <SPAN class=keyword>исходники</SPAN> были 
            выложены на всеобщее обозрение для исправления ошибок и дополнения. 
            Пользователи <SPAN class=keyword>сервера</SPAN>, где располагался 
            сайт с первой версией <SPAN class=keyword>PHP</SPAN>, 
            заинтересовались инструментом, появились желающие его использовать. 
            Так что скоро <SPAN class=keyword>PHP</SPAN> превратился в 
            самостоятельный проект, и в начале 1995 года вышла первая известная 
            версия продукта, называвшаяся <SPAN class=keyword>Personal Home Page 
            Tools</SPAN> (средства для персональной домашней страницы). Средства 
            эти были более чем скромными: анализатор кода, понимающий всего лишь 
            несколько специальных команд, и набор утилит, полезных для создания 
            гостевой книги, счетчика посещений, чата и т.п. </P>
            <P><A name=keyword-context.2></A>К середине 1995 года после 
            основательной переработки появилась вторая версия продукта, 
            названная <SPAN class=keyword_def>PHP/FI</SPAN> (Personal Home Page 
            / Forms Interpreter – персональная домашняя страница/ <SPAN 
            class=keyword>интерпретатор</SPAN> форм). Она включала набор базовых 
            возможностей сегодняшнего <SPAN class=keyword>PHP</SPAN>, 
            возможность автоматически обрабатывать html-формы и <SPAN 
            class=keyword>встраиваться в html-коды</SPAN>. Синтаксис <SPAN 
            class=keyword>PHP/FI</SPAN> сильно напоминал синтаксис Perl, но был 
            более простым. </P>
            <P>В 1997 вышла вторая версия Cи-реализации <SPAN 
            class=keyword>PHP</SPAN> – <SPAN class=keyword>PHP/FI 2.0</SPAN>. К 
            тому моменту <SPAN class=keyword>PHP</SPAN> использовали уже 
            несколько тысяч людей по всему миру, примерно с 50 тыс. доменов, что 
            составляло около 1% всего числа доменов Internet. Число 
            разработчиков <SPAN class=keyword>PHP</SPAN> увеличилось до 
            нескольких человек, но, несмотря на это, <SPAN class=keyword>PHP/FI 
            2.0</SPAN> все еще оставался крупным проектом одного человека. 
            Официально <SPAN class=keyword>PHP/FI 2.0</SPAN> вышел только в 
            ноябре 1997 года, просуществовав до этого в основном в бета-версиях. 
            Вскоре после выхода его заменили альфа-версии <SPAN 
            class=keyword>PHP 3.0</SPAN>. </P>
            <P><A name=keyword-context.3></A><SPAN class=keyword_def>PHP 
            3.0</SPAN> была первой версией, напоминающей <SPAN 
            class=keyword>PHP</SPAN>, каким мы знаем его сегодня. Он очень 
            сильно отличался от <SPAN class=keyword>PHP/FI</SPAN> 2.0 и появился 
            опять же как инструмент для решения конкретной прикладной задачи. 
            Его создатели, <SPAN class=keyword>Энди Гутманс (Andi 
            Gutmans)</SPAN> и <SPAN class=keyword>Зив Сураски (Zeev 
            Suraski)</SPAN>, в 1997 году переписали заново код <SPAN 
            class=keyword>PHP/FI</SPAN>, поскольку он показался им непригодным 
            для разработки приложения электронной коммерции, над которым они 
            работали. Для того чтобы получить помощь в реализации проекта от 
            разработчиков <SPAN class=keyword>PHP/FI</SPAN>, <SPAN 
            class=keyword>Гутманс</SPAN> и <SPAN class=keyword>Сураски</SPAN> 
            решили объединиться с ними и объявить <SPAN 
            class=keyword>PHP3</SPAN> официальным преемником <SPAN 
            class=keyword>PHP/FI</SPAN>. После объединения разработка <SPAN 
            class=keyword>PHP/FI</SPAN> была полностью прекращена. </P>
            <P>Одной из сильных сторон <SPAN class=keyword>PHP 3.0</SPAN> была 
            возможность расширения ядра. Именно свойство расширяемости <SPAN 
            class=keyword>PHP 3.0</SPAN> привлекло внимание множества 
            разработчиков, желающих добавить свой модуль расширения. Кроме того, 
            <SPAN class=keyword>PHP 3.0</SPAN> предоставляла широкие возможности 
            для взаимодействия с базами данных, различными протоколами и API. 
            Немаловажным шагом к успеху оказалась разработка нового, намного 
            более мощного и полного синтаксиса с поддержкой ООП. С момента 
            появления <SPAN class=keyword>PHP 3.0</SPAN> изменилась не только 
            функциональность и внутреннее устройство языка, но и его название. В 
            аббревиатуре <SPAN class=keyword>PHP</SPAN> больше не было 
            упоминания о персональном использовании, <SPAN 
            class=keyword>PHP</SPAN> стало сокращением (рекурсивным акронимом) 
            от <SPAN class=keyword>PHP</SPAN>: Hypertext Preprocessor, что 
            значит «<SPAN class=keyword>PHP</SPAN>: <SPAN 
            class=keyword>препроцессор гипертекста</SPAN>». </P>
            <P>К концу 1998 года число пользователей <SPAN 
            class=keyword>PHP</SPAN> возросло до десятков тысяч. Сотни тысяч 
            web-сайтов сообщали о том, что они работают с использованием этого 
            языка. Почти на 10% <SPAN class=keyword>серверов</SPAN> Internet был 
            <SPAN class=keyword>установлен</SPAN><SPAN class=keyword> PHP 
            3.0</SPAN>. </P>
            <P>Официально <SPAN class=keyword>PHP 3.0</SPAN> вышел в июне 1998 
            года, после 9 месяцев публичного тестирования. А уже к зиме <SPAN 
            class=keyword>Энди Гутманс</SPAN> и <SPAN class=keyword>Зив 
            Сураски</SPAN> начали переработку ядра <SPAN 
            class=keyword>PHP</SPAN>. В их задачи входило увеличение 
            производительности работы сложных приложений и улучшение модульности 
            кода, лежащего в основе <SPAN class=keyword>PHP</SPAN>. </P>
            <P><A name=keyword-context.4></A><A name=keyword-context.5></A>Новое 
            ядро было названо «<SPAN class=keyword_def>Zend Engine</SPAN>» (от 
            имен создателей: Zeev и Andi) и впервые представлено в середине 1999 
            года. <SPAN class=keyword_def>PHP 4.0</SPAN>, основанный на этом 
            ядре и принесший с собой набор дополнительных функций, официально 
            вышел в мае 2000 года, почти через два года после своего 
            предшественника, <SPAN class=keyword>PHP 3.0</SPAN>. Помимо 
            улучшения производительности, <SPAN class=keyword>PHP 4.0</SPAN> 
            имел еще несколько ключевых нововведений, таких как поддержка 
            сессий, буферизация вывода, более безопасные способы обработки 
            вводимой пользователем информации и несколько новых языковых 
            конструкций. </P>
            <P>В настоящее время ведутся работы по улучшению <SPAN 
            class=keyword>Zend Engine</SPAN> и внедрению нововведений в <SPAN 
            class=keyword>PHP</SPAN> 5.0, первые бета-версии которого уже вышли 
            в свет. Одно из существенных изменений произошло в объектной модели 
            языка, ее основательно подлатали и добавили много новых 
            возможностей. </P>
            <P>Сегодня <SPAN class=keyword>PHP</SPAN> используется сотнями тысяч 
            разработчиков. Несколько миллионов сайтов написаны на <SPAN 
            class=keyword>PHP</SPAN>, что составляет более 20% доменов Internet. 
            </P>
            <H3>Возможности PHP</H3>
            <P><A name=keyword-context.6></A>«<SPAN class=keyword_def>PHP</SPAN> 
            может все», – заявляют его создатели. В первую очередь <SPAN 
            class=keyword>PHP</SPAN> используется для создания <SPAN 
            class=keyword>скриптов</SPAN>, работающих на стороне <SPAN 
            class=keyword>сервера</SPAN>, для этого его, собственно, и 
            придумали. <SPAN class=keyword>PHP</SPAN> способен решать те же 
            задачи, что и любые другие <SPAN class=keyword>CGI</SPAN>-<SPAN 
            class=keyword>скрипты</SPAN>, в том числе обрабатывать данные 
            html-форм, динамически генерировать html страницы и т.п. Но есть и 
            другие области, где может использоваться <SPAN 
            class=keyword>PHP</SPAN>. Всего выделяют три основные области 
            применения <SPAN class=keyword>PHP</SPAN>. </P>
            <UL>
              <LI>Первая область, как уже говорилось, – это создание приложений 
              (<SPAN class=keyword>скриптов</SPAN>), которые исполняются на 
              стороне <SPAN class=keyword>сервера</SPAN>. <SPAN 
              class=keyword>PHP</SPAN> наиболее широко используется именно для 
              создания такого рода <SPAN class=keyword>скриптов</SPAN>. Для того 
              чтобы работать таким образом, понадобится <SPAN 
              class=keyword>PHP</SPAN>-парсер (т.е. обработчик <SPAN 
              class=keyword>php</SPAN>-<SPAN class=keyword>скриптов</SPAN>) и 
              <SPAN class=keyword>web-сервер</SPAN> для обработки <SPAN 
              class=keyword>скрипта</SPAN>, браузер для просмотра результатов 
              работы <SPAN class=keyword>скрипта</SPAN>, ну, и, конечно, 
              какой-либо текстовый редактор для написания самого <SPAN 
              class=keyword>php</SPAN>-кода. Парсер <SPAN 
              class=keyword>PHP</SPAN> распространяется в виде <SPAN 
              class=keyword>CGI</SPAN>-<SPAN class=keyword>программы</SPAN> или 
              серверного модуля. Как <SPAN class=keyword>установить</SPAN> его и 
              <SPAN class=keyword>web-сервер</SPAN> на свой компьютер, мы 
              рассмотрим немного позднее. В этом курсе мы будем обсуждать, как 
              правило, создание именно серверных приложений, как пример 
              использования языка <SPAN class=keyword>PHP</SPAN>. 
              <LI>Вторая область – это создание <SPAN 
              class=keyword>скриптов</SPAN>, <SPAN class=keyword>выполняющихся в 
              командной строке</SPAN>. То есть с помощью <SPAN 
              class=keyword>PHP</SPAN> можно создавать такие <SPAN 
              class=keyword>скрипты</SPAN>, которые будут исполняться, вне 
              зависимости от <SPAN class=keyword>web-сервера</SPAN> и браузера, 
              на конкретной машине. Для такой работы потребуется лишь парсер 
              <SPAN class=keyword>PHP</SPAN> (в этом случае его называют <SPAN 
              class=keyword>интерпретатором</SPAN> командной строки (cli, 
              command line interpreter)). Этот способ работы подходит, например, 
              для <SPAN class=keyword>скриптов</SPAN>, которые должны 
              выполняться регулярно с помощью различных планировщиков задач или 
              для решения задач простой обработки текста. 
              <LI>И последняя область – это создание <SPAN 
              class=keyword>GUI</SPAN>-приложений (графических интерфейсов), 
              выполняющихся на стороне клиента. В принципе это не самый лучший 
              способ использовать <SPAN class=keyword>PHP</SPAN>, особенно для 
              начинающих, но если вы уже досконально изучили <SPAN 
              class=keyword>PHP</SPAN>, то такие возможности языка могут 
              оказаться весьма полезны. Для применения <SPAN 
              class=keyword>PHP</SPAN> в этой области потребуется специальный 
              инструмент – <SPAN class=keyword>PHP-GTK</SPAN>, который является 
              расширением <SPAN class=keyword>PHP</SPAN>. </LI></UL>
            <P>Итак, область применения <SPAN class=keyword>PHP</SPAN> 
            достаточно обширна и разнообразна. Тем не менее существует множество 
            других языков программирования, способных решать похожие задачи. 
            Почему стоит изучать <SPAN class=keyword>PHP</SPAN>? Что это нам 
            дает? Во-первых, <SPAN class=keyword>PHP</SPAN> очень прост в 
            изучении. Достаточно ознакомиться лишь с основными правилами 
            синтаксиса и принципами его работы, и можно начинать писать 
            собственные <SPAN class=keyword>программы</SPAN>, причем браться за 
            такие задачи, решение которых на другом языке требовало бы серьезной 
            подготовки. </P>
            <P>Во-вторых, <SPAN class=keyword>PHP</SPAN> поддерживается почти на 
            всех известных платформах, почти во всех операционных системах и на 
            самых разных <SPAN class=keyword>серверах</SPAN>. Это тоже очень 
            важно. Вряд ли кому-то захочется переходить, например, от работы под 
            Windows к работе под Linux или от <SPAN class=keyword>сервера</SPAN> 
            IIS к <SPAN class=keyword>серверу </SPAN><SPAN 
            class=keyword>Apache</SPAN> только для того, чтобы изучить еще один 
            язык программирования. </P>
            <P>В <SPAN class=keyword>PHP</SPAN> сочетаются две самые популярные 
            парадигмы программирования – объектная и процедурная. В <SPAN 
            class=keyword>PHP4</SPAN> более полно поддерживается процедурное 
            программирование, но есть возможность писать <SPAN 
            class=keyword>программы</SPAN> и в объектном стиле. Уже в первых 
            пробных версиях <SPAN class=keyword>PHP5</SPAN> большинство 
            недочетов в реализации объектно-ориентированной модели языка, 
            существующих в <SPAN class=keyword>PHP4</SPAN>, устранены. Таким 
            образом, можно выбрать наиболее привычный стиль работы. </P>
            <P>Если говорить о возможностях сегодняшнего <SPAN 
            class=keyword>PHP</SPAN>, то они выходят далеко за рамки тех, что 
            были реализованы в его первых версиях. С помощью <SPAN 
            class=keyword>PHP</SPAN> можно создавать изображения, <SPAN 
            class=keyword>PDF</SPAN>-файлы, флэш-ролики, в него включена 
            поддержка большого числа современных баз данных, встроены функции 
            для работы с текстовыми данными любых форматов, включая <SPAN 
            class=keyword>XML</SPAN>, и функции для работы с файловой системой. 
            <SPAN class=keyword>PHP</SPAN> поддерживает взаимодействие с 
            различными сервисами посредством соответствующих протоколов, таких 
            как протокол управления доступом к директориям <SPAN 
            class=keyword>LDAP</SPAN>, протокол работы с сетевым оборудованием 
            SNMP, протоколы передачи сообщений <SPAN class=keyword>IMAP</SPAN>, 
            <SPAN class=keyword>NNTP</SPAN> и <SPAN class=keyword>POP3</SPAN>, 
            протокол передачи гипертекста HTTP и т.д. </P>
            <P>Обращая внимание на взаимодействие между различными языками, 
            следует упомянуть о поддержке объектов Java и возможности их 
            использования в качестве объектов <SPAN class=keyword>PHP</SPAN>. 
            Для доступа к удаленным объектам можно использовать расширение <SPAN 
            class=keyword>CORBA</SPAN>. </P>
            <P>Для работы с текстовой информацией <SPAN class=keyword>PHP</SPAN> 
            унаследовал (с небольшими изменениями) механизмы работы с 
            регулярными выражениями из языка Perl и UNIX-систем. Для обработки 
            <SPAN class=keyword>XML</SPAN>-документов можно использовать как 
            стандарты <SPAN class=keyword>DOM</SPAN> и <SPAN 
            class=keyword>SAX</SPAN>, так и API для <SPAN 
            class=keyword>XSLT</SPAN>-трансформаций. </P>
            <P>Для создания приложений электронной коммерции существует ряд 
            полезных функций, таких как функции осуществления платежей <SPAN 
            class=keyword>Cybercash</SPAN>, <SPAN class=keyword>CyberMUT</SPAN>, 
            <SPAN class=keyword>VeriSign Payflow Pro</SPAN> и <SPAN 
            class=keyword>CCVS</SPAN>. </P>
            <H3>Установка и настройка ПО</H3>
            <P>Возможности языка мы обсудили, области применения рассмотрели, 
            <SPAN class=keyword>историю</SPAN> изучили. Теперь можно приступать 
            к <SPAN class=keyword>установке</SPAN> необходимого инструментария. 
            Поскольку в качестве практической основы курса мы будем 
            рассматривать задачи, решаемые с помощью технологии клиент-<SPAN 
            class=keyword>сервер</SPAN>, и <SPAN class=keyword>PHP</SPAN> 
            соответственно будет использоваться для создания <SPAN 
            class=keyword>скриптов</SPAN>, обрабатываемых <SPAN 
            class=keyword>сервером</SPAN>, нам нужно <SPAN 
            class=keyword>установить </SPAN><SPAN 
            class=keyword>web-сервер</SPAN> и <SPAN 
            class=keyword>интерпретатор</SPAN><SPAN class=keyword> PHP</SPAN>. В 
            качестве <SPAN class=keyword>web-сервера</SPAN> выберем, например, 
            <SPAN class=keyword>Apache</SPAN>, как наиболее популярный среди 
            web-разработчиков. Для просмотра результатов работы <SPAN 
            class=keyword>программ</SPAN> нам понадобится web-браузер, например 
            Internet Explorer. </P>
            <H4>Установка Apache 1.3.29 под Windows XP</H4>
            <P>Чтобы что-нибудь <SPAN class=keyword>установить</SPAN>, нужно для 
            начала иметь соответствующее программное обеспечение (ПО). Скачать 
            ПО для <SPAN class=keyword>установки</SPAN><SPAN class=keyword> 
            Apache</SPAN> можно, например, с его официального сайта <A 
            href="http://www.apache.org/" 
            target=_blank>http://www.apache.org/</A>. Мы скачали файл <SPAN 
            class=texample>apache_1.3.29-win3x86-no_src.exe</SPAN>. Это 
            автоматический установщик (иначе – wizard) <SPAN 
            class=keyword>сервера </SPAN><SPAN class=keyword>Apache</SPAN> под 
            Windows. Эта <SPAN class=keyword>программа</SPAN> попытается почти 
            самостоятельно (а точнее, с минимальными усилиями с вашей стороны) 
            <SPAN class=keyword>установить</SPAN> на компьютер какое-либо 
            программное обеспечение, а в данном случае <SPAN 
            class=keyword>сервер</SPAN>. После запуска файла установщика 
            появляется следующее окошко (<A 
            href="http://www.intuit.ru/department/pl/plphp/1/plphp_1.html#image.1.1">рис. 
            1.1</A>). </P>
            <P align=center><A name=image.1.1></A><IMG height=285 
            alt="Автоматическая установка сервера Apache" 
            src="Введение в PHP.files/1_1.gif" width=370><BR><B>Рис. 
            1.1.</B>&nbsp; Автоматическая установка сервера Apache</P>
            <P>Чтобы <SPAN class=keyword>установить</SPAN> HTTP-<SPAN 
            class=keyword>сервер </SPAN><SPAN class=keyword>Apache</SPAN> версии 
            1.3.29 на свой компьютер, нужно нажать на кнопку Next. Кстати 
            говоря, эта же <SPAN class=keyword>программа</SPAN> позволит 
            изменить или удалить уже <SPAN class=keyword>установленный 
            </SPAN><SPAN class=keyword>web-сервер</SPAN>. </P>
            <P>После нажатия кнопки Next <SPAN class=keyword>программа</SPAN> 
            предложит согласиться с условиями лицензии (<A 
            href="http://www.intuit.ru/department/pl/plphp/1/plphp_1.html#image.1.2">рис. 
            1.2</A>). </P>
            <P align=center><A name=image.1.2></A><IMG height=285 
            alt="Лицензионное соглашение" src="Введение в PHP.files/1_2.gif" 
            width=370><BR><B>Рис. 1.2.</B>&nbsp; Лицензионное соглашение</P>
            <P>Следующий экран будет содержать информацию о <SPAN 
            class=keyword>сервере </SPAN><SPAN class=keyword>Apache</SPAN>, и в 
            частности о его Windows-реализации (его изображение не приводим). 
            </P>
            <P>На следующем шаге нужно ввести имя сетевого домена, имя <SPAN 
            class=keyword>сервера</SPAN> и e-mail администратора. <SPAN 
            class=keyword>Программа</SPAN> попытается автоматически определить 
            ваш домен и хост по <SPAN class=keyword>настройкам</SPAN> компьютера 
            (<A 
            href="http://www.intuit.ru/department/pl/plphp/1/plphp_1.html#image.1.3">рис. 
            1.3</A>). </P>
            <P align=center><A name=image.1.3></A><IMG height=285 
            alt="Основная информация о сервере" 
            src="Введение в PHP.files/1_3.gif" width=370><BR><B>Рис. 
            1.3.</B>&nbsp; Основная информация о сервере</P>
            <P>После того как вы ввели данные в вышеприведенную форму, нужно 
            выбрать тип <SPAN class=keyword>установки</SPAN>: полная 
            (устанавливаются все компоненты <SPAN class=keyword>сервера</SPAN>) 
            или определяемая пользователем (можно выбрать компоненты для <SPAN 
            class=keyword>установки</SPAN>) (<A 
            href="http://www.intuit.ru/department/pl/plphp/1/plphp_1.html#image.1.4">рис. 
            1.4.</A>). </P>
            <P align=center><A name=image.1.4></A><IMG height=285 
            alt="Тип установки" src="Введение в PHP.files/1_4.gif" 
            width=370><BR><B>Рис. 1.4.</B>&nbsp; Тип установки</P>
            <P>Выбор компонентов <SPAN class=keyword>сервера</SPAN> не очень 
            большой – это инструменты, необходимые для работы <SPAN 
            class=keyword>сервера</SPAN> и документация к нему (<A 
            href="http://www.intuit.ru/department/pl/plphp/1/plphp_1.html#image.1.5">рис. 
            1.5</A>). </P>
            <P align=center><A name=image.1.5></A><IMG height=285 
            alt="Выбор компонент пользовавательской установки" 
            src="Введение в PHP.files/1_5.gif" width=370><BR><B>Рис. 
            1.5.</B>&nbsp; Выбор компонент пользовавательской установки</P>
            <P>Мы выберем полную <SPAN class=keyword>установку</SPAN>. Тогда на 
            следующем шаге <SPAN class=keyword>программа</SPAN> предложит 
            выбрать папку, в которую будет <SPAN 
            class=keyword>установлен</SPAN><SPAN class=keyword> сервер</SPAN>. 
            По умолчанию <SPAN class=keyword>сервер</SPAN> устанавливается в 
            папку <SPAN class=texample>c:\Program Files\Apache Group\</SPAN> (<A 
            href="http://www.intuit.ru/department/pl/plphp/1/plphp_1.html#image.1.6">рис. 
            1.6</A>). </P>
            <P align=center><A name=image.1.6></A><IMG height=285 
            alt="Папка, в которую будет установлен сервер" 
            src="Введение в PHP.files/1_6.gif" width=370><BR><B>Рис. 
            1.6.</B>&nbsp; Папка, в которую будет установлен сервер</P>
            <P>На следующем экране (<A 
            href="http://www.intuit.ru/department/pl/plphp/1/plphp_1.html#image.1.7">рис. 
            1.7</A>) потребуется подтвердить правильность введенных данных и 
            начать <SPAN class=keyword>установку</SPAN>. Из любого окна <SPAN 
            class=keyword>установки</SPAN>, включая и это, можно вернуться назад 
            и изменить введенные ранее данные. </P>
            <P align=center><A name=image.1.7></A><IMG height=285 
            alt="Начало установки" src="Введение в PHP.files/1_7.gif" 
            width=370><BR><B>Рис. 1.7.</B>&nbsp; Начало установки</P>
            <P>После нажатия кнопки Install начнется непосредственная <SPAN 
            class=keyword>установка</SPAN><SPAN class=keyword> сервера</SPAN>. 
            От пользователя никаких дополнительных действий больше не требуется. 
            С одной стороны, это хорошо, но есть у такой автоматизированной 
            <SPAN class=keyword>установки</SPAN> и некоторые недостатки. 
            Например, домашние директории пользователей оказываются там же, где 
            и файлы настроек <SPAN class=keyword>сервера</SPAN> (<SPAN 
            class=texample>c:\Program Files\Apache Group\Apache\users\</SPAN>). 
            Это небезопасно, если на компьютере работает несколько 
            пользователей, не являющихся администраторами <SPAN 
            class=keyword>сервера</SPAN>. Но для начала можно ничего не менять. 
            Допустим, мы запустили <SPAN class=keyword>установщик</SPAN>, ввели 
            все необходимые данные, он выполнил все операции успешно и говорит, 
            что <SPAN class=keyword>сервер </SPAN><SPAN 
            class=keyword>установлен</SPAN>. Как проверить, действительно ли 
            <SPAN class=keyword>сервер </SPAN><SPAN 
            class=keyword>установлен</SPAN>? Набираем в окне браузера <A 
            href="http://localhost/" target=_blank>http://localhost/</A>. Если 
            все <SPAN class=keyword>установилось</SPAN> правильно, мы получим 
            страничку приветствия <SPAN class=keyword>сервера </SPAN><SPAN 
            class=keyword>Apache</SPAN> (см. <A 
            href="http://www.intuit.ru/department/pl/plphp/1/plphp_1.html#image.1.8">рис. 
            1.8</A>). </P>
            <P align=center><A name=image.1.8></A><IMG height=254 
            alt="Страница приветствия" src="Введение в PHP.files/1_8.gif" 
            width=370><BR><B>Рис. 1.8.</B>&nbsp; Страница приветствия</P>
            <P>Итак, <SPAN class=keyword>сервер </SPAN><SPAN 
            class=keyword>установлен</SPAN>. Как теперь с ним работать? Откуда 
            можно запускать <SPAN class=keyword>скрипты</SPAN> и где должны 
            находиться файлы пользователей? Файлы, которые должны быть 
            обработаны <SPAN class=keyword>сервером</SPAN>, можно сохранять либо 
            в корне <SPAN class=keyword>сервера</SPAN> (в нашем случае это <SPAN 
            class=texample>c:\Program Files\Apache Group\Apache\htdocs</SPAN> ), 
            либо в директориях пользователей (в нашем случае это <SPAN 
            class=texample>c:\Program Files\Apache Group\Apache\users\</SPAN>). 
            Местоположение корня <SPAN class=keyword>сервера</SPAN> и директорий 
            пользователей прописано в <SPAN class=keyword>настройках</SPAN><SPAN 
            class=keyword> сервера</SPAN>, а точнее, в файле конфигурации <SPAN 
            class=keyword>httpd.conf</SPAN> (найти его можно в <SPAN 
            class=texample>c:\Program Files\Apache Group\Apache\conf</SPAN> ). 
            Для изменения этих путей нужно изменить соответствующие переменные в 
            файле конфигурации <SPAN class=keyword>сервера</SPAN>. Переменная в 
            файле конфигурации ServerRoot отвечает за корневую директорию <SPAN 
            class=keyword>сервера</SPAN>, а переменная UserDir – за директорию, 
            где будут располагаться файлы пользователей <SPAN 
            class=keyword>сервера</SPAN> (для более безопасной работы советуем 
            изменить переменную UserDir на что-нибудь типа <SPAN 
            class=texample>c:\users\</SPAN>). Чтобы получить доступ к файлу 
            <SPAN class=texample>test.html</SPAN>, находящемуся в корне <SPAN 
            class=keyword>сервера</SPAN>, нужно набрать в браузере <A 
            href="http://localhost/test.html" 
            target=_blank>http://localhost/test.html</A> (т. е. имя хоста, имя 
            файла). Если же файл <SPAN class=texample>test.html</SPAN> находится 
            в директории пользователя user, то для его просмотра нужно набрать в 
            браузере <A href="http://localhost/~user/test.html" 
            target=_blank>http://localhost/~user/test.html</A>. </P>
            <H4>Установка PHP 4.3.4 под Windows</H4>
            <P>Перейдем к <SPAN class=keyword>установке</SPAN><SPAN 
            class=keyword> PHP</SPAN>. Скачать его дистрибутив можно с 
            официального сайта <SPAN class=keyword>PHP</SPAN> – <A 
            href="http://www.php.net/" target=_blank>http://www.php.net/</A>. 
            Для удобства лучше выбрать автоматический инсталлятор, как и в 
            случае с <SPAN class=keyword>сервером</SPAN>. Самое первое окошко 
            при такой <SPAN class=keyword>установке</SPAN><SPAN class=keyword> 
            PHP</SPAN> содержит приветствие и предупреждение о существовании 
            авторских прав на этот продукт (<A 
            href="http://www.intuit.ru/department/pl/plphp/1/plphp_1.html#image.1.9">рис. 
            1.9</A>). </P>
            <P align=center><A name=image.1.9></A><IMG height=155 
            alt="Программа автоматической установки PHP" 
            src="Введение в PHP.files/1_9.gif" width=207><BR><B>Рис. 
            1.9.</B>&nbsp; Программа автоматической установки PHP</P>
            <P>Далее нужно прочитать и согласиться (или не согласиться) с 
            лицензией (<A 
            href="http://www.intuit.ru/department/pl/plphp/1/plphp_1.html#image.1.10">рис. 
            1.10</A>). </P>
            <P align=center><A name=image.1.10></A><IMG height=279 
            alt="Лицензионное соглашение" src="Введение в PHP.files/1_10.gif" 
            width=370><BR><B>Рис. 1.10.</B>&nbsp; Лицензионное соглашение</P>
            <P>Затем выбираем тип <SPAN class=keyword>установки</SPAN>: 
            стандартный или для специалистов. Мы выберем стандартную <SPAN 
            class=keyword>установку</SPAN> (<A 
            href="http://www.intuit.ru/department/pl/plphp/1/plphp_1.html#image.1.11">рис. 
            1.11</A>). </P>
            <P align=center><A name=image.1.11></A><IMG height=279 
            alt="Тип установки" src="Введение в PHP.files/1_11.gif" 
            width=370><BR><B>Рис. 1.11.</B>&nbsp; Тип установки</P>
            <P>В следующем окне <SPAN class=keyword>программа</SPAN> предложит 
            выбрать директорию для <SPAN class=keyword>установки</SPAN><SPAN 
            class=keyword> PHP</SPAN>. Туда будут скопированы файлы библиотек, 
            расширений, <SPAN class=keyword>интерпретатор</SPAN> командной 
            строки, модули и т.п. (<A 
            href="http://www.intuit.ru/department/pl/plphp/1/plphp_1.html#image.1.12">рис. 
            1.12</A>). </P>
            <P align=center><A name=image.1.12></A><IMG height=279 
            alt="Выбор папки, в которую будет установлен PHP" 
            src="Введение в PHP.files/1_12.gif" width=370><BR><B>Рис. 
            1.12.</B>&nbsp; Выбор папки, в которую будет установлен PHP</P>
            <P>В следующем окошке предлагается ввести адрес SMTP-<SPAN 
            class=keyword>сервера</SPAN>, т.е. <SPAN 
            class=keyword>сервера</SPAN> отправки почтовых сообщений, и обратный 
            адрес отправителя почты. Это окошко мы приводить не будем. </P>
            <P>Далее предлагается выбрать из списка <SPAN 
            class=keyword>сервер</SPAN>, с которым будет работать <SPAN 
            class=keyword>PHP</SPAN>. Поскольку мы <SPAN 
            class=keyword>установили</SPAN><SPAN class=keyword> Apache</SPAN>, 
            то выберем из списка именно его (<A 
            href="http://www.intuit.ru/department/pl/plphp/1/plphp_1.html#image.1.13">рис. 
            1.13</A>). </P>
            <P align=center><A name=image.1.13></A><IMG height=279 
            alt="Выбор сервера, на котором будет работать PHP" 
            src="Введение в PHP.files/1_13.gif" width=370><BR><B>Рис. 
            1.13.</B>&nbsp; Выбор сервера, на котором будет работать PHP</P>
            <P>Следующее окошко начинает инсталляцию (<A 
            href="http://www.intuit.ru/department/pl/plphp/1/plphp_1.html#image.1.14">рис. 
            1.14</A>). </P>
            <P align=center><A name=image.1.14></A><IMG height=153 
            alt="Начало автоматической установки PHP" 
            src="Введение в PHP.files/1_14.gif" width=207><BR><B>Рис. 
            1.14.</B>&nbsp; Начало автоматической установки PHP</P>
            <P>После копирования необходимых файлов мы получили следующее 
            сообщение (см. <A 
            href="http://www.intuit.ru/department/pl/plphp/1/plphp_1.html#image.1.15">рис. 
            1.15</A>): </P>
            <P align=center><A name=image.1.15></A><IMG height=159 
            alt="Сообщение о невозможности автоматически настроить Apache для работы с PHP" 
            src="Введение в PHP.files/1_15.gif" width=300><BR><B>Рис. 
            1.15.</B>&nbsp; Сообщение о невозможности автоматически настроить 
            Apache для работы с PHP</P>
            <P>Это значит, что нужно настраивать <SPAN class=keyword>сервер 
            </SPAN><SPAN class=keyword>Apache</SPAN> для работы с <SPAN 
            class=keyword>PHP</SPAN> вручную. </P>
            <P>Сначала следует выбрать, как мы хотим <SPAN 
            class=keyword>установить</SPAN><SPAN class=keyword> PHP</SPAN>, 
            поскольку он поставляется в двух видах: <SPAN 
            class=keyword>CGI-скрипт</SPAN> (<SPAN 
            class=texample>php.exe</SPAN>) или набор <SPAN 
            class=keyword>SAPI-модулей</SPAN> (например, <SPAN 
            class=texample>php4isapi.dll</SPAN>), используемых <SPAN 
            class=keyword>сервером</SPAN>. Последний вариант обладает новыми 
            возможностями, однако из-за недостаточной проработанности может 
            функционировать недостаточно надежно, особенно на платформах старше 
            Windows 2000 (может появляться куча ошибок 500, могут возникать сбои 
            в других <SPAN class=keyword>серверных</SPAN> модулях, таких как 
            ASP). Так что, если нужна абсолютная стабильность – надо выбирать 
            <SPAN class=keyword>установку</SPAN><SPAN class=keyword> PHP</SPAN> 
            в виде <SPAN class=keyword>CGI</SPAN> выполнимого приложения. </P>
            <P>Если мы хотим <SPAN class=keyword>установить</SPAN><SPAN 
            class=keyword> PHP</SPAN> как серверный модуль, то в файле 
            конфигурации <SPAN class=keyword>сервера</SPAN> (<SPAN 
            class=texample><SPAN class=keyword>httpd.conf</SPAN></SPAN>) нужно 
            написать: </P>
            <DIV class=example><PRE>LoadModule php4_module 
                 c:/php/sapi/php4apache.dll
AddType application/x-httpd-php .php .phtml
AddModule mod_php4.c
</PRE></DIV>
            <P>Если мы устанавливаем <SPAN class=keyword>PHP</SPAN> как <SPAN 
            class=keyword>cgi</SPAN>-<SPAN class=keyword>программу</SPAN>, то в 
            <SPAN class=keyword>httpd.conf</SPAN> нужно написать: </P>
            <DIV class=example><PRE>ScriptAlias /php/ "c:/php/" 
AddType application/x-httpd-php .php .phtml 
Action application/x-httpd-php "/php/php.exe"
</PRE></DIV>
            <P>В этом случае могут возникнуть проблемы с безопасностью. 
            Рекомендуется исправить директорию, где лежит исполняемый файл <SPAN 
            class=keyword>интерпретатора</SPAN> (<SPAN 
            class=texample>c:\php\</SPAN>), на что-нибудь менее очевидное 
            (например, на <SPAN class=texample>c:\abc_php\</SPAN>). Мы советуем 
            устанавливать <SPAN class=keyword>PHP</SPAN> как серверный модуль. 
            </P>
            <P><A name=keyword-context.7></A><A name=keyword-context.8></A><A 
            name=keyword-context.9></A>Еще нужно отредактировать файл <SPAN 
            class=texample><SPAN class=keyword>php.ini</SPAN></SPAN> (в папке 
            <SPAN class=texample>c:\Windows</SPAN>), чтобы <SPAN 
            class=keyword>PHP</SPAN> «знал», где находится корневая директория 
            <SPAN class=keyword>сервера</SPAN>, где пользовательские директории, 
            а где его собственные библиотеки расширений. За это в файле <SPAN 
            class=texample><SPAN class=keyword>php.ini</SPAN></SPAN> отвечают 
            соответственно переменные <SPAN class=texample><SPAN 
            class=keyword_def>doc_root</SPAN></SPAN>, <SPAN class=texample><SPAN 
            class=keyword_def>user_dir</SPAN></SPAN> и <SPAN 
            class=texample><SPAN class=keyword_def>extension_dir</SPAN></SPAN>. 
            Зададим их таким образом: </P>
            <DIV class=example><PRE>doc_root = "c:\Program Files\Apache 
                       Group\Apache\htdocs"
user_dir = "c:\users"
extension_dir = "c:\php\extensions"
</PRE></DIV>
            <P>Кроме того, можно выбрать расширения, которые будут загружаться 
            при запуске <SPAN class=keyword>PHP</SPAN>. В реализацию <SPAN 
            class=keyword>PHP</SPAN> под Windows изначально входит очень мало 
            расширений. Чтобы загрузить расширение, нужно раскомментировать в 
            <SPAN class=keyword>php.ini</SPAN> соответствующую ему строчку <SPAN 
            class=texample>'extension=php_*.dll'</SPAN>. Например, чтобы 
            загрузить расширение для работы с MSSQL, нужно раскомментировать 
            строку <SPAN class=texample>'extension=php_mssql.dll'</SPAN>. 
            Некоторые расширения требуют дополнительных библиотек. Поэтому 
            рекомендуется скопировать дополнительные библиотеки в системную 
            директорию (из папки <SPAN class=texample>c:\php\dlls</SPAN>). При 
            первой <SPAN class=keyword>установке</SPAN> следует настроить и 
            протестировать <SPAN class=keyword>PHP</SPAN> без расширений. </P>
            <P>Для того чтобы <SPAN class=keyword>настройки</SPAN>, выполненные 
            в конфигурационных файлах <SPAN class=keyword>сервера</SPAN> и <SPAN 
            class=keyword>PHP</SPAN> вступили в силу, нужно перезапустить <SPAN 
            class=keyword>сервер</SPAN>. </P>
            <P>Проверим, работает ли <SPAN class=keyword>PHP</SPAN>. Для этого 
            создадим тестовый файл (<SPAN class=texample>1.php</SPAN>) в 
            директории пользователя (<SPAN class=texample>c:\users\nina</SPAN>) 
            со следующим содержанием: </P>
            <DIV class=example><PRE>&lt;?php
echo"&lt;h1&gt;Привет всем!&lt;/h1&gt;";
?&gt;
</PRE></DIV>
            <P>Запустим этот файл через браузер, набрав <A 
            href="http://localhost/~nina/1.php" 
            target=_blank>http://localhost/~nina/1.php</A>. Если что-то не так, 
            то на экран будет выведен текст этого файла. Если все хорошо, то наш 
            <SPAN class=keyword>скрипт</SPAN> должен обработаться <SPAN 
            class=keyword>сервером</SPAN> и вывести большими буквами строку 
            «Привет всем!». </P>
            <H4>Установка PHP под Linux</H4>
            <P>Как и в случае с Windows, для Linux существует два способа <SPAN 
            class=keyword>установки</SPAN><SPAN class=keyword> PHP</SPAN>: 
            используя <SPAN class=keyword>пакеты</SPAN> и непосредственно 
            компилируя <SPAN class=keyword>исходный код </SPAN><SPAN 
            class=keyword>PHP</SPAN>, который можно скачать с <A 
            href="http://www.php.net/" target=_blank>http://www.php.net/</A>. Мы 
            остановимся на первом варианте и рассмотрим <SPAN 
            class=keyword>установку</SPAN><SPAN class=keyword> PHP</SPAN>+<SPAN 
            class=keyword>Apache</SPAN> на примере дистрибутива <SPAN 
            class=keyword>AltMaster2.2</SPAN> (<A href="http://altlinux.ru/" 
            target=_blank>http://altlinux.ru/</A>). </P>
            <P>Для того чтобы <SPAN class=keyword>установить</SPAN><SPAN 
            class=keyword> apache</SPAN>, необходимо выбрать одноименный <SPAN 
            class=keyword>пакет</SPAN>. Это можно сделать, например, с помощью 
            менеджера <SPAN class=keyword>пакетов</SPAN><SPAN class=keyword> 
            Synaptic</SPAN>. Воспользовавшись меню <B>«Пакет -&gt; 
            Установить»</B> (<A 
            href="http://www.intuit.ru/department/pl/plphp/1/plphp_1.html#image.1.16">рис. 
            1.16</A>) нужно выбрать интересующие <SPAN 
            class=keyword>пакеты</SPAN>. После этого необходимо перейти к <SPAN 
            class=keyword>установке</SPAN> выбранных <SPAN 
            class=keyword>пакетов</SPAN> с помощью меню <B>«Действия -&gt; 
            Выполнить»</B>. После <SPAN class=keyword>установки</SPAN><SPAN 
            class=keyword> Apache</SPAN> имеет смысл перезагрузиться или 
            выполнить следующую команду: </P>
            <DIV class=example><PRE>/etc/init.d/httpd start
# /etc/init.d/httpd start
Starting httpd:
    [ OK ]
</PRE></DIV>
            <P>Это приведет к запуску <SPAN class=keyword>сервера</SPAN> и можно 
            будет увидеть по адресу <A href="http://localhost/" 
            target=_blank>http://localhost/</A> почти такую же страницу, как и 
            при <SPAN class=keyword>установке</SPAN><SPAN class=keyword> 
            Apache</SPAN> под Windows. Возможным отличием будет присутствие 
            логотипа <SPAN class=keyword>AltLinux</SPAN>. </P>
            <P align=center><A name=image.1.16></A><IMG height=191 
            alt="Выбор пакета для установки Apache под Linux" 
            src="Введение в PHP.files/1_16.gif" width=330><BR><B>Рис. 
            1.16.</B>&nbsp; Выбор пакета для установки Apache под Linux</P>
            <P>После <SPAN class=keyword>установки</SPAN><SPAN class=keyword> 
            Apache</SPAN> можно приступить к <SPAN 
            class=keyword>установке</SPAN> непосредственно <SPAN 
            class=keyword>PHP</SPAN>. Опять же можно использовать <SPAN 
            class=keyword>PHP</SPAN> с помощью <SPAN class=keyword>CGI</SPAN> и 
            через модуль <SPAN class=keyword>Apache</SPAN>. В первом случае 
            достаточно <SPAN class=keyword>пакета </SPAN><SPAN 
            class=keyword>php</SPAN> и необходимых для его <SPAN 
            class=keyword>установки</SPAN><SPAN class=keyword> пакетов</SPAN>. 
            Во втором случае необходимо дополнительно <SPAN 
            class=keyword>установить</SPAN><SPAN class=keyword> 
            пакет</SPAN><SPAN class=keyword> mod_php</SPAN>. (<A 
            href="http://www.intuit.ru/department/pl/plphp/1/plphp_1.html#image.1.17">рис. 
            1.17</A>). </P>
            <P align=center><A name=image.1.17></A><IMG height=135 
            alt="Выбор пакетов для установки PHP под Linux" 
            src="Введение в PHP.files/1_17.gif" width=330><BR><B>Рис. 
            1.17.</B>&nbsp; Выбор пакетов для установки PHP под Linux</P>
            <P><A name=keyword-context.10></A>Менеджер <SPAN 
            class=keyword>пакетов</SPAN><SPAN class=keyword_def> Synaptic</SPAN> 
            – это оболочка к <SPAN class=keyword>программе </SPAN><SPAN 
            class=keyword>apt-get</SPAN>, более подробно о ней можно узнать с 
            помощью команды <SPAN class=texample>man <SPAN 
            class=keyword>apt-get</SPAN></SPAN>. Воспользуемся утилитой <SPAN 
            class=keyword>apt-get</SPAN> для <SPAN 
            class=keyword>установки</SPAN><SPAN class=keyword> 
            пакета</SPAN><SPAN class=keyword> mod_php</SPAN>. Команда <SPAN 
            class=texample><SPAN class=keyword>apt-get</SPAN> build-dep <SPAN 
            class=keyword>mod_php</SPAN> </SPAN><SPAN 
            class=keyword>установит</SPAN><SPAN class=keyword> пакеты</SPAN>, 
            которые нам необходимы для инсталляции <SPAN 
            class=keyword>mod_php</SPAN>. Команда <SPAN class=texample><SPAN 
            class=keyword>apt-get</SPAN> install <SPAN 
            class=keyword>mod_php</SPAN></SPAN> завершит <SPAN 
            class=keyword>установку</SPAN>: </P><A name=example.1.0></A>
            <DIV class=example><PRE>[root@greydragon apt]# apt-get build-dep mod_php
Reading Package Lists... Done
Collecting File Provides... Done
Building Dependency Tree... Done
Note, selecting libgdbm-devel instead of gdbm-devel
The following NEW packages will be installed:
    apache-devel bison byacc flex libexpat-devel 
libgdbm-devel libltdl libmm-devel libpam-devel libtool
0 packages upgraded, 10 newly installed, 
0 removed and 73 not upgraded.
Need to get 937kB of archives.
After unpacking 2357kB of additional disk space will be used.
Do you want to continue? [Y/n]
Get:1 ftp://ftp.altlinux.ru ALTLinux/main byacc 
    1.9-ipl9mdk [31.8kB]
.....
Get:10 ftp://ftp.altlinux.ru ALTLinux/main 
libtool 2:1.4.2-alt0.2 [302kB]
Fetched 937kB in 9m19s (1675B/s)
Executing RPM (/bin/rpm -Uvh --fancypercent 
--oldpackage)...
Preparing...
################################################### [100%]
....
[root@greydragon apt]# apt-get install mod_php
Reading Package Lists... Done
Collecting File Provides... Done
Building Dependency Tree... Done
The following NEW packages will be installed:
    mod_php
0 packages upgraded, 1 newly installed, 
0 removed and 73 not upgraded.
Need to get 46.6kB of archives.
After unpacking 69.2kB of additional disk space will be used.
Get:1 ftp://ftp.altlinux.ru ALTLinux/main 
mod_php 1:4.3.0-alt0.cvs20030207 [46.6kB]
Fetched 46.6kB in 24s (1918B/s)
Executing RPM (/bin/rpm -Uvh --fancypercent --oldpackage)...
Preparing...
################################################### [100%]
1: mod_php 
################################################### [100%]
Shutting down httpd: [ OK ]
Checking configuration sanity for httpd: [ OK ]
Starting httpd: [ OK ]
</PRE><SPAN class=objectName>Листинг 1.0. Результат работы менеджера 
            пакетов Synaptic </SPAN></DIV>
            <P>Как видно из приведенного листинга, <SPAN class=keyword>скрипт 
            </SPAN><SPAN class=keyword>установки</SPAN> самостоятельно 
            перезагрузил <SPAN class=keyword>сервер </SPAN><SPAN 
            class=keyword>Apache</SPAN>. Также он самостоятельно внес изменения 
            в конфигурационный файл <SPAN class=keyword>Apache</SPAN>, полный 
            путь до которого: <SPAN class=texample>/etc/httpd/conf/<SPAN 
            class=keyword>httpd.conf</SPAN></SPAN> </P>
            <P>В <SPAN class=keyword>httpd.conf</SPAN> добавлена строка: </P>
            <DIV class=example><PRE>Include conf/addon-modules/mod_php4.conf
</PRE></DIV>
            <P>Содержимое файла mod_php4.conf </P>
            <DIV class=example><PRE>LoadModule php4_module 
                  usr/lib/apache/libphp4.so
AddModule mod_php4.c
AddType application/x-httpd-php 
                  .php .php4 .php3 .phtml
AddType application/x-httpd-php-source .phps
AddHandler application/x-httpd-php 
                  .php .php4 .php3 .phtml
</PRE></DIV>
            <P>Как видно, изменения в <SPAN class=keyword>httpd.conf</SPAN> 
            подобны изменениям, которые мы вносили при <SPAN 
            class=keyword>установке</SPAN> под Windows. </P>
            <P>Теперь можно воспользоваться тестовым файлом для проверки 
            работоспособности <SPAN class=keyword>PHP</SPAN>+<SPAN 
            class=keyword>Apache</SPAN>. Создадим <SPAN 
            class=texample>test.php</SPAN> со следующим содержанием: </P>
            <DIV class=example><PRE>&lt;?php
echo"&lt;h1&gt;Привет всем!&lt;/h1&gt;";
?&gt;
</PRE></DIV>
            <P>Корень <SPAN class=keyword>сервера</SPAN> находится <SPAN 
            class=texample>/var/www/html/</SPAN>. Можно создать каталог test и 
            разместить там файл <SPAN class=texample>test.php</SPAN>. Вызвав 
            этот файл из браузера по его адресу (<A 
            href="http://localhost/test/test.php" 
            target=_blank>http://localhost/test/test.php</A>), получим страничку 
            с текстом «Привет всем». </P>
            <P>В заключение отметим, что процесс <SPAN 
            class=keyword>установки</SPAN><SPAN class=keyword> PHP</SPAN> с 
            помощью <SPAN class=keyword>пакетов</SPAN> в других дистрибутивах 
            Linux принципиально не отличается от рассмотренного нами. Процесс 
            <SPAN class=keyword>установки</SPAN> из <SPAN 
            class=keyword>исходного кода</SPAN> в них же подробно описан. Стоит 
            отметить, что «ручная» компоновка позволит настроить <SPAN 
            class=keyword>PHP</SPAN> под конкретные нужды, также возможен 
            выигрыш в производительности. </P>
            <H4>Дистрибутив Денвер</H4>
            <P>Мы достаточно подробно рассмотрели <SPAN 
            class=keyword>установку</SPAN> и <SPAN 
            class=keyword>настройку</SPAN><SPAN class=keyword> PHP</SPAN> для 
            платформ Linux и Windows. <A name=keyword-context.11></A>Для тех, 
            кто не желает вникать в устройство <SPAN class=keyword>PHP</SPAN> и 
            требуемых для его работы компонентов, существуют готовые 
            дистрибутивы, содержащие все наиболее распространенные расширения 
            <SPAN class=keyword>PHP</SPAN>. Один из самых известных – 
            дистрибутив <SPAN class=keyword_def>Денвер</SPAN> (<A 
            href="http://dklab.ru/chicken/web/" 
            target=_blank>http://dklab.ru/chicken/web/</A>). Инструкции по его 
            <SPAN class=keyword>установке</SPAN> можно прочитать на сайте 
            разработчиков. Отметим только, что его <SPAN 
            class=keyword>установка</SPAN> достаточно проста и не требует особых 
            навыков. Этот дистрибутив можно рекомендовать для начинающих 
            программистов, желающих научиться работать с <SPAN 
            class=keyword>PHP</SPAN>. Для более серьезных задач лучше все же 
            <SPAN class=keyword>установить</SPAN> и настроить <SPAN 
            class=keyword>PHP</SPAN> самостоятельно. </P>
            <H3>Первая PHP-программа</H3>
            <P>По большому счету, первую <SPAN class=keyword>PHP</SPAN>-<SPAN 
            class=keyword>программу</SPAN> вы уже создали, когда проверяли, 
            работает ли <SPAN class=keyword>интерпретатор</SPAN><SPAN 
            class=keyword> PHP</SPAN> (в предыдущей главе). Сейчас мы хотим 
            более подробно рассказать о том, что представляет собой <SPAN 
            class=keyword>PHP</SPAN>-<SPAN class=keyword>программа</SPAN> и чем 
            она отличается от <SPAN class=keyword>программ</SPAN> на языках Cи, 
            Perl и JavaScript. Рассмотрим пример. </P><A name=example.1.1></A>
            <DIV class=example><PRE>&lt;html&gt;
  &lt;head&gt;
  &lt;title&gt;Пример&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
  &lt;?php 
  echo "&lt;p&gt;Привет, я – скрипт PHP!&lt;/p&gt;"; 
  ?&gt;
&lt;/body&gt;
&lt;/html&gt; 
</PRE><SPAN class=objectName>Пример 1.1. Простой html-файл со 
            встроенным кодом на РНР</SPAN></DIV>
            <P>Это простой HTML-файл, в который <SPAN 
            class=keyword>встроен</SPAN> с помощью специальных тегов код, 
            написанный на языке <SPAN class=keyword>PHP</SPAN>. </P>
            <P>Как мы уже отмечали выше, <SPAN class=keyword>PHP</SPAN> похож на 
            Cи и Perl. Однако приведенная здесь <SPAN 
            class=keyword>программа</SPAN> сильно отличается от аналогичных по 
            смыслу <SPAN class=keyword>программ</SPAN> на языках Cи и Perl. 
            Здесь не нужно писать кучу специальных команд для вывода HTML. 
            Пишется непосредственно HTML-<SPAN class=keyword>скрипт</SPAN>, в 
            который можно <SPAN class=keyword>встраивать </SPAN><SPAN 
            class=keyword>PHP</SPAN>-код, осуществляющий какие-либо действия 
            (например, выводящий текст на экран, как в нашем примере). 
            Недостатком <SPAN class=keyword>PHP</SPAN> по сравнению с Cи и Perl, 
            несмотря на все усилия разработчиков, все еще является недостаточная 
            быстрота выполнения сложных <SPAN class=keyword>скриптов</SPAN>. 
</P>
            <P><A name=keyword-context.12></A><SPAN 
            class=keyword_def>PHP-скрипты</SPAN> – это <SPAN 
            class=keyword>программы</SPAN>, которые выполняются и обрабатываются 
            <SPAN class=keyword>сервером</SPAN>. Так что сравнивать его со 
            скриптовыми языками типа JavaScript невозможно, потому что 
            написанные на них <SPAN class=keyword>скрипты</SPAN> выполняются на 
            машине клиента. В чем отличие <SPAN class=keyword>скриптов</SPAN>, 
            выполняемых на <SPAN class=keyword>сервере</SPAN> и на клиенте? Если 
            <SPAN class=keyword>скрипт</SPAN> обрабатывается <SPAN 
            class=keyword>сервером</SPAN>, клиенту посылаются только результаты 
            работы <SPAN class=keyword>скрипта</SPAN>. Например, если на <SPAN 
            class=keyword>сервере</SPAN> выполнялся <SPAN 
            class=keyword>скрипт</SPAN>, подобный приведенному выше, клиент 
            получит сгенерированную HTML-страницу вида: </P>
            <DIV class=example><PRE>&lt;html&gt;
    &lt;head&gt;
    &lt;title&gt;Пример&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
    &lt;p&gt;Привет, я – скрипт PHP!&lt;/p&gt; 
    &lt;/body&gt;
&lt;/html&gt; 
</PRE></DIV>
            <P>В этом случае клиент не знает, какой код выполняется. Можно даже 
            сконфигурировать свой <SPAN class=keyword>сервер</SPAN> таким 
            образом, чтобы HTML-файлы обрабатывались процессором <SPAN 
            class=keyword>PHP</SPAN>, так что клиенты даже не смогут узнать, 
            получают ли они обычный HTML-файл или результат выполнения <SPAN 
            class=keyword>скрипта</SPAN>. Если же <SPAN 
            class=keyword>скрипт</SPAN> обрабатывается клиентом (например, это 
            <SPAN class=keyword>программа</SPAN> на языке JavaScript), то клиент 
            получает страницу, содержащую код <SPAN 
            class=keyword>скрипта</SPAN>. </P>
            <P>Мы отмечали выше, что <SPAN class=keyword>PHP</SPAN>-<SPAN 
            class=keyword>скрипты</SPAN><SPAN class=keyword> встраиваются в 
            HTML-код</SPAN>. Возникает вопрос, каким образом? Есть несколько 
            способов. Один из них приведен в самом первом примере – с помощью 
            открывающего тега <SPAN class=texample><SPAN 
            class=keyword>&lt;?php</SPAN></SPAN> и закрывающего тега <SPAN 
            class=texample><SPAN class=keyword>?&gt;</SPAN></SPAN>. Такого вида 
            специальные теги позволяют переключаться между режимами HTML и <SPAN 
            class=keyword>PHP</SPAN>. Этот синтаксис наиболее предпочтителен, 
            поскольку позволяет задействовать <SPAN class=keyword>PHP</SPAN> в 
            <SPAN class=keyword>XML</SPAN>-совместимых <SPAN 
            class=keyword>программах</SPAN> (например, написанных на языке 
            XHTML), но тем не менее можно использовать следующие альтернативные 
            варианты (команда <SPAN class=texample>echo "Some text"</SPAN>; 
            выводит на экран текст «Some text».): </P>
            <OL>
              <LI>
              <DIV class=example><PRE>&lt;? echo "Это простейшая
         инструкция для
         обработки PHP"; ?&gt;
</PRE></DIV>
              <LI>
              <DIV class=example><PRE>&lt;script language="php"&gt; 
 echo "Некоторые редакторы
       (FrontPage) предпочитают
       делать так";
&lt;/script&gt;
</PRE></DIV>
              <LI>
              <DIV class=example><PRE>&lt;% echo "Можно использовать теги
         в стиле ASP "; %&gt;
</PRE></DIV></LI></OL>
            <P>Первый из этих способов не всегда доступен. Чтобы им 
            пользоваться, нужно включить короткие теги либо с помощью функции 
            <SPAN class=texample><SPAN class=keyword>short_tags</SPAN>()</SPAN> 
            для <SPAN class=keyword>PHP</SPAN> 3, либо включив <SPAN 
            class=keyword>установку</SPAN> short_open_tag в конфигурационном 
            файле <SPAN class=keyword>PHP</SPAN>, либо скомпилировав <SPAN 
            class=keyword>PHP</SPAN> с параметром --enable-short-tags. Даже если 
            это включено по умолчанию в <SPAN 
            class=texample>php.ini-dist</SPAN>, использование коротких тегов не 
            рекомендуется. Второй способ аналогичен вставке, например, 
            JavaScript-кода и использует для этого соответствующий html тег. 
            Поэтому использовать его можно всегда, но это делается редко из-за 
            его громоздкости. Третий способ можно применить, только если теги в 
            стиле ASP были включены, используя конфигурационную <SPAN 
            class=keyword>установку</SPAN><SPAN class=keyword> asp_tags</SPAN>. 
            </P>
            <P>Когда <SPAN class=keyword>PHP</SPAN> обрабатывает файл, он просто 
            передает его текст, пока не встретит один из перечисленных 
            специальных тегов, который сообщает ему о необходимости начать 
            интерпретацию текста как кода <SPAN class=keyword>PHP</SPAN>. Затем 
            он выполняет весь найденный код до закрывающего тега, говорящего 
            <SPAN class=keyword>интерпретатору</SPAN>, что далее снова идет 
            просто текст. Этот механизм позволяет внедрять <SPAN 
            class=keyword>PHP</SPAN>-код в HTML – все за пределами тегов <SPAN 
            class=keyword>PHP</SPAN> остается неизменным, тогда как внутри 
            интерпретируется как код. Заметим также, что php-файл не похож на 
            <SPAN class=keyword>CGI-скрипт</SPAN>. Php файл не должен быть 
            исполнимым или еще каким-либо образом помеченным. </P>
            <P>Для того чтобы отправить php-файл на обработку <SPAN 
            class=keyword>серверу</SPAN>, нужно в строке браузера набрать путь к 
            этому файлу на <SPAN class=keyword>сервере</SPAN>. <SPAN 
            class=keyword>Скрипты </SPAN><SPAN class=keyword>php</SPAN> должны 
            располагаться там, где разрешен доступ через www, например там же, 
            где лежит домашняя страничка. Если <SPAN 
            class=keyword>php</SPAN>-файл лежит на локальной машине, то его 
            можно обработать с помощью <SPAN class=keyword>интерпретатора</SPAN> 
            командной строки. </P>
            <H3>Заключение</H3>
            <P>Итак, мы получили представление о том, что такое язык <SPAN 
            class=keyword>PHP</SPAN>, как он появился и развивался, узнали, как 
            и где его можно использовать, <SPAN class=keyword>установили</SPAN> 
            программное обеспечение и сделали все необходимые <SPAN 
            class=keyword>настройки</SPAN> для работы с ним, а также выяснили, 
            что представляет собой <SPAN class=keyword>php</SPAN>-<SPAN 
            class=keyword>программа</SPAN>. В следующих лекциях мы рассмотрим 
            основы синтаксиса <SPAN class=keyword>PHP</SPAN> и решим несколько 
            полезных практических задач. </P></TD></TR>
        <TR>
          <TD height=8><IMG height=8 src="Введение в PHP.files/empty.gif" 
            width=1></TD></TR></TBODY></TABLE><!-- /content --></TD>
    <TD><IMG height=1 src="Введение в PHP.files/empty.gif" 
  width=8></TD></TR></TBODY></TABLE><!-- /bottom -->
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=orang height=1><IMG height=1 
      src="Введение в PHP.files/empty.gif" width=1></TD></TR>
  <TR>
    <TD class=ltxt align=middle>© 2003-2005 INTUIT.ru. Все права 
  защищены.</TD></TR></TBODY></TABLE><!-- /bottom --></BODY></HTML>
