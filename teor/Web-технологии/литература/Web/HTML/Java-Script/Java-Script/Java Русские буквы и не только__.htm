<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0059)http://www.citforum.ru/internet/javascript/java_rbint.shtml -->
<HTML><HEAD><TITLE>Java: Русские буквы и не только...</TITLE>
<META content="text/html; charset=windows-1251" http-equiv=Content-Type>
<META 
content="Информационные технологии,java,программирование,русские буквы,руссификация,программа,язык,утилита,кодировка" 
name=KeyWords>
<META content=all name=Robots>
<META content="http://www.citforum.ru, " name=Description>
<META content=Static name=Document-state><LINK 
href="Java Русские буквы и не только__.files/forum.css" rel=stylesheet 
type=text/css>
<META content="MSHTML 5.00.2614.3401" name=GENERATOR></HEAD>
<BODY aLink=#800000 bgColor=#ffffff link=#006890 text=#000000 topMargin=0 
vLink=#003860 marginheight="0"><A name=top></A>
<TABLE border=0 cellPadding=0 cellSpacing=0 width="100%">
  <TBODY>
  <TR>
    <TD>
      <TABLE border=0 cellPadding=5 cellSpacing=0 width="100%">
        <TBODY>
        <TR>
          <TD>
            <P><FONT face="Arial, sans-serif" size=2><B><A 
            href="http://www.citforum.ru/">http://www.citforum.ru/</A></B></FONT></P></TD>
          <TD><!--TopList COUNTER-->
            <SCRIPT language=JavaScript><!--
d=document;js=10;a=';r='+escape(d.referrer)
//--></SCRIPT>

            <SCRIPT language=JavaScript1.1><!--
js=11;a+=';j='+navigator.javaEnabled()
//--></SCRIPT>

            <SCRIPT language=JavaScript1.2><!--
js=12;s=screen;a+=';s='+s.width+'*'+s.height
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth)
//--></SCRIPT>

            <SCRIPT language=JavaScript1.3><!--
js=13//--></SCRIPT>

            <SCRIPT language=JavaScript><!--
d.write('<img src="http://top.list.ru/counter'+
'?id=26978;js='+js+a+'" alt="" height=1 width=1>')
if(js>11)d.write('<'+'!-- ')//--></SCRIPT>
            <NOSCRIPT><IMG alt="" height=1 
            src="Java Русские буквы и не только__.files/counter.gif" 
            width=1></NOSCRIPT>
            <SCRIPT 
            language=JavaScript><!--
if(js>11)d.write('--'+'>')
//--></SCRIPT>
<!--TopList COUNTER--></TD>
          <TD align=right>
            <P><FONT size=2><A href="http://www.citforum.ru/">Сервер</A> 
            содержит море(!) аналитической 
      информации!</FONT></P></TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD bgColor=#008080>
      <TABLE border=0 cellPadding=1 cellSpacing=1 width="100%">
        <TBODY>
        <TR>
          <TD align=middle bgColor=#daecd7><A class=head 
            href="http://www.citforum.ru/search.shtml">Поиск</A></TD>
          <TD align=middle bgColor=#daecd7><A class=head 
            href="http://www.citforum.ru/rubricator/">Рубрикатор</A></TD>
          <TD align=middle bgColor=#daecd7><A class=head 
            href="http://www.citforum.ru/news.shtml">Новости сервера</A></TD>
          <TD align=middle bgColor=#daecd7><A class=head 
            href="http://www.citmgu.ru/">Учебный центр</A></TD>
          <TD align=middle bgColor=#daecd7><A class=head 
            href="http://www.mistral.ru/">Книжный магазин</A></TD>
          <TD align=middle bgColor=#daecd7><A class=head 
            href="http://www.citforum.ru/advertising/">Реклама на 
        сервере</A></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE>
<TABLE border=0 cellPadding=0 cellSpacing=0 width="100%">
  <TBODY>
  <TR>
    <TD><IMG border=0 height=5 
      src="Java Русские буквы и не только__.files/1x1.gif" width=1></TD></TR>
  <TR>
    <TD align=middle>
      <TABLE border=0 cellPadding=0 cellSpacing=0 width="100%">
        <TBODY>
        <TR>
          <TD><IMG alt=Logo border=0 height=60 
            src="Java Русские буквы и не только__.files/citlogo6.gif" 
          width=160></TD>
          <TD width="100%"><IMG border=0 height=60 
            src="Java Русские буквы и не только__.files/1x1.gif" width=5></TD>
          <TD><IMG border=0 height=60 
            src="Java Русские буквы и не только__.files/adv.gif" width=15></TD>
          <TD><!-- Russian LinkExchange code START -->
            <SCRIPT language=JavaScript>
<!--
var a3=Math.floor(Math.random()*100000000);
document.write("<iframe src=http://www.linkexchange.ru/cgi-bin/erle.cgi?026012?" + a3 + " frameborder=0 vspace=0 hspace=0 width=468 height=60  marginwidth=0  marginheight=0 scrolling=no><a href=http://www.linkexchange.ru/users/026012/goto.map target=_top><img src=http://www.linkexchange.ru/cgi-bin/rle.cgi?026012?" + a3 + " alt=\"RLE Banner Network\" border=0 height=60 width=468></a></iframe>");
//-->
</SCRIPT>
<!-- Russian LinkExchange code END --></TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD><IMG border=0 height=5 
      src="Java Русские буквы и не только__.files/1x1.gif" 
width=1></TD></TR></TBODY></TABLE>
<TABLE border=0 cellPadding=0 cellSpacing=0 width="100%">
  <TBODY>
  <TR>
    <TD bgColor=#daecd7><IMG border=0 height=4 
      src="Java Русские буквы и не только__.files/1x1.gif" 
width=1></TD></TR></TBODY></TABLE><!--top adv-->
<TABLE border=0 cellPadding=0 cellSpacing=0 width="100%">
  <TBODY>
  <TR>
    <TD bgColor=#daecd7>
      <TABLE border=0 cellPadding=0 cellSpacing=1 width="100%">
        <TBODY>
        <TR vAlign=top>
          <TD bgColor=#ffffff width="50%">
            <TABLE border=0 cellPadding=3 cellSpacing=0 width="100%">
              <TBODY>
              <TR vAlign=top>
                <TD><A href="http://www.mistral.ru/content/16151.shtml"><IMG 
                  align=left alt="Black Cat logo" border=0 height=45 
                  src="Java Русские буквы и не только__.files/black_cat_72x45.gif" 
                  width=72></A>
                  <DIV align=center><FONT size=2><FONT size=3><A 
                  href="http://www.mistral.ru/content/16151.shtml"><B>Black Cat 
                  Linux 6.2</B></A></FONT><BR>(4 CD + краткое руководство) 
                  -<BR>в интернет-магазине <B><A 
                  href="http://www.mistral.ru/">"Мистраль"</A></B>! 
                </FONT></DIV></TD></TR></TBODY></TABLE></TD>
          <TD bgColor=#ffffff width="50%">
            <TABLE border=0 cellPadding=3 cellSpacing=0 width="100%">
              <TBODY>
              <TR vAlign=top>
                <TD><A href="http://www.citmgu.ru/ab_2.html"><IMG align=left 
                  alt=mcse border=0 height=38 
                  src="Java Русские буквы и не только__.files/mcp_se_c.gif" 
                  width=110></A>
                  <DIV align=center><FONT size=2><B>Учебная программа<BR><FONT 
                  size=3><A href="http://www.citmgu.ru/ab_2.html">"Статус MCSE 
                  под ключ!"</A></B></FONT></FONT></DIV></TD></TR>
              <TR>
                <TD align=middle><FONT size=2><B>Занятия начнутся 24 июля! 
                  </B></FONT></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE>
<TABLE border=0 cellPadding=0 cellSpacing=0 width="100%">
  <TBODY>
  <TR>
    <TD bgColor=#daecd7><IMG border=0 height=4 
      src="Java Русские буквы и не только__.files/1x1.gif" 
width=1></TD></TR></TBODY></TABLE><!--/top adv-->
<TABLE border=0 cellPadding=5 cellSpacing=0 width="100%">
  <TBODY>
  <TR>
    <TD>
      <P><FONT face="Tahoma, Arial, sans-serif" size=1><B><A 
      href="http://www.citforum.ru/">CITFORUM.RU</A> &gt;&gt;&gt; <A 
      href="http://www.citforum.ru/internet/">INTERNET</A> &gt;&gt;&gt; <A 
      href="http://www.citforum.ru/internet/javascript/java_rbint.shtml">/internet/javascript/java_rbint.shtml</A></B></FONT></P></TD></TR></TBODY></TABLE>
<P>&nbsp; <!-- start -->
<H3 align=center>Java: Русские буквы и не только...</H3>
<P align=center><I>Сергей Астахов (<A 
href="mailto:sergeya@comita.spb.ru">sergeya@comita.spb.ru</A>),<BR></I><A 
href="http://www.comita.spb.ru/users/sergeya/java/ruschars.html">http://www.comita.spb.ru/users/sergeya/java/ruschars.html</A> 

<P align=justify>Здесь я попытался собрать информацию по поводу написания 
русскоязычных программ на языке Java. Если Вам известно что-либо помимо того, 
что я тут понаписал, напишите мне, ваши добавления будут кстати. 
<H4>Содержание:</H4>
<UL>
  <LI><A 
  href="http://www.citforum.ru/internet/javascript/java_rbint.shtml#1">Файлы 
  данных, потоки, БД.</A> 
  <LI><A 
  href="http://www.citforum.ru/internet/javascript/java_rbint.shtml#2">Русские 
  буквы в исходниках Java-программ.</A> 
  <LI><A 
  href="http://www.citforum.ru/internet/javascript/java_rbint.shtml#3">Русские 
  буквы в файлах properties.</A> 
  <LI><A 
  href="http://www.citforum.ru/internet/javascript/java_rbint.shtml#4">Русские 
  буквы в Servlet-ах.</A> 
  <LI><A 
  href="http://www.citforum.ru/internet/javascript/java_rbint.shtml#5">GUI (AWT, 
  Swing)</A> 
  <LI><A 
  href="http://www.citforum.ru/internet/javascript/java_rbint.shtml#6">I18n 
  (вывод чисел, дат и т.п.)</A> 
  <LI><A href="http://www.citforum.ru/internet/javascript/java_rbint.shtml#7">Об 
  утилите native2ascii</A> 
  <LI><A href="http://www.citforum.ru/internet/javascript/java_rbint.shtml#8">О 
  методе перекодировки символов</A> </LI></UL><A name=1></A>
<H4>Файлы данных, потоки, БД.</H4>
<P align=justify>Итак, как все, надеюсь, знают, в языке Java для представления 
символов используется Unicode, т.е. по два байта на один символ (тип char 
размером в 16 бит). В набор символов входят всевозможные буквы со всякими 
чёрточками и припендюльками, греческие, математические и символы псевдографики. 
В том числе и так любимые нами символы кириллицы (диапазон значений 
0x0400-0x04ff). Так что с этой стороны никакой дискриминации нет. 
<P align=justify>Если Вам интересны конкретные кода символов, для их просмотра 
удобно использовать программу "Таблица символов" из WinNT. Вот, например, 
диапазон кириллицы: 
<P align=center><IMG border=0 height=179 
src="Java Русские буквы и не только__.files/java_rbint.gif" width=400> 
<P align=justify>С другой стороны большинство файлов данных основано на 
8-битовом представлении символов. Сюда входят также текстовые файлы и 
большинство баз данных (окромя наиболее продвинутых). Кроме того, что самое 
паршивое, одни и те же байты могут представлять разные символы (в зависимости от 
кодовой страницы). Налицо конфликт - как преобразовать одно в другое и наоборот, 
причём с наименьшими потерями для данных. Для этого был придуман довольно 
удобный механизм использования кодовых страниц. Для каждой кодовой страницы было 
создано по 2 класса перекодировки (ByteToChar и CharToByte). Классы эти лежат в 
пакете sun.io. Если, при перекодировке из char в byte не было найдено 
соответствующего символа, он заменяется на символ ?. 
<P align=justify>Кстати, эти файлы кодовых страниц в некоторых ранних версиях 
JDK 1.1 содержат ошибки, вызывающие ошибки перекодировок, а то и вообще 
исключения при выполнении. Например, это касается кодировки KOI8_R. Лучшее, что 
можно при этом сделать - сменить версию на более позднюю. Судя по Sun-овскому 
описанию, большинство этих проблем было решено в версии JDK 1.1.6. 
<P align=justify>Когда и как надлежит пользоваться этой перекодировкой? Когда 
пользоваться, в принципе, понятно - при любом преобразовании из byte в char и 
наоборот. В классе String в тех местах, где есть преобразование можно указать 
дополнительный параметр (String enc), задающий имя кодовой страницы. Это 
конструктор по массиву байтов и метод getBytes(). Однако, в реальной программе, 
явно указывать кодовую страницу не всегда удобно. Для этого была введена 
кодировка по умолчанию. По умолчанию она зависит от системы (для русских виндов 
принята кодировка Cp1251), и в старых JDK её можно изменить установкой 
системного свойства file.encoding. Вообще-то, как утверждают в Sun, это свойство 
отражает системную кодировку, и она не должна изменяться в командной строке 
(см., например, комментарии к BugID <A 
href="http://developer.java.sun.com/developer/bugParade/bugs/4256423.html">4256423</A>) 
Эта кодировка используется тогда, когда явно не указанно название страницы. Т.к. 
эта настройка одна на все преобразования, иногда можно наткнуться на 
неприятности. Например, эта же настройка используется для вывода на консольный 
экран, что, в случае виндов, как правило, неприемлемо - там нужно использовать 
страницу Cp866. Было бы здорово, если бы эти кодировки указывались независимо - 
например, console.encoding и т.п., но, думаю, Sun-овцам пока не до таких высоких 
материй. 
<P>Кстати, о выводе на консоль. Есть два пути решения вышеуказанной проблемы: 
<OL>
  <LI>Использовать вместо System.out.println свой класс, а уже в нём делать 
  преобразование. Например: <PRE> public class Msg
 {
  static String cp = System.getProperty("console.encoding","Cp866");
  public static void message(String msg)
  {
   msg += "\n";
   byte[] b;
   try { b = msg.getBytes(cp); }
   catch( UnsupportedEncodingException e )
     {
      b = msg.getBytes();       // В случае отсутствия нужной кодировки,
                                // делаем преобразование по умолчанию
     }
   System.out.write(b);
  }
 }
 ...
 Msg.message("Сообщение");
</PRE>
  <LI>Написать свою версию PrintStream, поддерживающую нужную кодировку, и 
  подставить его через System.setOut() и System.setErr(). Вот, например, обычное 
  начало в моих программах: <PRE> ...
 public static void main(String[] args)
 {
  // Установка вывода консольных сообщений в нужной кодировке
  try
    {
     System.setOut(new CodepagePrintStream(System.out,System.getProperty("console.encoding","Cp866")) );
    }
  catch(UnsupportedEncodingException e)
    {
     System.out.println("Unable to setup console codepage: " + e);
    }
 ...
</PRE></LI></OL>
<P align=justify>Куда же податься бедному российскому программисту? Не 
отчаивайтесь, есть множество путей прочитать и сохранить данные из файлов в 
нужной Вам кодировке. 
<OL>
  <LI>Читать и записывать массивы байтов (byte[]), а для перекодировки 
  использовать упомянутые методы класса String. Этот способ особенно удобен, 
  когда в потоке могут присутствовать данные в разных кодировках. 
  <LI>Использовать классы InputStreamReader и OutputStreamWriter из пакета 
  java.io, специально предназначенные для этих целей. 
  <LI>Сделать преобразование в нужную кодировку. Если вы всё сделаете корректно, 
  то данные не потеряются, хотя, конечно, пользоваться этим желательно только в 
  крайнем случае. Пример: <PRE> // Чтение русских букв в кодировке Cp866 через объект,
 // поддерживающий только Cp437
 String str = o.readString();
 str = new String(str.getBytes("Cp437"),"Cp866");
 // Сохранение русских букв в кодировке Cp866 через объект,
 // поддерживающий только Cp437
 str = new String(str.getBytes("Cp866"),"Cp437");
 o.writeString(str);
</PRE>
  <P align=justify>Более подробно о этом методе, и о возможных проблемах с ним, 
  расписано ниже, в разделе О методе перекодировки символов. </P>
  <LI>Настроить драйвер БД на нужную кодировку. Как именно - это зависит от 
  конкретного драйвера. К сожалению, многие драйвера понятия не имеют о каких-то 
  там кодировках. Иногда их можно пропатчить на этот счёт, но чаще всего 
  приходится действовать обходными путями. 
  <P align=justify>Например, один из самых часто используемых драйверов - мост 
  JDBC-ODBC. В версиях JDK 1.1, этот мост просто игнорировал кодировки символов, 
  из-за чего нужно было предпринять дополнительные ухищрения, типа описанных в 
  предыдущем пункте (это также касается и последней ихней версии, 1.1.8). 
  <P align=justify>Мост из комплекта Sun Java 2 теперь можно настроить на нужную 
  кодировку. Это делается добавлением дополнительного свойства charSet в набор 
  параметров, передаваемых для открытия соединения с базой. По умолчанию 
  используется file.encoding. Делается это примерно так: <PRE>  // Параметры соединения с базой
  Properties connInfo = new Properties();
  connInfo.put("user", username);
  connInfo.put("password", password);
  connInfo.put("charSet", "Cp1251");
  // Устанавливаем соединение
  Connection db = DriverManager.getConnection(dataurl, connInfo);
</PRE>
  <P align=justify>Другой пример - драйвер JDBC-OCI (не pure Java - тот 
  называется thin) от Oracle 8.0.5 под Linux. При получении данных из БД, 
  драйвер определяет "свою" кодировку при помощи переменной окружения NLS_LANG. 
  Если эта переменная не найдена, то он считает что кодировка - ISO88591. Весь 
  фокус в том, что NLS_LANG должна быть именно переменной окружения, а 
  properties (типа file.encoding) здесь "не катят". В случае использования 
  драйвера внутри servlet engine Apache+Jserv, переменную окружения можно задать 
  в файле jserv.properties: <PRE>  wrapper.env=NLS_LANG=American_America.CL8KOI8R</PRE>
  <P>Информацию об этом прислал <A 
  href="mailto:mailto:serge@soi3.mmtel.ru">Сергей Безруков</A>, за что ему 
  отдельное спасибо. </P></LI></OL>
<P align=justify>Если же Вы свободны в формировании формата - тогда всё проще. 
Используйте формат Unicode или UTF8 - и проблем не будет. 
<P align=justify>В случае с БД, можно, конечно, использовать и какой-нибудь 
16-ричный формат, но это не всегда приемлемо, т.к. Вы получите 2-х - 4-х кратный 
рост места на диске и потеряете возможность использовать стандартные программы 
работы с БД, например генераторы отчётов. <A name=2></A>
<H4>Русские буквы в исходниках Java-программ.</H4>
<P align=justify>Как уже упоминалось, при выполнении программы используется 
Unicode. Исходные же файлы пишутся в обычных редакторах. Я пользуюсь Far-ом, у 
Вас, наверняка есть свой любимый редактор. Эти редакторы сохраняют файлы в 
8-битовом формате, а значит, что к этим файлам также применимы рассуждения, 
аналогичные приведённым выше. Разные версии компиляторов немного по разному 
выполняют преобразование символов. В ранних версиях JDK 1.1.x используется 
настройка file.encoding, которую можно поменять при помощи нестандартной опции 
-J. В более новых (как сообщил <A href="mailto:mailto:den@mkb.mari.ru">Денис 
Кокарев</A> - начиная с 1.1.4) был введён дополнительный параметр -encoding, при 
помощи которого можно указать используемую кодировку. В скомпилированных классах 
строки представлены в виде Unicode (точнее в модифицированном варианте формата 
UTF8), так что самое интересное происходит при компиляции. Поэтому, самое 
главное - выяснить, в какой кодировке у Вас исходники и указать правильное 
значение при компиляции. По умолчанию будет использован всё тот же пресловутый 
file.encoding. Пример вызова компилятора: <PRE>javac -encoding=KOI8_R ...</PRE>
<P align=justify>Кроме использования этой настройки есть ещё один метод - 
указывать буквы в формате "\uxxxx", где указывается код символа. Этот метод 
работает со всеми версиями, а для получения этих кодов можно использовать 
стандартную утилиту <A 
href="http://www.citforum.ru/internet/javascript/java_rbint.shtml#7">native2ascii</A>. 
<A name=3></A>
<H4>Русские буквы в файлах properties.</H4>
<P align=justify>Для чтения файлов properties используются методы загрузки 
ресурсов, которые работают специфичным образом. Собственно для чтения 
используется метод Properties.load, который не использует file.encoding (там 
кодировка жёстко указана), поэтому единственный способ указать русские буквы - 
использовать формат "\uxxxx" и утилиту <A 
href="http://www.citforum.ru/internet/javascript/java_rbint.shtml#7">native2ascii</A>. 

<P align=justify>Метод Properties.save работает по разному в версиях JDK 1.1 и 
1.2. В версиях 1.1 он просто отбрасывал старший байт, поэтому правильно работал 
только с англицкими буквами. В 1.2 делается обратное преобразование в "\uxxxx", 
так что он работает зеркально к методу load. <A name=4></A>
<H4>Русские буквы в Servlet-ах.</H4>
<P align=justify>Ну, для чего эти самые Servlet-ы нужны, я думаю, Вы в курсе. 
Если нет - то лучше сначала прочитать документацию. Здесь же рассказывается 
только об особенностях работы с русскими буквами. 
<P align=justify>Так в чём же особенности? Когда Servlet посылает ответ клиенту, 
есть два способа послать этот ответ - через OutputStream (getOutputStream()) или 
через PrintWriter (getWriter()). В первом случае Вы записываете массивы байтов, 
поэтому применимы вышеописанные методы записи в файл. В случае же PrintWriter, 
он использует установленную кодировку. В любом случае необходимо правильно 
указать используемую кодировку при вызове метода setContentType(), для того, 
чтобы было правильное преобразование символов на стороне сервера. Это указание 
должно быть сделано перед вызовом getWriter() или перед первой записью в 
OutputStream. Пример: <PRE> public void doPost(HttpServletRequest request,HttpServletResponse response)
    throws ServletException, IOException
 {
  response.setContentType("text/html; charset=windows-1251"));
  PrintWriter out = response.getWriter();
  // Отладочный вывод названия кодировки для проверки
  out.println( "Encoding: " + response.getCharacterEncoding() );
  ...
  out.close();
</PRE>
<P align=justify>Это по поводу отдачи ответов клиенту. Со входными параметрами, 
к сожалению не так просто. Входные параметры кодируются броузером побайтно в 
соответствии с MIME-типом "application/x-www-form-urlencoded". Как рассказал <A 
href="mailto:mailto:Alexey_Mendelev@net-burg.com">Алексей Менделев</A> русские 
буквы броузеры кодируют, используя текущую установленную кодировку. Ну и, 
разумеется, ничего о ней не сообщают. Соотвественно, например, в JSDK 2.0 и 2.1 
это никак не проверяется. Собственно для раскодирования используются методы 
HttpUtils.parsePostData() и HttpUtils.parseQueryString(), которые просто 
обнуляют старший байт. Это зарегистрированная ошибка в JSDK (<A 
href="http://developer.java.sun.com/developer/bugParade/bugs/4154966.html">4154966</A>). 
К сожалению, эту ошибку закрыли как "Will not be fixed", с тем оправданием, что, 
дескать, раз в RFC на эту тему ничего не сказанно, то и делать мы ничего не 
будем. Однако, после переписки наших разработчиков в майл-листе <A 
href="http://archives.java.sun.com/cgi-bin/wa?A2=ind0004&amp;L=servlet-interest&amp;F=&amp;S=&amp;P=65074">SERVLET-INTEREST</A> 
дело, похоже, сдвинулось с мёртвой точки. По крайней мере на словах было обещано 
включить метод установки кодировки в спецификацию JSDK 2.3. 
<P align=justify>Пока же приходится обходиться своими средствами. Оригинальный 
способ работы с кодировками предлагает Russian Apache - <A 
href="http://apache.lexa.ru:8101/internals.html">здесь</A> расписано, как 
именно. Судя по отзывам, не имеет проблем с русскими и система <A 
href="http://www.caucho.com/">Resin</A>. 
<P><A href="http://servlets.chat.ru/">Своё</A> решение проблемы так же предложил 
Вячеслав Педак. 
<P align=justify>Ну а самый простейший вариант извлечь таки символы - передавать 
в комплекте параметров имя кодировки (или, если вы уверены в текущей кодировке 
броузера, использовать предопределённую кодировку) и использовать метод 
перекодировки символов: <PRE> public void doPost(HttpServletRequest request,HttpServletResponse response)
    throws ServletException, IOException
 {
  // Кодировка сообщений
  // В связке MSIE 4.01 SP1 -&gt; JSDK 2.0 servletrunner.exe всегда выдаёт "ISO-8859-1"
  String requestEnc = request.getCharacterEncoding();
  // Некоторые servlet engine, не мудрствуя лукаво, возвращают null
  if( requestEnc==null ) requestEnc="ISO-8859-1";
  String clientEnc = request.getParameter("charset");
  if( clientEnc==null ) clientEnc="Cp1251";
  String value = new String(request.getParameter("value").getBytes(requestEnc),clientEnc);
</PRE>
<P>работает. :-) 
<P>В общем, опыт в написании Servlet-ов у меня небольшой, так что Ваши замечания 
будут приветствоваться. <A name=5></A>
<H4>GUI (AWT, Swing)</H4>
<P align=justify>Многие связывают неправильный вывод русских букв с неправильной 
установкой шрифта. Мне кажется, это связанно с тяжким опытом программирования на 
Windows 3.x, где основная причина действительно была в этом. В Java всё сложнее 
и редко действительно связанно со шрифтами. Я не разбирался со специфическими 
настройками броузеров, т.к. ещё не писал апплетов, только приложения, но думаю в 
последних версиях в этом плане всё нормально. 
<P align=justify>Где же действительно лежат наибольшие подводные камни? В 
основном это связанно с неправильной перекодировкой символов. Часть этих проблем 
и методы их решения описаны выше. Если у Вас все преобразования выполняются 
корректно, и для вывода используется шрифт Unicode, то есть очень большой шанс, 
что Ваша программа будет работать правильно. 
<P align=justify>Если проблемы всё же остались, тут нужно выяснить, где они 
возникают. Попробуйте запустить приложение под разными JVM, под разными 
платформами, на разных броузерах. 
<P align=justify>Если программа не работает нигде - значит проблема только в ней 
и в ваших руках. Внимательно перечитайте всё, что было написано выше, и ищите. 
Если же проблема проявляется только в конкретном окружении - значит дело, скорей 
всего в настройках. Где именно - зависит от того, какой графической библиотекой 
Вы пользуетесь. Если AWT - помочь может правильная настройка файла 
font.properties.ru. Пример корректного файла можно взять из Java 2. Если у Вас 
нет этой версии, можете скачать его с данного сайта: <A 
href="http://www.comita.spb.ru/users/sergeya/java/font.properties.ru">версия для 
Windows</A>, <A 
href="http://www.comita.spb.ru/users/sergeya/java/Linux/font.properties.ru">версия 
для Linux</A>. Если у Вас установлена русская версия OS - просто добавьте этот 
файл туда, где лежит файл font.properties. Если же это англицкая версия, то 
нужно, или дополнительно сменить текущий язык при помощи задания настройки 
-Duser.language=ru или переписать этот файл вместо font.properties. Этот файл 
задаёт используемые шрифты и кодовые страницы. 
<P align=justify>С библиотекой Swing всё проще - в ней всё рисуется через 
подсистему Java2D. Надписи в стандартных диалогах (JOptionPane, JFileChooser, 
JColorChooser) переделать на русский очень просто - достаточно лишь создать 
несколько файлов ресурсов. Я это уже проделал, так что можете просто взять 
готовый <A 
href="http://www.comita.spb.ru/users/sergeya/java/swing_ru.jar">файл</A> и 
добавить его в свой CLASSPATH. Единственная проблема, с которой я столкнулся - в 
версиях JDK начиная с 1.2 rc1 и по 1.3 beta, русские буквы не выводятся под 
Win9x при использовании стандартных шрифтов (Arial, Courier New, Times New 
Roman, etc.) из-за ошибки в Java2D. Ошибка весьма своеобразна - со стандартными 
шрифтами изображения букв отображаются не в соответствии с кодами Unicode, а по 
таблице Cp1251 (кодировка Ansi). Эта ошибка зарегистрирована в BugParade под 
номером <A 
href="http://developer.java.sun.com/developer/bugParade/bugs/4192443.html">4192443</A>. 
По умолчанию в Swing используются шрифты, задаваемые в файле font.properties.ru, 
так что достаточно заменить их другими - и русские буквы появляются. К 
сожалению, набор рабочих шрифтов небольшой - это шрифты Tahoma, Tahoma Bold и 
два набора шрифтов из дистрибутива JDK - Lucida Sans * и Lucida Typewriter * (<A 
href="http://www.comita.spb.ru/users/sergeya/java/font.properties.ru.4.10">пример 
файла font.properties.ru</A>). Чем эти шрифты отличаются от стандартных - мне 
непонятно. 
<P align=justify>Начиная с версии 1.3rc1 эта проблема уже исправлена, так что 
можно просто обновить JDK. Так же надо учесть, что с оригинальной версией Win95 
поставляются шрифты, не поддерживающие Unicode - в этой ситуации можно просто 
скопировать шрифты из Win98 или WinNT. 
<P align=justify>Если же вам, кровь из носу, нужно использовать стандартные 
шрифты, работая в JDK 1.2, то можно компенсировать этот глюк, перекодировав 
строки текста непосредственно перед выводом. Сделать это можно, например, так: <PRE> public static String convertToWin9x(String s)
 {
  byte[] bb;
  try { bb = s.getBytes("Cp1251"); }
  catch( java.io.UnsupportedEncodingException e ) { return s; }
  char[] cb = new char[bb.length];
  for(int i=0; i &lt; bb.length; i++)
    {
     cb[i] = (char)( bb[i] &amp; 0x00FF );
    }
  return new String(cb);
 }
</PRE>
<P>Но только не забудьте - этот код будет работать только под Win9x и Sun 
JDK/JRE 1.2. 
<P align=justify>По поводу компилятора jikes. Как мне рассказали в конференции 
по Java (fido7.ru.java) при использовании этого компилятора русские буквы тоже 
появляются. Это на самом деле классический пример того, как один глюк 
компенсирует другой - jikes просто не учитывает кодировку исходников. Того же 
эффекта можно добиться, если указать javac кодировку ISO-8859-1 (Latin1) в 
ключике -encoding. Если при этом в исходниках русские символы записаны в 
кодировке Cp1251, то тем самым они вместо диапазона 0x400-0x4ff (стандартный 
диапазон Unicode для кириллицы) попадают в диапазон 0x80-0xff. Из-за 
вышеупомянутого глюка в среде Win9x кириллица в стандартных шрифтах отображается 
как раз в этом диапазоне и русские буквы появляются. Если же попробовать 
запустить программу в другой среде (например, в WinNT) - русских букв не будет, 
так как там этот глюк отсутствует. 
<P align=justify>Аналогично на подобную компенсацию можно нарваться, если 
поменять региональные настройки с русских на буржуйские. При этом, кроме всего 
прочего, меняется и кодировка по умолчанию (file.encoding) - вместо 1251 
становится 1252. Это приводит к тому, что, если при чтении файлов кодировка не 
была явно указана (и при компиляции не задавался ключик -encoding), то русские 
буквы переезжают в диапазон 0x80-0xff и создаётся впечатление нормальной работы. 
Разницу можно заметить на преобразованиях регистра и сортировках через 
java.text.Collator - они будут выполняться неверно. А если были использованы 
строковые константы - то на других платформах вы увидите только кракозяблы. 
<P align=justify>Ещё один способ - скачать версию Swing для JDK 1.1 и запускать 
приложение из под Microsoft JVM - там всё выводится корректно. Только не 
забудьте обновить MS JVM - те версии, что идут в комплекте с IE 4.x не совсем 
корректно работают. С сервера Microsoft можно скачать свежую версию, например 
5.00.3240 - с ней всё ОК. 
<P align=justify>Кстати, по поводу MS JVM. Непонятно по каким соображениям, но в 
ней отсутствуют все файлы кодировок русских букв, акромя Cp1251 (наверное, они 
таким образом пытались уменьшить размер дистрибутива). Если Вам нужны другие 
кодировки, например, Cp866, то нужно добавить соответствующие классы в 
CLASSPATH. Причём классы от последних версий Sun JDK не подходят - у Sun-а уже 
давно изменилась их структура, поэтому последние версии классов с Microsoft-ом 
не стыкуются (у MS осталась структура от JDK 1.1.4). На сервере Microsoft, в 
принципе, лежит полный комплект дополнительных кодировок (страница <A 
href="http://www.microsoft.com/Java/resource/misc.htm">"Miscellaneous 
Resources"</A>, ссылка "Additional I/O libraries"), но там файл размером около 3 
метров, а их сервер докачку не поддерживает :-). Мне удалось таки выкачать этот 
файл, я его перепаковал jar-ом, можете взять его <A 
href="http://www.comita.spb.ru/users/sergeya/java/sunio114.jar">отсюда</A>. <A 
name=6></A>
<H4>I18n (вывод чисел, дат и т.п.)</H4>
<P align=justify>Загадочная комбинация i18n расшифровывается просто - это 
сокращение от могучего слова Internationalization. 18 - это кол-во букв между i 
и n. Означает оно, в контексте Java, возможность автоматической подстройки 
программы под текущий язык и специфику страны. Делается это через использование 
класса Locale, представляющего язык и конкретную страну, и классов, которые 
знают, что с этим Locale делать. Большинство этих классов находятся в пакете 
java.text. 
<P align=justify>Основной класс, которым пользуются все остальные, - это 
java.util.ResourceBundle, который позволяет загружать различные виды ресурсов. 
Причём имя загружаемого класса или файла properties зависит от указанного Locale 
(или Locale по умолчанию - если ничего не указанно). 
<P align=justify>Имя искомого файла формируется при помощи добавления 
идентификатора языка и страны к имени ресурса. Например, если грузится ресурс 
resfile, а текущий Locale - ru_RU, то поиск его будет идти в следующем порядке: 
<OL>
  <LI>resfile_ru_RU.class 
  <LI>resfile_ru_RU.properties 
  <LI>resfile_ru.class 
  <LI>resfile_ru.properties 
  <LI>resfile.class 
  <LI>resfile.properties </LI></OL>
<P align=justify>Это позволяет легко добавлять описания для новых языков и 
стран. Большинство классов сами заботятся обо всей этой внутренней кухне, так 
что Вам об этом знать часто и не нужно. 
<P align=justify>Что касается дат, то само форматирование выполняется классом 
DateFormat. Получить формат, уже настроенный на язык и страну можно при помощи 
методов getDateInstance(), getTimeInstance() и getDateTimeInstance(). В качестве 
аргумента можно указать одну из констант для задания необходимого стиля формата. 
По умолчанию будет использован предпочтительный стиль для данного Locale. 
Допустимые константы: 
<P>
<TABLE border=1 cellPadding=3 cellSpacing=0>
  <TBODY>
  <TR>
    <TD>Константа</TD>
    <TD>Описание </TD>
    <TD>Пример</TD></TR>
  <TR>
    <TD>SHORT</TD>
    <TD>Полностью цифровой, короткий вывод </TD>
    <TD>25.01.99 или 17:40</TD></TR>
  <TR>
    <TD>MEDIUM</TD>
    <TD>Вывод средней длины </TD>
    <TD>25.01.1999</TD></TR>
  <TR>
    <TD>LONG</TD>
    <TD>Длинный вывод</TD>
    <TD>25 Январь 1999 г. или 17:23:32</TD></TR>
  <TR>
    <TD>FULL </TD>
    <TD>Вся информация Понедельник,</TD>
    <TD>25 января 1999 г. или 17:23:32 GMT+03:00</TD></TR></TBODY></TABLE>
<P>Пример: <PRE>// Вывод пользователю текущей даты
DateFormat df = DateFormat.getDateInstance();
String s = df.format(new Date());
...
// Вывод текущего времени без секунд
DateFormat df = DateFormat.getTimeInstance(DateFormat.SHORT);
String s = df.format(new Date());
</PRE>
<P align=justify>Если же вы хотите сами контролировать набор выводимых полей и 
их разделители, то для этого можно использовать класс SimpleDateFormat. 
<P align=justify>Аналогичным образом делается и форматирование чисел. За это 
отвечает класс NumberFormat. Получить форматы можно при помощи методов 
getInstance(), getNumberInstance(), getCurrencyInstance() и 
getPercentInstance(). Свой формат можно сконструировать при помощи класса 
DecimalFormat. <A name=7></A>
<H4>Об утилите native2ascii</H4>
<P align=justify>Эта утилита входит в состав Sun JDK и предназначена для 
преобразования исходных текстов к ASCII-виду. Эта утилита, при запуске без 
параметров, работает со стандартным входом (stdin) а не выводит подсказку по 
ключам, как остальные утилиты. Это приводит к тому, что многие и не догадываются 
о необходимости указания параметров (кроме, может быть, тех, кто нашёл в себе 
силы и мужество заглянуть таки в документацию :-). Между тем этой утилите для 
правильной работы необходимо, как минимум, указать используемую кодировку 
(ключик -encoding). Если этого не сделать, то будет использована кодировка по 
умолчанию (file.encoding), что может несколько расходится с ожидаемой. В 
результате, получив неверные кода букв (из-за неверной кодировки) можно 
потратить весьма много времени на поиск ошибок в абсолютно верном коде. <A 
name=8></A>
<H4>О методе перекодировки символов</H4>
<P align=justify>Этот метод многие используют неправильно, наверное, не совсем 
понимая его суть и ограничения. Он предназначен для восстановления верных кодов 
букв, если они были неверно проинтерпретированны. Суть метода проста: из 
полученных неверных символов, используя соответствующую кодовую страницу, 
восстанавливается исходный массив байтов. Затем из этого массива байтов, 
используя уже корректную страницу, получаются нормальные кода символов. Пример: <PRE>String res = new String( src.getBytes("ISO-8859-1"),"Cp1251");</PRE>
<P align=justify>Проблем в использовании этого приёма может быть несколько. 
Например, для восстановления используется неверная страница, или же она может 
измениться в некоторых ситуациях. Другая проблема может быть в том, что 
некоторые страницы выполняют неоднозначное преобразование byte &lt;-&gt; char. 
Смотрите, например, описание ошибки за номером <A 
href="http://developer.java.sun.com/developer/bugParade/bugs/4296969.html">4296969</A>. 

<P align=justify>Поэтому пользоваться этим методом стоит только в самом крайнем 
случае, когда уже ничто другое не помогает, и Вы чётко себе представляете, где 
именно происходит неверное преобразование символов. 
<P>&nbsp; <!-- end -->
<TABLE border=0 cellPadding=0 cellSpacing=0 width="100%">
  <TBODY>
  <TR>
    <TD bgColor=#daecd7><IMG border=0 height=4 
      src="Java Русские буквы и не только__.files/1x1.gif" width=1></TD></TR>
  <TR>
    <TD><IMG border=0 height=5 
      src="Java Русские буквы и не только__.files/1x1.gif" 
width=1></TD></TR></TBODY></TABLE>
<TABLE border=0 cellPadding=0 cellSpacing=0 width="100%">
  <TBODY>
  <TR>
    <TD bgColor=#008080>
      <TABLE border=0 cellPadding=1 cellSpacing=1 width="100%">
        <TBODY>
        <TR>
          <TD align=middle bgColor=#daecd7><A class=head 
            href="http://www.citforum.ru/">В начало</A></TD>
          <TD align=middle bgColor=#daecd7><A class=head 
            href="http://www.citforum.ru/internet/javascript/java_rbint.shtml#top">Наверх</A></TD>
          <TD align=middle bgColor=#daecd7><A class=head 
            href="http://www.citforum.ru/search.shtml">Поиск</A></TD>
          <TD align=middle bgColor=#daecd7><A class=head 
            href="http://www.citforum.ru/rubricator/">Рубрикатор</A></TD>
          <TD align=middle bgColor=#daecd7><A class=head 
            href="http://www.citforum.ru/news.shtml">Новости сервера</A></TD>
          <TD align=middle bgColor=#daecd7><A class=head 
            href="http://www.citmgu.ru/">Учебный центр</A></TD>
          <TD align=middle bgColor=#daecd7><A class=head 
            href="http://www.mistral.ru/">Книжный магазин</A></TD>
          <TD align=middle bgColor=#daecd7><A class=head 
            href="http://www.citforum.ru/advertising/">Реклама на 
        сервере</A></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE>
<TABLE border=0 cellPadding=0 cellSpacing=0 width="100%">
  <TBODY>
  <TR>
    <TD><IMG border=0 height=5 
      src="Java Русские буквы и не только__.files/1x1.gif" 
width=1></TD></TR></TBODY></TABLE>
<TABLE border=0 cellPadding=0 cellSpacing=0 width="100%">
  <TBODY>
  <TR>
    <TD>
      <FORM action=http://www.citforum.ru/cgi-bin/Click.cgi method=get></TD>
    <TD><INPUT name=Banner type=hidden value=Bottom></TD>
    <TD align=right width="100%"><FONT size=2>Быстрый переход &gt;&gt;&gt; 
      </FONT><SELECT name=Target size=1> <OPTION selected 
        value=http://www.citforum.ru/index.html>Индексная 
        страница</OPTION>&nbsp; <OPTION 
        value=http://www.citforum.ru/internet/index.shtml>Internet-технологии</OPTION>&nbsp; 
        <OPTION value=http://www.citforum.ru/nets/index.shtml>Сетевые 
        технологии</OPTION>&nbsp; <OPTION 
        value=http://www.citforum.ru/database/index.shtml>Базы 
        данных</OPTION>&nbsp; <OPTION 
        value=http://www.citforum.ru/operating_systems/index.shtml>Операционные 
        системы</OPTION>&nbsp; <OPTION 
        value=http://www.citforum.ru/programming/index.shtml>Программирование</OPTION>&nbsp; 
        <OPTION value=http://www.citforum.ru/hardware/index.shtml>Аппаратные 
        платформы</OPTION>&nbsp; <OPTION 
        value=http://www.citforum.ru/seminars/index.shtml>Материалы 
        конференций</OPTION>&nbsp; <OPTION 
        value=http://www.citforum.ru/mcp/index.shtml>MS-сертификация</OPTION>&nbsp; 
        <OPTION value=http://www.citforum.ru/pp/index.shtml>Пользователям и 
        преподавателям</OPTION>&nbsp; <OPTION 
        value=http://www.citforum.ru/cfin/index.shtml>Корпоративные 
        ресурсы</OPTION>&nbsp;</SELECT> <INPUT name=Referer type=hidden 
      value=Bottom><INPUT type=submit value=Go!></TD>
    <TD></FORM></TD></TR></TBODY></TABLE>
<TABLE border=0 cellPadding=0 cellSpacing=0 width="100%">
  <TBODY>
  <TR>
    <TD><IMG border=0 height=5 
      src="Java Русские буквы и не только__.files/1x1.gif" width=1></TD></TR>
  <TR>
    <TD bgColor=#daecd7><IMG border=0 height=4 
      src="Java Русские буквы и не только__.files/1x1.gif" 
width=1></TD></TR></TBODY></TABLE>
<TABLE border=0 cellPadding=4 cellSpacing=0 width="100%">
  <TBODY>
  <TR>
    <TD><FONT size=2>Комментарии: <A 
      href="mailto:info@citmgu.ru?Subject='From bottom of CIT FORUM'">mailto:info@citmgu.ru?Subject='From 
      bottom of CIT FORUM'</A></FONT></TD>
    <TD>&nbsp;</TD>
    <TD><!-- SpyLOG v2 f:0211 -->
      <SCRIPT language=javascript>
u="u266.74.spylog.com";d=document;nv=navigator;na=nv.appName;t="";p=1;
sz=" width=88 height=31 ";
hl=history.length;d.cookie="b=b";c=0;
bv=Math.round(parseFloat(nv.appVersion)*100);
if (d.cookie) c=1;n=(na.substring(0,2)=="Mi")?0:1;
if((n==0)||(bv >= 300)){rn=Math.random();t=(new Date()).getTimezoneOffset();} else {rn=0;}
z="p="+p+"&rn="+rn+"&t="+t+"&c="+c+"&hl="+hl;
if (self != top) { fr=1;} else { fr=0;}
r=escape(d.referrer);r1="";
sl="1.0";h=0;
</SCRIPT>

      <SCRIPT language=javascript1.1>
pl="";sl="1.1";
if((n==1) && (bv >= 300))
{ for(var i = 0; i < nv.plugins.length; i++)
pl += nv.plugins[i].name+":"; }
j = (navigator.javaEnabled() ? "Y" : "N");
</SCRIPT>

      <SCRIPT language=javascript1.2>
sl="1.2";s=screen;wh=s.width+'x'+s.height;
px=(n==0)?screen.colorDepth:screen.pixelDepth;z+="&wh="+wh+"&px="+px;
</SCRIPT>

      <SCRIPT language=javascript1.3>
sl="1.3"
</SCRIPT>

      <SCRIPT language=javascript>
y="";
y+="<a href='http://"+u+"/cnt?f=3&p="+p+"&rn="+rn+"' target=_blank>";
y+="<img src='http://"+u+"/cnt?";
y+=z+"&j="+j+"&sl="+sl+"&r="+r+"&r1="+r1+"&fr="+fr+"&pg="+escape(window.location.href)+"&pl="+escape(pl);
y+="' border=0 "+sz+" alt='SpyLOG'>";
y+="</a>";
d.write(y);
</SCRIPT>

      <SCRIPT language=javascript1.2><!--
if (n == 0) { d.write("<");d.write("!--"); }
//--></SCRIPT>
      <NOSCRIPT><A href="http://u266.74.spylog.com/cnt?f=3&amp;p=1" 
      target=_blank><IMG alt=SpyLOG border=0 height=31 
      src="Java Русские буквы и не только__.files/cnt.gif" 
      width=88></A></NOSCRIPT>
      <SCRIPT language=javascript1.2><!--
if (n == 0) { d.write("--");d.write(">"); }
//--></SCRIPT>
<!-- SpyLOG --></TD>
    <TD align=right vAlign=top>Copyright © <A 
      href="http://citforum.ru/cgi-bin/Click.cgi?Banner=cit_key.gif&amp;Target=http://www.citmgu.ru/&amp;Referer=TOP_INLINER"><IMG 
      border=0 height=38 
      src="Java Русские буквы и не только__.files/logo_cit.gif" 
  width=134></A></TD></TR></TBODY></TABLE>
<TABLE border=0 cellPadding=0 cellSpacing=0 width="100%">
  <TBODY>
  <TR>
    <TD bgColor=#daecd7><IMG border=0 height=4 
      src="Java Русские буквы и не только__.files/1x1.gif" width=1></TD></TR>
  <TR>
    <TD align=right><FONT face="Arial, sans-serif" size=1>Design by <A 
      href="mailto:ame@citmgu.ru">Andre M. 
Erofeev</A></FONT></TD></TR></TBODY></TABLE></P></BODY></HTML>
