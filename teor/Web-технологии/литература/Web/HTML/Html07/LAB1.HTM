<html>

<head>

<TITLE>Подготовка гипертекстовых документов для World Wide Web</TITLE>

</head>

<body bgcolor="#FFFFFF" link="#719709" vlink="#416700" alink="#800000" text="#000000">

<p>

<H3>Подготовка гипертекстовых документов для World Wide Web</H3>

<p><b><A NAME="SECTION001">Содержание</A>

</b>

<p>2.1<A NAME="tex2html4" HREF="#SECTION002">Введение</A>

<p>2.2<A NAME="tex2html5" HREF="#SECTION003">Язык HTML</A>

<br>2.2.1<A NAME="tex2html6" HREF="#SECTION0031">Структура HTML-документов</A>

<br>2.2.2<A NAME="tex2html7" HREF="#SECTION0032">Теги HTML</A>

<br>2.2.2.1<A NAME="tex2html8" HREF="#SECTION00321">Заглавные теги</A>

<br>2.2.2.2<A NAME="tex2html9" HREF="#SECTION00322">Форматирующие теги</A>

<br>2.2.2.3<A NAME="tex2html10" HREF="#SECTION00323">Комментарии</A>

<br>2.2.2.4<A NAME="tex2html11" HREF="#SECTION00324">Заголовки</A>

<br>2.2.2.5<A NAME="tex2html12" HREF="#SECTION00325">Шрифты</A>

<br>2.2.2.6<A NAME="tex2html13" HREF="#SECTION00326">Списки</A>

<br>2.2.2.7<A NAME="tex2html14" HREF="#SECTION00327">Цитаты и преформатированный текст</A>

<br>2.2.2.8<A NAME="tex2html15" HREF="#SECTION00328">Адреса</A>

<br>2.2.2.9<A NAME="tex2html16" HREF="#SECTION00329">Гипертекстовые ссылки</A>

<br>2.2.2.10<A NAME="tex2html17" HREF="#SECTION003210">Верстка таблиц</A>

<br>2.2.2.11<A NAME="tex2html18" HREF="#SECTION003211">Картрированные изображения</A>

<br>2.2.2.12<A NAME="tex2html19" HREF="#SECTION003212">Специальные символы</A>

<br>2.2.3<A NAME="tex2html20" HREF="#SECTION00330">Расширения программ просмотра</A>

<br>2.2.3.1<A NAME="tex2html21" HREF="#SECTION00331">Обзор расширений</A>

<br>2.2.3.2<A NAME="tex2html22" HREF="#SECTION00332">Расширения Netscape Navigator</A>

<br>2.2.3.3<A NAME="tex2html23" HREF="#SECTION00333">Расширения MS Internet Explorer</A>

<br>2.2.3.4<A NAME="tex2html24" HREF="#SECTION00334">Рамки (фреймы)</A>

<A NAME="SECTION002"></a>

<H3>2.1 Введение</H3>

<P>Web-страницы описываются на специальном языке, называемом HTML (HyperText

 Markup Language, Язык разметки гипертекстовой информации), ставшем основным языком описания документов в Internet. HTML является простым

 подмножеством универсального языка разметки документов SGML (Standard Generalized Markup Language, Стандартный язык разметки документов),

 являющегося стандартом для обмена документами между различными платформами. Точнее, весь синтаксис HTML полностью описывается с помощью SGML DTD

 (Document Type Definition). По этой причине почти все программы, совместимые с SGML, могут быть использованы при подготовке HTML-документов.

<P>За сравнительно короткое время разработчики Web-страниц прошли путь от простого перевода текстовых документов на язык HTML до создания

 красочных, искусно оформленных интерактивных страниц, с умело используемой графикой и различными стилями размещения текста на странице. Появилась профессия

 под названием ``Web-дизайнер'', то есть человек, специализирующийся на создании Web-страниц высшего качества. Некоторые современные

 Web-страницы можно со всей ответственностью назвать произведениями искусства.

<P>Интересно отметить некоторые особенности, отличающие верстку информации

 для Web и верстку для ``обычной'', то есть, бумажной технологии передачи документов. В отличие от языков описания печатных документов,

 вроде известного языка PostScript, упор делается на переносимость <B>информационного наполнения</B>

 страниц, а не их <B>внешнего оформления</B>. Поясним сказанное на примере:

 при переносе документа на языке PostScript между двумя компьютерами <B>гарантируется</B> сохранение его внешнего вида, то есть размеров,

 шрифтового оформления; тогда как для HTML-документов гарантируется лишь

 сохранение логической структуры. Это происходит потому, что никто не гарантирует, что устройство,

 на котором пользователь будет просматривать Web-страницу, не окажется черно-белым алфавитно-цифровым терминалом 1970-го года выпуска! Или же

 что программа просмотра, используемая пользователем, способна корректно

 отобразить графические вставки в различных форматах. И поэтому Web-дизайнер

 несет особую ответственность за представление информации на своих страницах.

<A NAME="SECTION003"></a>

<H3>2.2 Язык HTML</H3>

<H4><A NAME="SECTION0031">2.2.1 Структура HTML-документов</H4>

<P>Web-страницы описываются на специальном языке, называемом HTML (HyperText

 Markup Language, Язык разметки гипертекстовой информации), который позволяет

 осуществлять простое форматирование текста, вставку графики, а также

 составление таблиц и цветовое оформление документов.

<P>Будучи подмножеством языка SGML, HTML имеет <I>теговую</I> структуру. Это означает, что в тексте встречаются комманды, изменяющие интерпретацию

 информации. Например, слово, напечатанное <I>курсивом</I>, в исходном

 тексте выглядит так:

<P>

<PRE>слово, напечатанное &lt;I&gt;курсивом&lt;/I&gt;.</PRE>

<P>

Теги записываются в угловых скобках и могут содержать дополнительные

 параметры. Большинство тегов располагается в виде ``скобок'' вокруг текста (как теги

 &lt;I&gt; и &lt;/I&gt; вокруг слова ``курсивом'' в приведенном выше примере).

 Благодаря этому свойству, теги можно подразделить на <I>открывающие</I> и

 <I>закрывающие</I>. Не у всех тегов существуют соответствующие им закрывающие,

 такие теги иногда называют ``пустыми''(empty). Общую структуру открывающего тега можно записать так:

<P>

<PRE> &lt;NNNNN Name=&quot;Value&quot; .....&gt;</PRE>

Соответствующий закрывающий тег быдет иметь вид

<PRE> &lt;/NNNNN&gt;</PRE>

Далее под словом ``тег'' мы будем понимать совокупность открывающего

 и соответствующего ему закрывающего (если таковой существует) элементов.

<A NAME="SECTION0032"></a>

<H4>2.2.2 Теги HTML</H4>

<P>Рассказ о тегах языка HTML поведем на примере создания некоторой

 Web-страницы. Пусть перед нами стоит задача сделать страницу, посвященную

 некоторой личности (например, самому читателю), тогда такая Web-страница

 будет называться ``домашней'' (homepage). Сейчас будут рассмотрены

 теги языка, а применение их на странице будет оставлено Читателю

 в качестве упражнения.

<P>

<A NAME="SECTION00321"></a>

<h4>2.2.2.1 Заглавные теги</H4>

<P>Начиная писать HTML-документ, имеет смысл идентифицировать его как

 таковой. Такая идентификация достигается путем вставления в самое начало

 документа тегов &lt;!DOCTYPE HTML PUBLIC ``-//W3C//DTD HTML 3.2//EN''&gt; и

 &lt;HTML&gt; (соответственно, в конец документа, закрывающего тега &lt;/HTML&gt;; никогда не забывайте закрывать скобки!).

 Тег DOCTYPE является тегом языка SGML и объявляет, что документ будет

 описан в соответствии со спецификацией HTML 3.2. Тег HTML указывает на начало

 документа. Теперь пора подумать об информационном наполнении. Начнем, естественно, с заголовка.

 Заголовок HTML-файла находится в обязательной секции &lt;HEAD&gt;,

<A NAME="Mhead">&#160;</A> которая должна находиться в самом начале, то есть сразу после тега &lt;HTML&gt;. Оформляется заголовок с помощью

 тега &lt;TITLE&gt;. Назовем наш документ <I>``The first homepage''</I>. Ниже приведен листинг получившегося HTML-документа:

<P>

<PRE>&lt;HTML&gt;

&lt;HEAD&gt;

&lt;TITLE&gt;The first homepage&lt;/TITLE&gt;

&lt;/HEAD&gt;

&lt;/HTML&gt;</PRE>

<P>Попробуем просмотреть этот файл с помощью какой-нибудь программы просмотра,

 например, Navigator фирмы Netscape Communications Corp. После загрузки

 экран программы остался пустым. ``А где же заголовок?'',- спросит возмущенный

 читатель. Присмотритесь повнимательней к ЗАГОЛОВКУ ОКНА программы просмотра

 в оконной системе и убедитесь, что заголовок отображен именно там. Тег &lt;TITLE&gt;

 позволяет задавать название для всего документа.

 Это название будет появляться в заголовке окна программы просмотра, а

 также будет появляться в списке закладок (bookmarks, shortcuts в различных

 терминологиях) при создании таковых.

<P>Другими элементами секции &lt;HEAD&gt;...&lt;/HEAD&gt; являются:

<p>&lt;BASE параметры&gt; - тег для указания URL документа. Тег имеет такие параметры:

<p><STRONG>HREF</STRONG> - указывает базовый URL <!--(про URL см. стр. <A HREF="text.html#MURL"><IMG  ALIGN=BOTTOM ALT="gif" SRC="cross.gif"></A>)-->

 для документа. Замечание: URL должен быть указан в полной форме.

<p><STRONG>TARGET</STRONG> - указывает окно для отображения документов, на которые ссылается данный документ.

<p>&lt;STYLE&gt; - тег, зарезервированный для использования в будущем для

 так называемых ``стилей'' (stylesheets). Точный синтаксис тега пока

 недокументирован.

<p>&lt;META параметры&gt; - тег, который теоретически должен использоваться для включения в документ некой специфичной информации для программ-индексаторов,

каталогизаторов и т.&nbsp;д. Кроме того, у него есть несколько

полезных параметров, позволяющих страницам сменять друг друга по прошествии

определенных промежутков времени.

Тег имеет следующие параметры:

<p><STRONG>HTTP-EQUIV=``refresh''</STRONG> - указывает программе просмотра, что нужно перепрыгнуть на страничку, указанную в параметре CONTENT по прошествии указанного там же промежутка времени.

<p><STRONG>CONTENT=``<I>number;</I> url=<I>URL</I>''</STRONG> - задает временной интервал <I>number</I> и <I>URL</I> для команды HTTP-EQUIV=``refresh''.

<p><STRONG>NAME=``description'' или NAME=``keywords''</STRONG> - указывает серверу, как интерпретировать параметр CONTENT - как описание документа или как список ключевых слов.

<P><STRONG>CONTENT=``text или список значений''</STRONG> - это не опечатка. У параметра CONTENT два смысла: один для команды HTTP-EQUIV=``refresh'', другой для команды NAME. В последнем случае значение параметра определяет либо описание документа (если параметр NAME=``description''), либо список разделенных запятыми ключевых слов (если параметр NAME=``keywords'').

<P>Теперь перейдем к оформлению содержимого документа. В терминах HTML содержимое документа называется его ТЕЛОМ, или по-английски - BODY. Именно так и называется

тег, в поле действия которого находится все содержимое (то есть, оно заключено между внутри тега &lt;BODY&gt;...&lt;/BODY&gt;). Тег &lt;BODY&gt;...&lt;/BODY&gt; может

 содержать дополнительные параметры, позволяющие изменить цвета,

 используемые в документе или назначить фоновую картинку:

<p><STRONG>BGCOLOR</STRONG> - определяет цвет фона документа. Цвет может быть задан как <I>RGB-триплет</I> (см. Приложение П1 к отчету) (например, BGCOLOR=&quot;#FFFFFF&quot;--белый цвет), или быть одним из предопределенных символьных имен:

 <PRE><TT> aquablackbluefuchsia

                 gray		 green		 lome		 maroon

                 navy		 olive		 purple		 red

                 silver		 teal		 white		 yellow

</TT></PRE>

<p><STRONG>BACKGROUND</STRONG> - позволяет задать фоновую картинку для документа. Картинка будет размножена (tiled) и покроет всю видимую площадь области отображения окна программы просмотра.

 <p><STRONG>TEXT</STRONG> - задает цвет текста документа. Цвет задается так же как и для параметра BGCOLOR.

<p><STRONG>LINK</STRONG> - задает цвет для текста и рамок изображений в активных зонах документа, содержащих ссылки (anchors).

<p><STRONG>VLINK</STRONG> - (Visited LINKs color) задает цвет для ранее выбранных ссылок.

<p><STRONG>ALINK</STRONG> - (Active LINKs color) задает цвет для ссылок <B>в момент</B> выбора.

<A NAME="SECTION00322"></a>

<h4>2.2.2.2 Форматирующие теги</H4>

<P>Если теперь набрать внутри тела документа несколько строк текста,

 а потом просмотреть его в браузере (мы будем использовать этот англоязычный

 термин вместо длинного ``программа просмотра''), то в окне появится текст, написанный простым мелким шрифтом, причем имеющиеся в исходном тексте переводы строк не сохранятся. Браузеры сами ``заливают'' текст на страницу, исходя при этом из доступной

 ширины окна. Для того чтобы вставить ``насильный'' перевод строки, необходимо

 воспользоваться тегом &lt;BR&gt; . При отображении браузер переведет строку

 на месте появления этого тега. 

<br>ВНИМАНИЕ!  ТЕГ &lt;BR&gt; ИСПОЛЬЗУЕТСЯ  БЕЗ  ЗАКРЫВАЮЩЕГО  ЭЛЕМЕНТА &lt;/BR&gt;. В HTML есть еще несколько тегов, обладающих подобным свойством. Их обычно называют <I>пустыми</I>, так как они не содержат ``внутреннего'' наполнения.

 Если вам необходимо сделать так, чтобы в определенном месте текст НЕ МОГ быть разорван, напишите в этом месте тег &lt;NOBR&gt;

<P>Для разбивки текста на параграфы используется тег<BR> &lt;P параметры&gt;<BR> 

Точнее, параграф помещается внутрь тега &lt;P&gt;...&lt;/P&gt;, но так как вложенных параграфов не бывает, можно пропускать закрывающий тег

перед любым другим тегом, вызывающим вертикальный разрыв в тексте (такие теги

мы в дальнейшем будем называть <I>блочными</I>).

<P>Тег &lt;P&gt; имеет один параметр <B>ALIGN</B>, указывающий на способ

 выравнивания текста внутри параграфа: текст может быть выровнен по правому (RIGHT), левому (LEFT) краям или отцентрирован (CENTER). Если

 параметр опущен, текст выравнивается по левому краю.

<P>Чтобы отцентрировать параграф можно также пользоваться тегом<BR> &lt;CENTER&gt;...&lt;/CENTER&gt;

<P>Еще одним способом разделения текста на части можно назвать <I>горизонтальную линию</I>. Линия является элементом языка HTML

 и вставляется в текст посредством тега<BR> &lt;HR параметры&gt;,<BR> 

где параметры могут быть следующими:<BR>

<P>

<STRONG>WIDTH</STRONG> - задает ширину линии. Единицей измерения в HTML считается точка устройства вывода, то есть, указав в качестве параметра тегу &lt;HR&gt; WIDTH=100, вы создадите линию шириной 100 точек. Очевидно, что такой способ не очень удобен, так как документ может быть отображен на устройствах с различной разрешающей способностью (количеством точек по горизонтали и по вертикали) по-разному. По этой причине в HTML существует возможность задавать ОТНОСИТЕЛЬНЫЕ размеры элементов, то есть процент от общей ширины области отображения (окна браузера или листа бумаги).

 Пример: указав в качестве параметра тегу &lt;HR&gt; WIDTH=50%, вы получите линию в половину области отображения документа.

 <p><STRONG>SIZE</STRONG> - задает толщину линии.

 <p><STRONG>NOSHADE</STRONG> - если этот параметр задан, линия не будет иметь тени.

<A NAME="SECTION00323"></a>

<h4>2.2.2.3 Комментарии</H4>

<P>Как и во всяком языке программирования, в HTML есть способ закомментировать

часть текста так, чтобы она не обрабатывалась программами просмотра.

Комментарии заключаются между последовательностями &lt;&nbsp;!&nbsp;-&nbsp;-&nbsp; и -&nbsp;-&nbsp;&gt;.

Пример комментария:

<PRE>&lt;!-- этот текст закомментирован --&gt;</PRE>

<A NAME="SECTION00324"></a>

<H4>2.2.2.4 Заголовки</H4>

<P>Если посмотреть на получившуюся к этому моменту страницу, то она

 покажется однотонной и малопривлекательной. С первого взгляда даже

 непонятно, о чем она (если не смотреть на заголовок окна). Странице не

 хватает ``настоящего'' заголовка, то есть, заголовка в теле самого

 документа. HTML различает шесть различных видов заголовков. Для

 их создания используются теги &lt;H1&gt;...&lt;/H1&gt;,...,&lt;H6&gt;...&lt;/H6&gt;.

 Название тегов происходит от английского слова Heading (то есть,

 заголовок) что определяет их использование. Размер 1 соответствует

 самому крупному шрифту, размер 6 самому мелкому. Итак, озаглавим нашу

 страницу, напишем перед основным текстом строчку

<P>

<PRE>&lt;H1&gt;Welcome to my homepage!&lt;/H1&gt;</PRE>

<P>Теперь просмотрим нашу страницу в браузере. Теперь страница смотрится

 гораздо лучше чем раньше. Теги &lt;Hn&gt; являются блочными: в месте их применения происходит

 разрыв абзацев.

<A NAME="SECTION00325"></a>

<h4>2.2.2.5 Шрифты</H4>

<P>Другими средствами шрифтового оформления текста являются выделения

 <I>курсивом</I> и <B>жирным</B> шрифтом. Таким способом очень удобно

 выделять отдельные слова в тексте, а также, создавать заголовки. Например,

 очень удобно заголовки первого и второго уровней оформлять с помощью тегов

 &lt;Hn&gt;, а заголовки третьего уровня выделить жирным шрифтом. Выделение

 курсивом осуществляется с помощью тега &lt;I&gt; (от слова <I>Italic</I>),

 а жирным шрифтом -- с помощью тега &lt;B&gt; (от слова <I>Bold</I>).

<P>В HTML есть также понятие <I>emphasis</I> - обобщенное выделение.

 Оформляется оно с помощью тега &lt;EM&gt;...&lt;/EM&gt;. Такое выделение - средство

 описания логической структуры документа. Обычно выделенный таким способом текст отображается курсивом.

<P>Другим средством логического выделения можно считать тег<BR> 

&lt;STRONG&gt;...&lt;/STRONG&gt;<BR> 

Он используется для усиления участков текста. Содержимое тега обычно отображается жирным шрифтом.

<P>Изменить размеры и цвет шрифтов можно с помощью тега<BR> 

&lt;FONT параметры&gt;...&lt;/FONT&gt;<BR> 

Параметры могут быть следующими:

<p><STRONG>SIZE=``<I>value</I> или <I>value</I>''</STRONG> - задает абсолютный или относительный размер шрифта. Относительный размер задается по отношению к базовому размеру (см. далее). Диапазон принимаемых значений -- от одного до семи.

<p><STRONG>COLOR</STRONG> - указывает цвет для текста.

<p><STRONG>FACE</STRONG> - расширение Microsoft Internet Explorer и Netscape Navigator. Позволяет задать <I>гарнитуру</I> (или список гарнитур, из имеющихся в системе шрифтов будет выбран наиболее подходящий) для текста. Конечный результат зависит от количества и разнообразия шрифтов, установленных в системе. Пример:

<PRE>  &lt;FONT FACE=&quot;Arial, Times Roman&quot;&gt;

       Пример выделения текста другой гарнитурой.

       &lt;/FONT&gt;</PRE>

<P>Базовый размер шрифта для всего документа можно задать с помощью тега<BR> 

&lt;BASEFONT параметры&gt;. Параметр всего один:

<p><STRONG>SIZE</STRONG> - задает размер шрифта.

<P>Для того чтобы действительно привлечь пользователя, иногда может потребоваться

 мигающий текст. Заставить текст мигать можно, заключив его внутрь тега<BR> 

 &lt;BLINK&gt;...&lt;/BLINK&gt;<BR> 

 Пользоваться этим тегом надо с некоторой осторожностью, так как не всегда приятно наблюдать мигающие объекты.

<A NAME="SECTION00326"></a>

<h4>2.2.2.6 Списки</H4>

<P>Списки в HTML бывают трех типов: ненумерованные, нумерованные и

 так называемые списки терминов. Ненумерованный список оформляется с помощью блока<BR> 

 &lt;UL&gt;<BR> 

 &lt;LI&gt; элемент<BR> 

 &lt;LI&gt; элемент<BR> 

 ...<BR> 

 &lt;/UL&gt;<BR> 

 Список будет отображен примерно так:

<DL><UL><LI> Элемент 1<LI> Элемент 2<LI> ....

</UL> 

</DL>

<P>Нумерованный список отличается от ненумерованного тем, что около

 пунктов вместо жирных точек вставляются порядковые номера пунктов.

 Оформляется он в виде блока<BR> 

 &lt;OL&gt;<BR> 

 &lt;LI&gt; элемент<BR> 

 &lt;LI&gt; элемент<BR> 

 ...<BR> 

 &lt;/OL&gt;<BR> 

 Отобразится он в таком виде:

<DL><OL><LI> Элемент 1<LI> Элемент 2<LI> ....

</OL> 

</DL>

<P>Третим видом списка является список терминов. Он очень удобен для

 оформления всевозможных глоссариев. Оформить такой список можно с помощью блока<BR> 

 &lt;DL&gt;<BR> 

 &lt;DT&gt;Термин1 &lt;DD&gt;Описание1<BR> 

 &lt;DT&gt;Термин2 &lt;DD&gt;Описание2<BR> 

 ...<BR> 

 &lt;/DL&gt;<BR> 

 Вид у полученного списка будет примерно следующий:<BR> 

 <BR> 

 Термин1<BR> 

 Описание1<BR> 

 Термин2<BR> 

 Описание2<BR> 

 ...<BR> 

<A NAME="SECTION00327"></a>

<h4>2.2.2.7 Цитаты и преформатированный текст</H4>

<P>Иногда возникает ситуация, когда необходимо вставить в документ цитату,

 исходный текст программы или просто текстовый документ, где формат

 имеет значение и нежелательно, чтобы Web-браузер сам пытался вставлять

 переводы строк там, где он хочет. Язык HTML имеет для возможности для

 всех эти случаев.

<P>Цитаты в HTML оформляются с помощью тега<BR> 

&lt;BLACKQUOTE&gt; ... &lt;/BLACKQUOTE&gt;<BR> 

Браузер выделит цитату каким-либо способом, например шрифтом и/или вставит

горизонтальные отступы справа и слева.

<P>Чтобы вставить в документ исходный текст можно воспользоваться тегом<BR> 

&lt;CODE&gt; ... &lt;/CODE&gt;<BR> 

Текст будет выделен шрифтом фиксированной ширины.

<P>Случай, когда в документе необходимо присутствие текста с фиксированным

 форматом особенно распространен. Часто такая возможность применяется,

 например, при включении в текст содержимого электронных писем или статей из

 сети Usenet. Оформляется все это с помощью тега<BR> 

&lt;PRE&gt;<BR> 

текст1

...<BR> 

...<BR> 

текстN

&lt;/PRE&gt;<BR> 

При этом отображен он будет, по возможности, примерно так:<BR>

<P>

<PRE>текст1

...

...

текстN</PRE>

<P>

<A NAME="SECTION00328"></a>

<h4>2.2.2.8 Адреса</H4>

<P>В HTML есть средство для оформления адресов (адрес будет, по возможности,

выделен шрифтом). Конечно, никто не заставляет пользоваться этой возможностью, но без ее описания наша книга не была бы полной.

Адрес оформляется с помощью тега<BR> &lt;ADDRESS&gt; ... &lt;/ADDRESS&gt;<BR> 

Браузеры обычно выделяют его курсивом, то есть строка &lt;ADDRESS&gt; ул. Пирогова, д. 2 &lt;/ADDRESS&gt; будет отображена как<BR> 

<I>ул. Пирогова, д. 2</I>.

<A NAME="SECTION00329"></a>

<h4>2.2.2.9 Гипертекстовые ссылки</H4>

<P>

<A NAME="MURL">&#160;</A>

 Одной из самых мощных возможностей WWW является возможность организации

 гипертекстовых связей между документами. Прежде чем описывать средства

 языка HTML для организации таких связей, следует рассказать об идентификации

 ресурсов в Internet. Объемы информации в Internet огромны, и существует

 множество способов доступа к ним. Для указания местоположения отдельного

 ресурса используется запись под названием URL (Uniform Resource Locator). Она описывает способ доступа к ресурсу и его местоположение.

 URL имеет вид:<BR> 

<I>метод://[имя-пользователя@][хост][:порт][имя-ресурса]</I>,

где

<P><STRONG>метод</STRONG>  идентифицирует метод обращения к ресурсу,

<p><STRONG>имя-пользователя</STRONG> указывает на учетное имя пользователя в системе, обычно предполагается анонимный доступ.

<p><STRONG>хост</STRONG> указывает сетевое имя (или сетевой адрес) хоста, на котором содержится ресурс.

<p><STRONG>порт</STRONG>: номер порта для доступа к сервису.

<p><STRONG>имя-ресурса</STRONG> идентифицирует ресурс на хосте и зависит от метода доступа.

<P>

Существуют идентификаторы способов доступа к ресурсам для большинства сервисов

Internet. Обозначения таковы:

<P><STRONG>http</STRONG> - для доступа по протоколу HTTP, используемому в WWW.

<p><STRONG>ftp</STRONG>  -   для доступа по протоколу FTP.

<p><STRONG>telnet</STRONG>  -   для доступа по протоколу telnet, эмуляция терминала.

<p><STRONG>gopher</STRONG> -   для доступа к Gopher-серверам.

<P><STRONG>wais</STRONG>      -   для доступа к WAIS (Wide Area Information System).

<P><STRONG>news</STRONG>      -   для доступа к новостям Usenet.

<P><STRONG>file</STRONG>      -   для доступа к локальным файлам.

<P>

Чтобы оформить какой-либо элемент документа в качестве гипертекстовой

ссылки, достаточно лишь заключить его внутрь тега &lt;A&gt; (<I>anchor</I>).

Полный синтаксис тега таков:<BR> 

&lt;A параметры&gt;<BR> 

....<BR> 

&lt;/A&gt;<BR> 

где параметры могут быть следующими:<BR> 

<P><STRONG>HREF</STRONG> - обязательный параметр, определяет или URL или файл, на который мы ссылаемся. Если мы ссылаемся на файл, то поле HREF содержит имя файла в файловой системе Web-сервера.

  <P><STRONG>NAME</STRONG> - если этот параметр указан, то ссылка никуда не ссылается.

Неочевидно, но в этом случае тег &lt;A&gt; указывает <I>именованную метку</I> в документе, на которую потом можно будет сослаться используя символ # в параметре HREF.

  <P><STRONG>target</STRONG> - параметр, указывающий имя окна или рамки в которой будет отображен документ. Если окна или рамки с таким именем не существует, будет открыто новое окно.

<A NAME="SECTION003210"></a>

<H4>2.2.2.10 Верстка таблиц</H4>

<P>

Таблицы являются мощнейшим средством HTML для верстки страниц.

До появления в языке HTML средств верстки таблиц, нельзя было 

создать даже самый простой

многоколончатый текст или сводную таблицу, то после появления такой

возможности Web-дизайнеры стали использовать ее в полной мере и добиваться

сложных эффектов.

<P>

Создается таблица с помощью конструкции<BR> 

&lt;TABLE параметры &gt;<BR> 

&lt;CAPTION&gt;Заголовок&lt;/CAPTION&gt;<BR> 

&lt;TR параметры&gt;<BR> 

&lt;TD параметры&gt;<BR> 

...<BR> 

&lt;/TD&gt;<BR> 

....

&lt;/TR&gt;<BR> 

&lt;/TABLE&gt;<BR>

<P>

Тег TABLE начинает описание таблицы и может иметь следующие параметры:

<P><STRONG>BORDER</STRONG> - определяет толщину рамки таблицы. Если указано нулевое значение то рамка не отображается. Если этот параметр не указан, его значение считается нулевым (рамка не отображается).

<P><STRONG>WIDTH, HEIGHT</STRONG> - указывает размеры таблицы, если они должны быть  жестко заданы.

<P><STRONG>ALIGN</STRONG> - определяет, как должна быть выровнена таблица: справа (RIGHT),  слева (LEFT)  или в центре (CENTER) страницы.

<P><STRONG>CELLSPACING</STRONG> - число точек между отдельными ячейками в таблице.

<P><STRONG>CELLPADDING</STRONG> - число точек между рамкой и содержимым ячейки.

<P>

С помощью тега &lt;TR параметры&gt;...&lt;/TR&gt; оформляются строки таблиц.

Он может иметь следующие параметры:<BR> 

<P><STRONG>ALIGN</STRONG> - используется для задания способа горизонтального форматирования данных внутри

ячеек: они могут прижиматься к правому (RIGHT), левому (LEFT) краям или

центрироваться (CENTER).

<P><STRONG>VALIGN</STRONG> - используется для задания способа вертикального форматирования данных внутри

ячеек: они могут прижиматься к верхнему (TOP), нижнему (BOTTOM) краям,

центрироваться (MIDDLE) или иметь общую базовую линию (BASELINE).

<P>

Конкретные ячейки задаются с помощью тега &lt;TD параметры&gt;...&lt;/TD&gt;,

где параметры могут быть следующими:

<P><STRONG>WIDTH</STRONG> - задает ширину ячейки.

<P><STRONG>COLSPAN</STRONG> - определяет, сколько колонок таблицы ячейка будет перекрывать.

<P><STRONG>ROWSPAN</STRONG> - определяет, сколько строк таблицы ячейка будет перекрывать.

<P><STRONG>NOWRAP</STRONG>  - если этот параметр указан, содержимое ячеек не будет переноситься,  чтобы влезать в ширину ячейки.

<P><STRONG>BGCOLOR</STRONG> - параметр, поддерживаемый современными браузерами:  указывает цвет фона ячейки в виде RGB-триплета или  символьного имени.

<P>

Еще один тег для оформления ячеек таблиц - тег &lt;TH&gt;...&lt;/TH&gt; - нужен для

задания заголовочных ячеек. Он во всем совпадает с тегом &lt;TD&gt;, но

в отличие от него, содержимое выдается жирным шрифтом и центрируется.

<P>

Если нужно задать заголовок ВСЕЙ таблицы, используйте тег

&lt;CAPTION параметры&gt;...&lt;/CAPTION&gt;. Он должен быть внутри тега &lt;TABLE&gt;,

но вне описания ячеек. Тег имеет один параметр:

<p><STRONG>ALIGN</STRONG> - указывает положение заголовка: он может быть в верхней (TOP) или нижней (BOTTOM) части таблицы.<BR> 

Пример:

<PRE>&lt;TABLE BORDER=1 CELLSPACING=2 CELLPADDING=1 WIDTH=500&gt;

&lt;TR&gt;

 &lt;TD COLSPAN=3 ALIGN=CENTER&gt;A&lt;/TD&gt;

&lt;/TR&gt;

&lt;TR&gt;

 &lt;TD ROWSPAN=2 ALIGN=CENTER WIDTH=&quot;30%&quot;&gt;B&lt;/TD&gt;

 &lt;TD ROWSPAN=2 ALIGN=CENTER WIDTH=&quot;40%&quot;&gt;C&lt;/TD&gt;

 &lt;TD ALIGN=CENTER WIDTH=&quot;30%&quot;&gt;D&lt;/TD&gt;

&lt;/TR&gt;

&lt;TR&gt;

 &lt;TD ALIGN=CENTER&gt;E&lt;/TD&gt;

&lt;/TR&gt;

&lt;/TABLE&gt;</PRE>

<A NAME="SECTION003211"></a>

<h4>2.2.2.11 Картрированные изображения</H4>

<P>

Очень мощным средством организации гипертекстовых ссылок является

так называемые ``картрированые изображения'' (imagemaps). Они представляют

собой изображения с чувствительными областями, то есть, выделение различных

частей изображения указательным устройством приводит к движению по

гипертексту в различных ``направлениях''.

<P>

Картрированные изображения бывают двух типов: обрабатываемые на сервере

(server-side) или на клиенте (client-side).

<P>

Для создания карт на стороне клиента используется тег HTML под названием

&lt;MAP&gt;. Синтаксис тега таков:<BR> 

&lt;MAP NAME=<I>``имя карты''</I>&gt;<BR> 

&lt;AREA параметры&gt;<BR> 

...<BR> 

&lt;AREA параметры&gt;<BR> 

&lt;/MAP&gt;<BR> 

где параметры тега &lt;AREA&gt; могут быть такими:

<P><STRONG>SHAPE</STRONG> - определяет форму активной области для карты. Может принимать значения RECT, CIRCLE, POLY, DEFAULT, соответствующие областям

прямоугольной, круглой, многоугольной и области по умолчанию соответственно.

Все типы областей, кроме DEFAULT, требуют указания координат в атрибуте

COORDS.

<P><STRONG>COORDS</STRONG> - определяет координаты областей. В зависимости от типа области может иметь вид: для прямоугольной--значения координат верхнего левого

и правого нижнего углов, (<I>``x1,y1,x2,y2''</I>); для круговой--координаты

центра и радиус (<I>``x,y,r''</I>); для многоугольной--список координат вершин

(<I>``x1,y1,x2,y2,x3,y3,...''</I>);

<P><STRONG>HREF</STRONG> - определяет URL, на который ссылается данная область.

<P><STRONG>NOREF</STRONG> - указывает, что область ``мертва'', то есть за ней не скрывается ссылка.

<P>

Чтобы использовать локальную карту на изображении в параметре USEMAP

тега &lt;IMG&gt; необходимо указать имя карты.

Например:

<PRE>&lt;MAP NAME=&quot;mymap&quot;&gt;

&lt;AREA SHAPE=&quot;RECT&quot; COORDS=&quot;420,220,520,260&quot; HREF=\\

                        &quot;http://www.some.com/rect/&quot;&gt;

&lt;AREA SHAPE=&quot;CIRCLE&quot; COORDS=&quot;320,150,30&quot; HREF=\\

                       &quot;http://www.some.com/circle&quot;&gt;

&lt;AREA SHAPE=&quot;POLY&quot; COORDS=&quot;150,450,300,450,225,240&quot; \\

                     HREF=&quot;http://www.some.com/poly&quot;&gt;

&lt;AREA SHAPE=&quot;DEFAULT&quot; HREF=&quot;http://www.some.com/&quot;&gt;

&lt;/MAP&gt;

......

&lt;IMG SRC=&quot;picture.gif&quot; ALT=&quot;Imagemap&quot; BORDER=&quot;0&quot; WIDTH=&quot;640&quot; \\

                                HEIGHT=&quot;480&quot; USEMAP=&quot;#mymap&quot;&gt;</PRE>

даст примерно слежующую карту на изображении:

<P>

<CENTER><img src="imap.gif" ALT="gif image"><BR>

Рис. 2.2.1: Пример карты на изображении</CENTER>

<P>

Для того, чтобы создать карту, обрабатываемую на сервере, необходимо

административное вмешательство, так как на сервере придется изменять

файл конфигурации для CGI-модуля обработки информации от карты.

<P>

При использовании различных Web-серверов формат описания карты

на сервере может варьироваться. Два наиболее распространенных формата

произошли от HTTP-серверов NCSA и CERN. Приведем пример использования

карты с сервером NCSA httpd.<BR> 

На стороне сервера, файл (например) <I>/usr/local/etc/httpd/conf/imagemap.conf</I>:

<PRE># This is a map for NCSA server

test_map : /home/joe/public_html/maps/test.map</PRE>

Использовать эту карту можно примерно таким образом:

<PRE>&lt;A HREF=&quot;http://www.myhost.domain/cgi-bin/imagemap/test_map&quot;&gt;

&lt;IMG SRC=&quot;test_img.gif&quot; ALT=&quot;Server-side imagemap&quot; WIDTH=&quot;320&quot; \

HEIGHT=200 ISMAP&gt;&lt;/A&gt;</PRE>

Ключевым в данном примере является слово ISMAP, которое указывает браузеру,

что при активации изображения необходимо послать серверу информацию

о координатах курсора указательного устройства относительно изображения,

после чего ждать от сервера ответа в виде URL, на который браузер должен

``перейти''.

<P>

Видно, что для реализации карты, обрабатываемой сервером, требуется

больше шагов, но иногда без карт такого рода просто не обойтись: например,

когда требуется ТОЧНО знать координаты внутри изображения (скажем, когда

обрабатывается какая-либо шкала).

<P>

Для создания карт существует множество программ для различных OS,

например ImageMap компании <a href=http://www.boutell.com>Boutell.Com</a>.

Эта программа существует в версиях для MS Windows и для Linux.

<A NAME="SECTION003212"></a>

<h4>2.2.2.12 Специальные символы</H4>

<P>

Некоторые общеупотребимые символы не имеют своих мест на клавиатуре,

например значок &#169;. Другие же трактуются браузерами как

командные последовательности, как, например, угловые скобки, в которые

заключаются теги языка HTML. Очевидно, должен быть способ набора таких

символов в текст. В HTML существует набор <I>макропоследовательностей</I>,

которые превращаются браузерами в соответствующие им ``непечатные''

символы. Очевидно, что не во всех шрифтах есть полный набор символов,

и браузер не во всех ситуациях будет способен их корректно отобразить.

Но для полного описания документа все особые символы должны быть

правильно закодированы.

 Приведем список специальных символов и соответствующие им

макрокоманды языка.

<P>

<TABLE BORDER>

<TR><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP>

 &amp; </TD><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP> &amp;amp; </TD><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP> Амперсанд </TD></TR>

<TR><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP>&lt; </TD><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP> &amp;lt; </TD><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP> Левая угловая скобка </TD></TR>

<TR><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP>&gt; </TD><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP> &amp;gt; </TD><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP> Правая угловая скобка </TD></TR>

</TABLE>

<br>Table 2.2.1: Специальные символы

<P>

Полный перечень всех специальных символов вместе с их кодами приведен

в Приложении П1 к отчету.

<A NAME="SECTION00330"></a><h4>2.2.3 Расширения программ просмотра</H4>

<A NAME="SECTION00331"></a><h4>2.2.3.1 Обзор расширений</H4>

<P>

Некоторые браузеры кроме поддержки базового языка HTML обладают

 также дополнительными возможностями.

<P>

Первым браузером, имевшим действительно значительные расширения стал

Netscape Navigator. Популярность использования расширенных возможностей

Netscape была настолько высока, что они вошли в новый проект стандарта HTML 3.2.

<P>

Его конкурент, Microsoft Internet Explorer, предоставляет разработчикам Web-страниц еще больший простор; но тот факт, что

 он функционирует лишь на одной платформе, делает разработку специфичных

 для него документов не очень привлекательной (если, конечно, ВСЕ

пользователи ваших страниц не работают в Microsoft Windows и Internet

Explorer).

<P>

Большинство мелких расширений представляют собой дополнительные параметры

или значения параметров различных тегов. Они обсуждались нами во время

обсуждения тегов HTML.

<P>

Самыми существенными расширениями, конечно, являются внутренние языки

браузеров: JavaScript в <a href=http://home.netscape.com/>Netscape Navigator</a> и VBScript в <a href=http://www.microsoft.com/>MS Internet Explorer</a>.

Обсуждение этих языков выходит за рамки данной книги, их описания могут

быть найдены на серверах их производителей.

<A NAME="SECTION00332"></a><h4>2.2.3.2 Расширения Netscape Navigator</H4>

<P>

Расширения Netscape Navigator в массе своей нашли отражение в проекте

стандарта HTML 3.2. Тем не менее, компания Netsacape Communications Corp

продолжает оснащать свой браузер все новыми

и новыми возможностями. Мы не будем их здесь описывать так как браузер

постоянно совершенствуется и меняется, поэтому рекоммендуется просто

получать информацию о всех новейших возможностях прямо с узла <a href=http://www.netscape.com>Netscape

</a>.

<A NAME="SECTION00333"></a><h4>2.2.3.3 Расширения MS Internet Explorer</H4>

<P>

Компания Microsoft оснастила свой продукт очень сложными эффектами

и возможностями. Примеры: плавающие рамки, ``летающий текст'', встраиваемые компоненты

ActiveX. К сожалению, большинство дополнительных возможностей программы

Internet Explorer тесно связано с использованием Microsoft Windows, и являются

непереносимыми. Так же как и о расширениях Navigator, читайте фирменные

руководства по расширенному языку HTML на узле <a href=http://www.microsoft.com>Microsoft</a>

<A NAME="SECTION00334"></a><h4>2.2.3.4 Рамки (фреймы)</H4>

<P>

Мощным визуальным средством являются так называемые <I>рамки или фреймы</I> (frames).

С помощью рамок область отображения браузера может быть разделена

на отдельные части, содержащие различные документы. При этом возможно

задание связей между рамками так, что выбор ссылки в одной рамке может

приводить к отображению запрошенного документа в другой. Это позволяет

создавать очень удобные в использовании документы (при неправильном

применении можно также создать и очень неудобные).

Рамки на сегодняшний день поддерживаются в последних версиях таких браузеров,

как Netscape Navigator (начиная с версии 2.0) и MS Internet Explorer (версии

3.0 и выше), но популярность применения

 рамок растет, и похоже, что вскоре к этим браузерам добавятся новые.

<P>

Рамки описываются в специальном HTML-документе, называемом

<I>Документом Описания Рамок</I>. Этот документ содержит описание

числа, размеров и положения рамок, а также URL-и их содержимого.

Нельзя пытаться вписать содержимое рамок в описание,

оно должно находиться в отдельных документах.

<P>

При описании рамок тег &lt;BODY&gt; заменяется на тег<BR> 

&lt;FRAMESET параметры&gt;<BR> 

...<BR> 

описания содержимого рамок<BR> 

...<BR> 

&lt;/FRAMESET&gt;<BR> 

Тег будет игнорироваться браузером, если перед ним встретятся

любые теги, в обычном случае встречающиеся внутри тега &lt;BODY&gt;.

Теги &lt;FRAMESET&gt; могут быть вложенными, что позволяет, как Читатель

увидит далее, создавать очень сложные конструкции.

Параметры тега &lt;FRAMESET&gt; могут быть следующими:

<P><STRONG>ROWS=``x1,x2,... или x1%,x2%,... или x1*,x2*,...''</STRONG> - этот параметр

описывает рамки как строки различной высоты. Высоты рамок задаются

списком разделенных запятыми значений. Высоты измеряются в точках, процентном

отношении от общей высоты области отображения, либо как относительные величины.

Сумма высот всех рамок должна быть равна высоте всей области отображения.

Если этого не происходит, браузеры сами корректируют значения.

 <P><STRONG>COLS=``x1,x2,... или x1%,x2%,... или *''</STRONG> - используется для

описания рамок как столбцов различной ширины. Используется так же, как

параметр ROWS.

<P>

Примеры:

<PRE>&lt;FRAMESET ROWS=&quot;3*,*&quot;&gt;</PRE>

задаст две горизонтальные рамки, причем первая (верхняя) будет в три

раза выше второй (нижней).

<PRE>&lt;FRAMESET ROWS=&quot;100,*,50&quot;&gt;</PRE>

задаст три горизонтальные рамки, причем первая (верхняя) будет иметь

высоту 100 точек, третья (нижняя) будет иметь высоту 50 точек, а вторая

(средняя) займет все оставшееся пространство.

<PRE>&lt;FRAMESET COLS=&quot;70%,30%&quot;&gt;</PRE>

задаст две вертикальные рамки, причем первая (левая) будет иметь

ширину 70% общей ширины области отображения, а вторая (правая) -- 30%.

<P>

Для задания содержимого рамки используется тег &lt;FRAME параметры&gt;.

Параметры могут быть следующими:<BR> 

<P><STRONG>SRC</STRONG> - указывает URL документа, который должен быть отображен в рамке. Если параметр не указан, рамка останется пустой.

<P><STRONG>NAME</STRONG> - значение этого параметра определяет имя для рамки. Впоследствии по этому имени на рамку можно будет сослаться с помощью параметра TARGET тега &lt;A&gt;.

<P><STRONG>SCROLLING</STRONG> - показывает, можно ли проматывать содержимое документа в рамке. Может принимать следующие значения:

<P><STRONG>YES</STRONG> - содержимое рамки МОЖЕТ проматываться.

<P><STRONG>NO</STRONG> - содержимое рамки НЕ может проматываться.

<P><STRONG>AUTO</STRONG> - браузер решает, отображать линейку прокрутки или нет (исходя из длины документа). Это значение иcпользуется по умолчанию.

<P><STRONG>NORESIZE</STRONG> - если этот параметр указан, пользователь не сможет  изменить размеры рамки. По умолчанию пользователь МОЖЕТ  изменять размеры отображаемых рамок (например, таская  границу рамки указательным устройством).

<P><STRONG>MARGINWIPH</STRONG> - указывает на величину горизонтального отступа внутри рамки.

<P><STRONG>MARGINHEIGHT</STRONG> - указывает на величину вертикального отступа внутри рамки.

<P>

Пример:

<PRE>&lt;FRAME SRC=&quot;file1.html&quot; NAME=&quot;myframe1&quot; SCROLLING=NO\

MARGINWIDTH=5&gt;</PRE>

дает рамке имя <I>myframe1</I> и отображает в ней файл <I>file1.html</I>,

причем линейка прокрутки не отображается, ширина горизонтального отступа

устанавливается в 5 точек, и пользователь может свободно менять размеры

рамки.

<P>

Более полный пример:

<PRE>&lt;FRAMESET ROWS=&quot;50%,50%&quot;&gt;

 &lt;FRAMESET COLS=&quot;150,*,150&quot;&gt;

  &lt;FRAME SRC=&quot;frame1.html&quot; NAME=&quot;Frame1&quot;&gt;

  &lt;FRAME SRC=&quot;frame2.html&quot; NAME=&quot;Frame2&quot;&gt;

  &lt;FRAME SRC=&quot;frame3.html&quot; NAME=&quot;Frame3&quot;&gt;

 &lt;/FRAMESET&gt;

 &lt;FRAMESET COLS=&quot;50%,50%&quot;&gt;

  &lt;FRAME SRC=&quot;frame4.html&quot; NAME=&quot;Frame4&quot;&gt;

  &lt;FRAME SRC=&quot;frame5.html&quot; NAME=&quot;Frame5&quot;&gt;

 &lt;/FRAMESET&gt;

&lt;/FRAMESET&gt;</PRE>

соответствует примерно следующей раскладке рамок в области отображения:

<P>

<CENTER>

<img src="frames.gif" ALT="Frames example">

<p>Рис. 2.2.2: Вот так будут располагаться рамки из примера

</CENTER>

<P>

Что же происходит, если браузер не понимает рамок?

Пользователь видит абсолютно чистый экран и не может добраться до нужной

ему информации.

Как сделать так, чтобы такая ситуация не возникала?

Разработчики расширений предусмотрели такую ситуацию и придумали тег,

содержимое которого никогда не отображается в браузере, понимающем рамки,

тогда как ``глупый'' браузер, увидя незнакомый тег, честно отобразит его

содержимое без применения каких-либо хитростей.

Такой тег называется<BR> &lt;NOFRAMES&gt;<BR> Внутри него рекомендуется

располагать ссылки на документы, не содержащие рамок.

<P>

Для организации связей между рамками разработчики предусмотрели

параметр TARGET для тега &lt;A&gt;. Он также может применяться

в тегах &lt;BASE&gt;, &lt;AREA&gt; и &lt;FORM&gt;.

</body>
</html>

