<HTML>

<!--

Author:	Paul Khramtsov

Date:	May 17, 1998

-->

<HEAD>

<title>Web-engineering (Introduction to the JavaScript. Functions.)</title>

<link rel="stylesheet" type="text/css" href="page.css" tppabs="http://webclass.polyn.kiae.su/classes/css/page.css">

<!--Charset-->

<script language=JavaScript src="jsc.pgm" tppabs="http://webclass.polyn.kiae.su/classes/css/jsc.pgm"></script>
<script language=JavaScript>
<!--



// -->

</script>

</HEAD>

<body style="color:navy;background-color:white;background-image:url(../images/main/rope.gif);" onLoad="jump();">


<SCRIPT SRC="count.js" tppabs="http://counter.hotlog.ru/cgi-bin/hotlog/count.js"></SCRIPT>
<SCRIPT LANGUAGE="JavaScript">js=0</SCRIPT>
<SCRIPT LANGUAGE="JavaScript1.1">js=1</SCRIPT>
<SCRIPT LANGUAGE="JavaScript1.2">js=2</SCRIPT>
<SCRIPT LANGUAGE="JavaScript1.3">js=3</SCRIPT>
<SCRIPT LANGUAGE="JavaScript">HotLOG(1686,js)</SCRIPT>
<noscript><img src="count-s=1686" tppabs="http://hit.hotlog.ru/cgi-bin/hotlog/count?s=1686" border=0 width=1 height=1></noscript>
<!-- Логотип -->

<div class=logo>

<table border=0 cellpadding=0 cellspacing=0 width=560>

<tr><td><img src="sea003.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/sea003.gif" width=560 height=5 border=0 hspace=0 vspace=0 align=left></td></tr>

<tr><td><img src="sea000.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/sea000.gif" width=560 height=15 border=0 hspace=0 vspace=0 align=left></td></tr>
<!--
<tr><td><a href=../homef.htm onMouseover="document.sea001.src='../images/main/hweb.gif';return true;" onMouseout="document.sea001.src='../images/main/sea001.gif';return true;"><img name=sea001 src=../images/main/sea001.gif width=560 height=15 border=0 hspace=0 vspace=0 align=left></a></td></tr>
-->
<tr><td><img name=sea001 src="sea001.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/sea001.gif" width=560 height=15 border=0 hspace=0 vspace=0 align=left></td></tr>

<tr><td><img src="sea002.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/sea002.gif" width=560 height=5 border=0 hspace=0 vspace=0 align=left></td></tr>

</table>

</div>

<!-- Конец логотипа -->

<!-- Главное меню -->

<div class=menu>

<table border=0 cellpadding=0 cellspacing=0 width=560>

<tr>

<td><a href="jsid.htm" tppabs="http://webclass.polyn.kiae.su/classes/jsi/jsid.htm"><img src="manual.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/manual.gif" border=0 hspace=0 vspace=0 height=20 width=81 alt=Конспект></a></td>

<td><img src="ref.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/ref.gif" border=0 hspace=0 vspace=0 height=20 width=81 alt=Справочник></td>

<td><img src="work.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/work.gif" border=0 hspace=0 vspace=0 height=20 width=81 alt=Задания></td>

<td><img src="ex.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/ex.gif" border=0 hspace=0 vspace=0 height=20 width=81 alt=Примеры></td>

<td><a href="funct.htm" tppabs="http://webclass.polyn.kiae.su/classes/jsi/test/funct.htm"><img src="tests.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/tests.gif" border=0 hspace=0 vspace=0 height=20 width=81 alt=Контроль></a></td>

<td><img src="coach.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/coach.gif" border=0 hspace=0 vspace=0 height=20 width=81 alt=Тьютор></td>

<td><a href="javascript:if(confirm('http://webclass.polyn.kiae.su/classes/fsub.htm  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://webclass.polyn.kiae.su/classes/fsub.htm'" tppabs="http://webclass.polyn.kiae.su/classes/fsub.htm"><img src="lcheck.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/lcheck.gif" border=0 hspace=0 vspace=0 height=20 width=74 alt=Подписка></a></td>

</tr>

</table>

</div>

<!-- Конец главного меню -->

<!-- Навигационное дерево -->

<div class=navy>
<table border=0 cellspacing=0 cellpadding=0 width=560>
<tr>
<td height=15 class=tree>
<a class=tree href="javascript:if(confirm('http://webclass.polyn.kiae.su/classes/homef.htm  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://webclass.polyn.kiae.su/classes/homef.htm'" tppabs="http://webclass.polyn.kiae.su/classes/homef.htm">Web-инжиниринг(Оглавление)</a>
</td>
<tr>
<td height=15 class=tree>
<img src="treetc-1.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main//treetc.gif" border=0 hspace=2 align=top width=15 height=15 vspace=0>
Объектная модель в World Wide Web. Динамический HTML
</td>
</tr>
<tr>
<td height=15 class=tree>
<img name=down src="treevl.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/treevl.gif" border=0 hspace=2 align=top width=15 height=15 vspace=0>
<img src="treetc.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/treetc.gif" border=0 hspace=2 align=top width=15 height=15 vspace=0>
<a class=tree id=current href="treejsi.htm" tppabs="http://webclass.polyn.kiae.su/classes/jsi/treejsi.htm">Введение в JavaScript</a>
</td>
</tr>
</table>
</div>


<!-- Конец навигационного дерева -->

<!-- Меню последовательного просмотра -->

<div class=next>

<map name=top_menu>

<area shape=rect coords="500,0,560,15" href="object.htm" tppabs="http://webclass.polyn.kiae.su/classes/jsi/object.htm">

</map>

<img src="menu_l.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/menu_l.gif" width=560 height=15 vspace=0 hspace=0 border=0 usemap=#top_menu>

</div>

<!-- Конец меню последовательного просмотра -->

<!-- Начало текста документа -->

<div class=main name=main>

<a name=top></a>

<span class=myheader>Функции</span>

<p class=just>

<span class=letter>Я</span>зык программирования не может обойтись без механизма многократного использования кода программы. Такой механизм обеспечивается процедурами или функциями. В JavaScript функция выступает в качестве одного из основных <a href=#type>типов данных</a>. Одновременно с этим в JavaScript определен <a href=#object>объект Function</a>.

<p class=just>

В общем случае любой объект JavaScript определяется через функцию. Для создания объекта используется конструктор, который в свою очередь вводится через Function. Таким образом, с функциями в JavaScript связаны следующие ключевые вопросы:

<ul>

<li><a href=#type>Функция - тип данных</a>

<li><a href=#object>Функция - объект</a>

<li><a href="object.htm" tppabs="http://webclass.polyn.kiae.su/classes/jsi/object.htm">Конструкторы объектов</a>

</ul>

<p class=just>

Именно эти вопросы мы и рассмотрим в данном разделе.

<a name=type></a>

<p><em>Функция - тип данных</em>

<p class=just>

Определяют функцию при помощи ключевого слова function:

<p><span class=tags>

function f_name(arg1,arg2,...)<br>

{<br>

/* function body */<br>

}<br>

</span>

<p class=just>

Здесь следует обратить внимание на следующие моменты. Во-первых, function определяет переменную f_name. Это переменная имеет тип "function":

<p><span class=tags>

document.write("Тип переменной f_name:"+typeof(f_name);<br>

<script>

function f_name()

{

/* function body */

}

document.write("Тип переменной f_name:"+typeof(f_name));

</script>

</span>

<p class=just>

Во-вторых, этой переменной присваивается значение:

<p><span class=tags>

document.write("Значение i:"+i.valueOf());<br>

document.write("Значение f_name:"+f_name.valueOf());<br>

<script>

var i=10;

function f_name(a)

{

 if(a>=0) return true; else return false;

}

document.write("Значение переменной f_name:"+i.valueOf()+"<br>");

document.write("Значение переменной f_name:"+f_name.valueOf()+"<br>");

</script>

</span>

<p class=just>

В данном случае метод valueOf() применяется как к числовой переменной i, так и к f_name. По этой причине функции можно назначить синоним путем присваивания ее значения другой переменной:

<p><span class=tags>

function f_name(a)<br>

{<br>

 if(a>=0) return true; else return false;<br>

}<br>

document.write("Значение переменной f_name:"+f_name(1)+"<br>");<br>

b = f_name;<br>

document.write("Значение переменной b:"+b(1)+"<br>");<br>

<script>

function f_name(a)

{

 if(a>=0) return true; else return false;

}

document.write("Значение переменной f_name:"+f_name(1)+"<br>");

b = f_name;

document.write("Значение переменной b:"+b(1)+"<br>");

</script>

</span>

<p class=just>

Совершенно очевидно, что если функцию можно присвоить переменной, то ее можно передать и в качестве аргумента другой функции. Все это усиливается при использовании функции eval(), которая позволяет реализовать отложенное исполнение JavaScript-кода. Отложенное исполнение - это возможность изменения программы по ходу ее исполнения. Типичным использованием eval() является сокращение кода за счет генерации однотипных строк:

<p><span class=tags>

for(i=0;i<5;i++)<br>

{<br>

eval("document.write('kuku"+i+"&lt;br&gt;')");<br>

}<p>

Результат исполнения кода:<br>

<script>

for(i=0;i<5;i++)

{

eval("document.write('kuku"+i+"<br>')");

}

</script>

</p>

</span>

<p class=just>

Если бы мы кодировали "в лоб", то пришлось бы написать пять строк кода. Данный подход был использован в разделе "Изменение картинки" для инициирования массивов картинок, имена которых построены по принципу индексации ячеек таблицы.

<!-- В начало страницы -->

<p align=right><a href=#top class=tree id=home><img src="treeup.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/treeup.gif" border=0 align=top hspace=2><br>начало страницы<img src="treeru.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/treeru.gif" border=0 align=top hspace=2></a><br>

<!-- Конец перехода -->

<a name=object></a>

<p><em>Функция - объект</em>

<p class=just>

У любого типа данных JavaScript существует объектовая "обертка" - wrapper, которая позволяет применять методы типов данных к этим переменным и литералам, а также получать значения их свойств. Например, длина строки символов определяется свойством length. Аналогичная "обертка" есть и у функций - объект Function.

<p class=just>

Например, увидеть значение функции можно не только при помощи метода valueOf(), но и используя метод toString():

<p><span class=tags>

function f_name(x,y)<br>

{<br>

return x-y;<br>

}<br>

document.write(f_name.toString()+"&lt;br&gt;");

<p>

Результат распечатки:<br>

<script>

function f_name(x,y)

{

return x-y;

}

document.write(f_name.toString()+"<br>");

</script>

</p>

</span>

<p class=just>

Свойства функции доступны для программиста только тогда, когда они вызываются внутри функции. При этом обычно имеют дело с массивом аргументов функции (arguments[]), его длиной (length), именем функции, вызвавшей данную функцию (caller)и прототипом (prototype).

<p class=just>

Рассмотрим пример использования списка аргументов функции и его длину:

<p><span class=tags>

function my_sort()<br>

{<br>

a = new Array(my_sort.arguments.length);<br>

for(i=0;i&lt;my_sort.arguments.length;i++)<br> 

a[i] = my_sort.arguments[i];<br>

b = a.sort();<br>

return b;<br>

}<br>

b = my_sort(9,5,7,3,2)<br>

for(i=0;i&lt;b.length;i++)<br>

document.write("b["+i+"]="+b[i]+"&lt;br&gt;");

<p>

Результат исполнения:<br>

<script>

function my_sort()

{

 a = new Array(my_sort.arguments.length);

 for(i=0;i<my_sort.arguments.length;i++) a[i] = my_sort.arguments[i];

 b = a.sort();

 return b;

}

b = my_sort(9,5,7,3,2)

for(i=0;i<b.length;i++)

document.write("b["+i+"]="+b[i]+"<br>");

</script>

</p>

</span> 

<p class=just>

Если функция может быть вызвана из различных других функций, то в этом случае используется свойство caller:

<p><span class=tags>

function slave()<br>

{<br>

 document.write(slave.caller+"<br>");<br>

 return slave.caller;<br>

}<br>

function master1()<br>

{<br>

 slave();<br>

}<br>

function master2()<br>

{<br>

 slave();<br>

}<br>

...<br>

master1();<br>

master2();<br>

<p>

Результат исполнения двух последних строк:<br>

<script>

function slave()

{

 document.write(slave.caller+"<br>");

 return slave.caller;

}

function master1()

{

 slave();

}

function master2()

{

 slave();

}

master1();

master2();

</script>

</p>

</span>

<p class=just>

Еще одним свойством объекта Function является prototype, но это общее свойство всех объектов, поэтому и обсуждать его мы будем в контексте типа данных Object. Упомянем только о конструкторе объекта Function:

<p><span class=tags>

f = new Function(arg_1,...,arg_n, body)

</span>

<p class=just>

Здесь f - это объект класса Function. Его можно использовать и как обычную функцию. Конструктор используют для получения безымянных функций, которые назначают или переопределяют методы объектов. Здесь мы вплотную подошли к вопросу конструирования объектов. Дело в том, что переменные внутри функции можно рассматривать в качестве ее свойств, а функции - методов:

<p><span class=tags>

function Rectangle(a,b,c,d)<br>

{<br>

 this.x0 = a;<br>

 this.y0 = b;<br>

 this.x1 = c;<br>

 this.y1 = d;<br>

 this.area = new Function("return Math.abs(this.x0-this.x1)*Math.abs(this.y0-this.y1)");<br>

 this.perimeter = new Function("return (Math.abs(this.x0-this.x1)+Math.abs(this.y0-this.y1))*2");<br>

}<br>

c = new Rectangle(0,0,100,100);<br>

document.write(c.area());

<p>

Результат исполнения:<br>

<script>

function Rectangle(a,b,c,d)

{

 this.x0 = a;

 this.y0 = b;

 this.x1 = c;

 this.y1 = d;

 this.area = new Function("return Math.abs(this.x0-this.x1)*Math.abs(this.y0-this.y1)");

 this.perimeter = new Function("return (Math.abs(this.x0-this.x1)+Math.abs(this.y0-this.y1))*2");

}

c = new Rectangle(0,0,100,100);

document.write(c.area()+"<br>");

</script>

</p>

</span>

<p class=just>

Обратите внимание еще на одну особенность - ключевое слово this. Оно позволяет сослаться на текущий объект, в рамках которого происходит исполнение JavaScript-кода. В данном случае это объект c класса Rectangle.

<!-- В начало страницы -->

<p align=right><a href=#top class=tree id=home><img src="treeup.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/treeup.gif" border=0 align=top hspace=2><br>начало страницы<img src="treeru.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/treeru.gif" border=0 align=top hspace=2></a><br>

<!-- Конец перехода -->

<p><!-- Конец текста документа -->

<!-- Меню последовательного просмотра(нижнее) -->

<map name=bmenu>

<area shape=rect coords="0,0,60,15" href="array.htm" tppabs="http://webclass.polyn.kiae.su/classes/jsi/array.htm">

<area shape=rect coords="500,0,560,15" href="object.htm" tppabs="http://webclass.polyn.kiae.su/classes/jsi/object.htm">

</map>

<p>

<img src="bottom_l.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/bottom_l.gif" border=0 width=560 height=15 border=0 usemap=#bmenu hspace=0 vspace=0><br>

<!-- Конец меню последовательного просмотра(нижнее) -->

<!-- Нижний логотип -->

<a href="javascript:if(confirm('http://www.citmgu.ru/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.citmgu.ru/'" tppabs="http://www.citmgu.ru/"><img src="bottom.gif" tppabs="http://webclass.polyn.kiae.su/classes/images/main/bottom.gif" border=0 width=560 height=15></a>
<!-- SpyLOG v2 f:0211 -->
<script language="javascript">
u="http://webclass.polyn.kiae.su/classes/jsi/u686.25.spylog.com";d=document;nv=navigator;na=nv.appName;p=1;
bv=Math.round(parseFloat(nv.appVersion)*100);
n=(na.substring(0,2)=="Mi")?0:1;rn=Math.random();z="p="+p+"&rn="+rn;y="";
y+="<a href='http://"+u+"/cnt?f=3&p="+p+"&rn="+rn+"' target=_blank>";
y+="<img src='http://"+u+"/cnt?"+z+"&r="+escape(d.referrer)+"&pg="+escape(window.location.href)+"' border=0  width=0 height=0  alt='SpyLOG'>";
y+="</a>"; d.write(y);if(!n) { d.write("<"+"!--"); }//--></script><noscript>
<a href="javascript:if(confirm('http://u686.25.spylog.com/cnt?f=3&p=1  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://u686.25.spylog.com/cnt?f=3&p=1'" tppabs="http://u686.25.spylog.com/cnt?f=3&p=1" target=_blank>
<img src="cnt-p=1" tppabs="http://u686.25.spylog.com/cnt?p=1" alt='SpyLOG' border='0'  width=0 height=0 >
</a></noscript><script language="javascript1.2"><!--
if(!n) { d.write("--"+">"); }//--></script>
<!-- SpyLOG  -->

<!-- Конец нижнего логотипа -->

</div>

</BODY>

</HTML>

