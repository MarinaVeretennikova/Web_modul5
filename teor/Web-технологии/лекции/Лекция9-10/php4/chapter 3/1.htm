<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE></TITLE>
<META content="TEXT/HTML; CHARSET=WINDOWS-1251" http-equiv=CONTENT-TYPE>
<META content="Microsoft FrontPage 4.0" name=GENERATOR>
<STYLE></STYLE>
</HEAD>
<body background=../fon.jpg>
<ul>

  <li><a href="#a"><font face="Times New Roman" size=3>Глава 3.
    Выражения, операторы и управляющие
    конструкции</font> </a> </li>
  <ul>
    <li><a href="#b"><font face="Times New Roman" size="3">Выражения</font>
      </a>
      <ul>
        <li><a href="#c"><font face="Times New Roman" size="3">Операнды</font></a></li>
        <li><a href="#d"><font face="Times New Roman" size="3">Операторы</font></a></li>
      </ul>
    </li>
    <li><a href="#e"><font face="Times New Roman" size="3">Управляющие
      конструкции</font>
      </a>
      <ul>
        <li><a href="#f"><font face="Times New Roman" size="3">Проверка
          условий</font></a></li>
        <li><a href="#g"><font face="Times New Roman" size="3">Альтернативное
          ограничение блоков</font></a></li>
        <li><a href="#h"><font face="Times New Roman" size="3">while</font></a></li>
        <li><a href="#i"><font face="Times New Roman" size="3">do..while</font></a></li>
        <li><a href="#j"><font face="Times New Roman" size="3">for</font></a></li>
        <li><a href="#k"><font face="Times New Roman" size="3">foreach</font></a></li>
        <li><a href="#l"><font face="Times New Roman" size="3">switch</font></a></li>
        <li><a href="#m"><font face="Times New Roman" size="3">break</font></a></li>
        <li><a href="#n"><font face="Times New Roman" size="3">continue</font></a></li>
      </ul>
    </li>
    <li><a href="#o"><font face="Times New Roman" size="3">Проект: календарь
      событий</font></a></li>
    <li><a href="#p"><font face="Times New Roman" size="3">Итоги</font></a></li>
  </ul>
</ul>
<A NAME="a"></A>
<p>&nbsp;</p>
<p><font face="Times New Roman" color="#000000" size="5">ГЛАВА 3</font></p>
<p><font face="Times New Roman" color="#000000" size="5">Выражения, операторы и управляющие
конструкции</font></p>
<p>
<font face="Times New Roman" size="3" COLOR="#000000">
В этой главе представлены некоторые
аспекты, играющие исключительно важную
роль в любом языке программирования, — а
именно, выражения, операторы и управляющие
конструкции. Этот материал необходим в
первую очередь при создании больших и
сложных приложений РНР. Если вы уже знакомы
с такими языками, как С и Java, эта глава всего
лишь напомнит известные вам понятия. Если
же вы впервые встречаетесь с этими
терминами и понятиями, которые они
обозначают, знание материала этой главы
будет безусловно необходимо для понимания
остальных глав книги.
</font></p>
<b>
<p><A NAME="b"></A><font color="#000000" face="Times New Roman" size="4">Выражения</font></p>
</b><i>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Выражение </font></i><font face="Times New Roman" size="3" COLOR="#000000">описывает
некоторое действие, выполняемое в
программе. Каждое выражение состоит по
крайней мере из одного операнда и одного
или нескольких операторов. Прежде чем
переходить к примерам, демонстрирующим
использование выражений, необходимо
поближе познакомиться с операторами и
операндами.
</font></p>
<p><A NAME="c"></A><font color="#000000" face="Times New Roman" size="4">Операнды</font></p>
<i>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Операнд </font></i><font face="Times New Roman" size="3" COLOR="#000000">представляет
собой некоторую величину, обрабатываемую в
программе. Операнды могут относиться к
любому типу данных, представленному в главе
2. Вероятно, вы уже знакомы с концепциями
обработки и использования операндов не
только в повседневных математических
вычислениях, но и по прежнему опыту
программирования. Примеры операндов:
</font>
</p>
<p><font face="Courier New" color="#000000" size="3">$а++; // $а - операнд</font></p>
<p><font face="Courier New" color="#000000" size="3">$sum = $val1 + $val2; //
$sum. $val1 и $val2 - операнды</font></p>
<p><A NAME="d"></A><font color="#000000" face="Times New Roman" size="4">Операторы</font></p>
<i>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Оператор </font></i><font face="Times New Roman" size="3" COLOR="#000000">представляет
собой символическое обозначение
некоторого действия, выполняемого с
операндами в выражении. Многие операторы
известны любому программисту, но вы должны
помнить, что РНР выполняет автоматическое преобразование типов на основании типа
оператора, объединяющего два операнда, — в
других языках программирования это
происходит не всегда.
</font> </p>
<p> <font face="Times New Roman" size="3" COLOR="#000000">Приоритет и ассоциативность операторов
являются важными характеристиками языка
программирования (см. раздел «Ассоциативность
операторов» этой главы). В табл. 3.1 приведен
полный список всех операторов,
упорядоченных по убыванию приоритета.
Приоритет, ассоциативность и сами
операторы подробно рассматриваются в
разделах, следующих за таблицей.
</font></p>
<b>
<p><font size="3" face="Times New Roman"><font color="#000000">Таблица 3.1. </font></font></b><font size="3" face="Times New Roman"><font color="#000000"><i>Операторы
РНР</i></font></font></p>
<table border="1" width="500" cellspacing="0" cellpadding="0">
  <tr>
    <td width="110" align="center"><b><font color="#000000" size="3" face="Times New Roman">Оператор</font></b></td>
    <td width="127" align="center"><b><font color="#000000" size="3" face="Times New Roman">Ассоциативность</font>
</b></td>
    <td width="241" align="center"><b><font color="#000000" size="3" face="Times New Roman">Цель</font>
</b></td>
  </tr>
  <tr>
    <td width="110"><font size="3" face="Times New Roman">( )</font></td>
    <td width="127" align="center"><font size="3" face="Times New Roman">-</font></td>
    <td width="241"><font face="Times New Roman" color="#000000" size="3">Изменение приоритета</font></td>
  </tr>
  <tr>
    <td width="110"><font face="Times New Roman" color="#000000" size="3">new</font></td>
    <td width="127" align="center"><font size="3" face="Times New Roman">-</font></td>
    <td width="241"><font face="Times New Roman" color="#000000" size="3">Создание экземпляров объектов</font></td>
  </tr>
  <tr>
    <td width="110"><font face="Times New Roman" color="#000000" size="3">! ~</font></td>
    <td width="127" align="center"><font size="3" face="Times New Roman">П</font></td>
    <td width="241">
<p align="left"><font face="Times New Roman" color="#000000" size="3">Логическое отрицание, поразрядное
отрицание</font></p>
    </td>
  </tr>
  <tr>
    <td width="110"><b><font face="Times New Roman" color="#000000" size="3">++
      --</font></b></td>
    <td width="127" align="center"><font size="3" face="Times New Roman">П</font></td>
    <td width="241"><font face="Times New Roman" color="#000000" size="3">Инкремент, декремент</font></td>
  </tr>
  <tr>
    <td width="110"><font size="3" face="Times New Roman">@</font></td>
    <td width="127" align="center"><font size="3" face="Times New Roman">П</font></td>
    <td width="241"><font face="Times New Roman" color="#000000" size="3">Маскировка ошибок</font></td>
  </tr>
  <tr>
    <td width="110"><font size="3" face="Times New Roman">/ * %</font></td>
    <td width="127" align="center"><font size="3" face="Times New Roman">Л</font></td>
    <td width="241"><font face="Times New Roman" color="#000000" size="3">Деление, умножение, остаток</font></td>
  </tr>
  <tr>
    <td width="110"><font size="3" face="Times New Roman">+ - .</font></td>
    <td width="127" align="center"><font size="3" face="Times New Roman">Л</font></td>
    <td width="241"><font face="Times New Roman" color="#000000" size="3">Сложение, вычитание, конкатенация</font></td>
  </tr>
  <tr>
    <td width="110"><font size="3" face="Times New Roman">&lt;&lt;&nbsp; &gt;&gt;</font></td>
    <td width="127" align="center"><font size="3" face="Times New Roman">Л</font></td>
    <td width="241"><font face="Times New Roman" color="#000000" size="3">Сдвиг влево, сдвиг вправо (поразрядный)</font></td>
  </tr>
  <tr>
    <td width="110"><font size="3" face="Times New Roman">&lt; &lt;=&nbsp; &gt;&nbsp; &gt;=</font></td>
    <td width="127" align="center"><font size="3" face="Times New Roman">-</font></td>
    <td width="241"><font face="Times New Roman" color="#000000" size="3">Меньше, меньше или равно, больше, больше
или равно</font></td>
  </tr>
  <tr>
    <td width="110"><font size="3" face="Times New Roman">== !=&nbsp; ===&nbsp; &lt;&gt;</font></td>
    <td width="127" align="center"><font size="3" face="Times New Roman">-</font></td>
    <td width="241"><font face="Times New Roman" color="#000000" size="3">Равно, не равно, идентично, не равно</font></td>
  </tr>
  <tr>
    <td width="110"><font size="3" face="Times New Roman">&amp;&nbsp; ^&nbsp; |</font></td>
    <td width="127" align="center"><font size="3" face="Times New Roman">Л</font></td>
    <td width="241"><font face="Times New Roman" color="#000000" size="3">Поразрядные операции AND, XOR и OR</font></td>
  </tr>
  <tr>
    <td width="110"><font size="3" face="Times New Roman">&amp;&amp; ||</font></td>
    <td width="127" align="center"><font size="3" face="Times New Roman">Л</font></td>
    <td width="241"><font face="Times New Roman" color="#000000" size="3">Логические операции AND и OR</font></td>
  </tr>
  <tr>
    <td width="110"><font size="3" face="Times New Roman">?:</font></td>
    <td width="127" align="center"><font size="3" face="Times New Roman">П</font></td>
    <td width="241"><font face="Times New Roman" color="#000000" size="3">Тернарный оператор</font></td>
  </tr>
  <tr>
    <td width="110"><font size="3" face="Times New Roman">=&nbsp; +=&nbsp; *=&nbsp; /=&nbsp; .=</font></td>
    <td width="127" align="center"><font size="3" face="Times New Roman">П</font></td>
    <td width="241"><font face="Times New Roman" color="#000000" size="3">Операторы присваивания</font></td>
  </tr>
  <tr>
    <td width="110"><font size="3" face="Times New Roman">%=&nbsp; &amp;=&nbsp; |=&nbsp; ^=</font></td>
    <td width="127" align="center"><font size="3" face="Times New Roman">&nbsp;</font></td>
    <td width="241">&nbsp;</td>
  </tr>
  <tr>
    <td width="110"><font size="3" face="Times New Roman">&lt;&lt;=&nbsp; &gt;&gt;=</font></td>
    <td width="127" align="center"><font size="3" face="Times New Roman">&nbsp;</font></td>
    <td width="241">&nbsp;</td>
  </tr>
  <tr>
    <td width="110"><font face="Times New Roman" color="#000000" size="3">AND XOR OR</font></td>
    <td width="127" align="center"><font size="3" face="Times New Roman">Л</font></td>
    <td width="241"><font face="Times New Roman" color="#000000" size="3">Логические операции AND, XOR и OR</font></td>
  </tr>
</table>
<p><font face="Times New Roman" size="3" COLOR="#000000">
После знакомства с концепциями
операторов и операндов следующие примеры
выражений выглядят значительно понятнее:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$а = 5;&nbsp;&nbsp;
// Присвоить целое число 5 переменной $а</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$а = &quot;5&quot;:&nbsp;&nbsp;
// Присвоить строковую величину &quot;5&quot;
переменной $а</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$sum = 50 + $some_int;&nbsp;
// Присвоить сумму 50 + $some_int переменной $sum</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">Swine = &quot;Zinfandel&quot;;&nbsp;&nbsp;
// Присвоить строку &quot;Zinfandel&quot; переменной
$wine</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$inventory++:&nbsp;&nbsp;
// Увеличить значение $inventory на 1</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">Объединяя операторы и операнды, вы
получите более сложные выражения для
выполнения нетривиальных вычислений.
Пример:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$total_cost = $cqst + (Scost * 0.06): // прибавить к цене 6-процентный
налог</font></p>
<b>
<p><font size="3" face="Times New Roman" COLOR="#000000">Приоритет операторов</font></p>
</b><i>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Приоритет </font></i><font face="Times New Roman" size="3" COLOR="#000000">является
характеристикой операторов, определяющей
порядок выполнения действий с окружающими
операндами. В РНР используются те же
правила приоритета, что и в школьном курсе
математики. Пример:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$total_cost = $cost + $cost * 0.06;</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Приведенная команда эквивалентна
следующей:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$total cost = $cost + ($cost * 0.06);</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Это объясняется тем, что оператор
умножения обладает более высоким
приоритетом по сравнению с оператором
сложения.
</font></p>
<b>
<p><font size="3" face="Times New Roman" COLOR="#000000">Ассоциативность операторов</font></p>
</b><i>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Ассоциативность </font></i><font face="Times New Roman" size="3" COLOR="#000000">оператора
определяет последовательность выполнения
операторов с одинаковым приоритетом (см.
табл. 3.1). Выполнение может происходить в
двух направлениях: либо слева направо, либо
справа налево. При ассоциативности первого
типа операции, входящие в выражение,
выполняются слева направо. Например,
команда</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$value =
3*4*5*7*2;</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
эквивалентна следующей команде:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$value = ((((3 * 4) * 5) * 7) * 2);</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Результат вычислений равен 840. Это
объясняется тем, что оператор умножения (*)
обладает левосторонней ассоциативностью.
Операторы с правосторонней
ассоциативностью и одинаковым приоритетом
обрабатываются справа налево. Например,
фрагмент
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$с = 5;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$value = $а - $b - $с;</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
эквивалентен фрагменту
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$c = 5;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$value = ($а - ($b - $с));</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
При обработке этого выражения переменным
$value, $a, $b и $с будет присвоено значение 5. Это
объясняется тем, что оператор присваивания
(=) обладает правосторонней
ассоциативностью.
</font></p>
<b>
<p><font size="3" face="Times New Roman" COLOR="#000000">Математические операторы</font></p>
</b><i>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Математические операторы </font></i><font size="3" face="Times New Roman"><font COLOR="#000000">(табл.
3.2) предназначены для выполнения различных
математических операций и часто
применяются в большинстве программ РНР. К
счастью, их использование обходится без
проблем.
</font></font></p>
<b>
<p><font size="3" face="Times New Roman"><font color="#000000">Таблица 3.2. </font></font></b><font face="Times New Roman" color="#000000" size="3"><i>Математические
операторы</i></font></p>
<table BORDER="1" cellspacing="0" cellpadding="0" width="500">
  <tr>
    <td WIDTH="73" VALIGN="TOP" HEIGHT="18">
      <p><b><font size="3" face="Times New Roman" COLOR="#000000">Пример</font></b></p>
    </td>
    <td WIDTH="96" VALIGN="TOP" HEIGHT="18">
      <p><b><font size="3" face="Times New Roman" COLOR="#000000">Название</font></b></p>
    </td>
    <td WIDTH="220" VALIGN="TOP" HEIGHT="18">
      <p><b><font size="3" face="Times New Roman" COLOR="#000000">Результат</font></b></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="73" VALIGN="TOP" HEIGHT="17">
      <p><font size="3" face="Times New Roman" COLOR="#000000">$а + $b</font></p>
    </td>
    <td WIDTH="96" VALIGN="TOP" HEIGHT="17">
      <p><font size="3" face="Times New Roman" COLOR="#000000">Сложение</font></p>
    </td>
    <td WIDTH="220" VALIGN="TOP" HEIGHT="17">
      <p><font size="3" face="Times New Roman" COLOR="#000000">Сумма $а и $b</font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="73" VALIGN="TOP" HEIGHT="13">
      <p><font size="3" face="Times New Roman" COLOR="#000000">$а-$b</font></p>
    </td>
    <td WIDTH="96" VALIGN="TOP" HEIGHT="13">
      <p><font size="3" face="Times New Roman" COLOR="#000000">Вычитание</font></p>
    </td>
    <td WIDTH="220" VALIGN="TOP" HEIGHT="13">
      <p><font size="3" face="Times New Roman" COLOR="#000000">Разность $а и $b</font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="73" VALIGN="TOP" HEIGHT="14">
      <p><font size="3" face="Times New Roman" COLOR="#000000">$а*$b</font></p>
    </td>
    <td WIDTH="96" VALIGN="TOP" HEIGHT="14">
      <p><font size="3" face="Times New Roman" COLOR="#000000">Умножение</font></p>
    </td>
    <td WIDTH="220" VALIGN="TOP" HEIGHT="14">
      <p><font size="3" face="Times New Roman" COLOR="#000000">Произведение $а и $b</font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="73" VALIGN="TOP" HEIGHT="14">
      <p><font size="3" face="Times New Roman" COLOR="#000000">$а/$b</font></p>
    </td>
    <td WIDTH="96" VALIGN="TOP" HEIGHT="14">
      <p><font size="3" face="Times New Roman" COLOR="#000000">Деление</font></p>
    </td>
    <td WIDTH="220" VALIGN="TOP" HEIGHT="14">
      <p><font size="3" face="Times New Roman" COLOR="#000000">Частное от деления $а на $b</font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="73" VALIGN="TOP" HEIGHT="18">
      <p><font size="3" face="Times New Roman" COLOR="#000000">$а % $b</font></p>
    </td>
    <td WIDTH="96" VALIGN="TOP" HEIGHT="18">
      <p><font size="3" face="Times New Roman" COLOR="#000000">Остаток</font></p>
    </td>
    <td WIDTH="220" VALIGN="TOP" HEIGHT="18">
      <p><font size="3" face="Times New Roman" COLOR="#000000">Остаток от деления $а на $b</font></p>
    </td>
  </tr>
</table>
<p>
<font face="Times New Roman" size="3" COLOR="#000000">
РНР содержит широкий ассортимент
стандартных математических функций для
выполнения основных преобразований и
вычисления логарифмов, квадратных корней,
геометрических величин и т. д. За
обновленным списком таких функций
обращайтесь к документации.
</font></p>
<b>
<p><font size="3" face="Times New Roman" COLOR="#000000">Операторы присваивания</font></p>
</b><i>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Операторы присваивания </font></i><font size="3" face="Times New Roman"><font COLOR="#000000">задают
новое значение переменной. В простейшем
варианте оператор присваивания
ограничивается изменением величины, в
других вариантах (называемых </font><i><font COLOR="#000000">сокращенными
операторами присваивания) </font></i><font COLOR="#000000">перед
присваиванием выполняется некоторая
операция. Примеры таких операторов
приведены в табл. 3.3.
</font></font></p>
<b>
<p><font face="Times New Roman"><font size="3" COLOR="#000000">Таблица 3.3.
</font></font></b><font face="Times New Roman" COLOR="#000000" size="3"><i>Операторы
присваивания</i></font></p>
<table border="1" width="500" cellspacing="0" cellpadding="0">
  <tr>
    <td width="79" align="center"><b><font face="Times New Roman" COLOR="#000000" size="3">Пример</font></b></td>
    <td width="130" align="center"><b><font face="Times New Roman" COLOR="#000000" size="3">
&nbsp;Название
</font></b></td>
    <td width="269" align="center"><b><font face="Times New Roman" COLOR="#000000" size="3">Результат
</font></b></td>
  </tr>
  <tr>
    <td width="79"><font face="Times New Roman" COLOR="#000000" size="3">$а = 5;&nbsp;
</font></td>
    <td width="130"><font face="Times New Roman" COLOR="#000000" size="3">&nbsp;Присваивание
</font></td>
    <td width="269"><font face="Times New Roman" COLOR="#000000" size="3">Переменная $а равна 5&nbsp;
</font></td>
  </tr>
  <tr>
    <td width="79"><font face="Times New Roman" COLOR="#000000" size="3">$а += 5;&nbsp;
</font></td>
    <td width="130"><font face="Times New Roman" COLOR="#000000" size="3">&nbsp;Сложение с присваиванием
</font></td>
    <td width="269"><font face="Times New Roman" COLOR="#000000" size="3">&nbsp;Переменная $а равна
сумме $а и 5
</font></td>
  </tr>
  <tr>
    <td width="79"><font face="Times New Roman" COLOR="#000000" size="3">$а *= 5;&nbsp;
</font></td>
    <td width="130"><font face="Times New Roman" COLOR="#000000" size="3"> Умножение с присваиванием
</font></td>
    <td width="269"><font face="Times New Roman" COLOR="#000000" size="3"> Переменная $а равна произведению
$а и 5
</font></td>
  </tr>
  <tr>
    <td width="79"><font face="Times New Roman" COLOR="#000000" size="3">$а/=5;
</font></td>
    <td width="130"><font face="Times New Roman" COLOR="#000000" size="3"> Деление с присваиванием
</font></td>
    <td width="269"><font face="Times New Roman" color="#000000" size="3">
 Переменная $а равна частному отделения
$а на 5
</font></td>
  </tr>
  <tr>
    <td width="79"><font face="Times New Roman" size="3" color="#000000">$а .= 5;&nbsp;
</font></td>
    <td width="130"><font face="Times New Roman" size="3" color="#000000">&nbsp;Конкатенация с присваиванием
</font></td>
    <td width="269"><font face="Times New Roman" size="3" color="#000000">
Переменная $а равна конкатенации $а и 5
</font></td>
  </tr>
</table>
<p><font face="Times New Roman" size="3" color="#000000">
Умеренное использование операторов
присваивания обеспечивает более наглядный
и компактный код.
</font></p>
<b>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Строковые операторы
</font></p>
</b><i>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Строковые операторы </font></i><font face="Times New Roman" size="3" COLOR="#000000">РНР
(табл. 3.4) обеспечивают удобные средства
конкатенации (то есть слияния) строк.
Существует два строковых оператора:
оператор конкатенации (.) и оператор
конкатенации с присваиванием (.=), описанный
в предыдущем разделе «Операторы
присваивания».
</font></p>
<p><img border="0" src="prim.gif" align=left width="36" height="35"><i><font face="Times New Roman" color="#000000" size="3">Конкатенацией
называется объединение двух и более
объектов в единое целое.</font></i></p>
<b>
<p><font size="3" face="Times New Roman"><font color="#000000">Таблица 3.4.<i>
</i> </font></font></b><i><font face="Times New Roman" color="#000000" size="3">Строковые
операторы</font></i></p>
<table BORDER="1" cellspacing="0" cellpadding="0" WIDTH="500" height="148">
  <tr>
    <td WIDTH="134" VALIGN="TOP" HEIGHT="19" align="center">
      <p><b><font color="#000000" size="3" face="Times New Roman">Пример</font></b></p>
    </td>
    <td WIDTH="122" VALIGN="TOP" HEIGHT="19" align="center">
      <p><b><font color="#000000" size="3" face="Times New Roman">Название</font></b></p>
    </td>
    <td WIDTH="258" VALIGN="TOP" HEIGHT="19" align="center">
      <p><b><font color="#000000" size="3" face="Times New Roman">Результат</font></b></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="134" VALIGN="TOP" HEIGHT="47"><font color="#000000" size="3" face="Times New Roman">$a = &quot;abc&quot;.&quot;def&quot;</font></td>
    <td WIDTH="122" VALIGN="TOP" HEIGHT="47">
      <p align="left"><font color="#000000" size="3" face="Times New Roman">Конкатенация</font></td>
    <td WIDTH="258" VALIGN="TOP" HEIGHT="47"><font color="#000000" size="3" face="Times New Roman">Переменной $а присваивается результат
      конкатенации $а и $b</font></td>
  </tr>
  <tr>
    <td WIDTH="134" VALIGN="TOP" HEIGHT="76">
      <p><font color="#000000" size="3" face="Times New Roman">&nbsp;$а - &quot;ghijkl&quot;</font></p>
    </td>
    <td WIDTH="122" VALIGN="TOP" HEIGHT="76">
      <p><font color="#000000" size="3" face="Times New Roman">&nbsp;Конкатенация с
      присваиванием</font></p>
    </td>
    <td WIDTH="258" VALIGN="TOP" HEIGHT="76">
      <p><font color="#000000" size="3" face="Times New Roman">Переменной $а
      присваивается результат конкатенации
      ее текущего значения со строкой &quot;ghijkl&quot;</font></p>
    </td>
  </tr>
</table>
<p>
<font face="Times New Roman" size="3" COLOR="#000000">
Пример использования строковых
операторов:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">// $а присваивается строковое значение &quot;Spaghetti
&amp; Meatballs&quot; $а = &quot;Spaghetti&quot; . &quot;&amp; Meatballs&quot;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">// $а присваивается строковое значение &quot;Spaghetti
&amp; Meatballs are delicious&quot; $a .= &quot;are delicious&quot;;</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Конечно, два строковых оператора не
исчерпывают всех возможностей РНР по
обработке строк. За полной информацией об
этих возможностях обращайтесь к главе 8.
</font></p>
<b>
<p><font size="3" face="Times New Roman" COLOR="#000000">Операторы инкремента и декремента</font></p>
</b>
<p><font size="3" face="Times New Roman"><font COLOR="#000000">
Удобные вспомогательные операторы </font><i><font FACE="Times New Roman" SIZE="3" COLOR="#000000">инкремента
</font></i><font COLOR="#000000">(++) и </font><i><font FACE="Times New Roman" SIZE="3" COLOR="#000000">декремента
</font></i><font COLOR="#000000">(--),
приведенные в табл. 3.5, делают программу
более наглядной и обеспечивают укороченную
запись для увеличения или уменьшения
текущего значения переменной на 1.
</font></font></p>
<b>
<p><font size="3" face="Times New Roman"><font color="#000000">Таблица 3.5.<i>
</i> </font></font></b><i><font face="Times New Roman" color="#000000" size="3">Операторы
инкремента и декремента</font></i></p>
<table border="1" width="500" cellspacing="0" cellpadding="0">
  <tr>
    <td width="33%" align="center"><b><font color="#000000" size="3" face="Times New Roman">Пример</font></b></td>
    <td width="33%" align="center"><b><font color="#000000" size="3" face="Times New Roman">Название</font></b></td>
    <td width="34%" align="center"><b><font color="#000000" size="3" face="Times New Roman">
Результат</font></b></td>
  </tr>
  <tr>
    <td width="33%"><font color="#000000" size="3" face="Times New Roman">++$а, $а++</font></td>
    <td width="33%"><font color="#000000" face="Times New Roman" size="3"> Инкремент</font></td>
    <td width="34%"><font color="#000000" face="Times New Roman" size="3"> Переменная $а
увеличивается на 1</font></td>
  </tr>
  <tr>
    <td width="33%"><font color="#000000" face="Times New Roman" size="3">--$а, $а--</font></td>
    <td width="33%"><font color="#000000" face="Times New Roman" size="3"> Декремент</font></td>
    <td width="34%"><font color="#000000" face="Times New Roman" size="3">Переменная
      $а уменьшается на 1</font></td>
  </tr>
</table>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Интересный факт: эти операторы могут
располагаться как слева, так и справа от
операнда. Действия, выполняемые оператором,
зависят от того, с какой стороны от операнда
он находится. Рассмотрим следующий пример:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$inventory = 15;&nbsp; // Присвоить Sinventory целое число 15</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$old_inv = Sinventory--;&nbsp; // СНАЧАЛА
присвоить $old_inv значение</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">// Sinventory. а ЗАТЕМ
уменьшить Sinventory.</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$orig_iinventory = ++inventory;// СНАЧАЛА
увеличить Sinventory. а ЗАТЕМ</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">// присвоить увеличенное значение Sinventory</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">//
переменной $orig_inventory.</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Как видите, расположение операторов
инкремента и декремента оказывает сильное
влияние на результат вычислений.
</font></p>
<b>
<p><font size="3" face="Times New Roman" COLOR="#000000">Логические операторы</font></p>
</b><i>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Логические операторы </font></i><font size="3" face="Times New Roman"><font COLOR="#000000">(табл.
3.6) наряду с математическими операторами
играют важную роль в любом приложении РНР,
обеспечивая средства для принятия решений
в зависимости от значения переменных.
Логические операторы позволяют управлять
порядком выполнения команд в программе и
часто используются в управляющих
конструкциях (таких, как условная команда i f,
а также циклы for и while).
</font></font></p>
<b>
<p><font size="3" face="Times New Roman"><font color="#000000">Таблица 3.6.<i>
</i> </font></font></b><i><font face="Times New Roman" color="#000000" size="3">Логические
операторы</font></i></p>
<table BORDER="1" cellspacing="0" cellpadding="0" WIDTH="517">
  <tr>
    <td WIDTH="88" VALIGN="TOP" HEIGHT="19" align="center">
      <p>
      <b><font face="Times New Roman" size="3" COLOR="#000000">
      Пример
      </font></b>
      </p>
    </td>
    <td WIDTH="114" VALIGN="TOP" HEIGHT="19" align="center">
      <p>
      <b><font face="Times New Roman" size="3" COLOR="#000000">
      Название
      </font></b>
      </p>
    </td>
    <td WIDTH="293" VALIGN="TOP" HEIGHT="19" align="center">
      <p>
      <b><font face="Times New Roman" size="3" COLOR="#000000">
      Результат
      </font></b>
      </p>
    </td>
  </tr>
  <tr>
    <td WIDTH="88" VALIGN="TOP" HEIGHT="16"><p><font face="Times New Roman" size="3" COLOR="#000000">
      $а &amp;&amp; $b</font></p>
    </td>
    <td WIDTH="114" VALIGN="TOP" HEIGHT="16">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Конъюнкция
      </font></p>
    </td>
    <td WIDTH="293" VALIGN="TOP" HEIGHT="16">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Истина, если истинны оба операнда ,
      </font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="88" VALIGN="TOP" HEIGHT="14">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      $aAND$b
      </font></p>
    </td>
    <td WIDTH="114" VALIGN="TOP" HEIGHT="14">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Конъюнкция
      </font></p>
    </td>
    <td WIDTH="293" VALIGN="TOP" HEIGHT="14">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Истина, если истинны оба операнда
      </font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="88" VALIGN="TOP" HEIGHT="14"><p><font face="Times New Roman" size="3" COLOR="#000000">
      $а И $b</font></p>
    </td>
    <td WIDTH="114" VALIGN="TOP" HEIGHT="14">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Дизъюнкция
      </font></p>
    </td>
    <td WIDTH="293" VALIGN="TOP" HEIGHT="14">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Истина, если истинен хотя бы один из
      операндов
      </font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="88" VALIGN="TOP" HEIGHT="12">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      $а OR $b
      </font></p>
    </td>
    <td WIDTH="114" VALIGN="TOP" HEIGHT="12">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Дизъюнкция
      </font></p>
    </td>
    <td WIDTH="293" VALIGN="TOP" HEIGHT="12">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Истина, если истинен хотя бы один из
      операндов
      </font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="88" VALIGN="TOP" HEIGHT="16">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      !$а
      </font></p>
    </td>
    <td WIDTH="114" VALIGN="TOP" HEIGHT="16">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Отрицание
      </font></p>
    </td>
    <td WIDTH="293" VALIGN="TOP" HEIGHT="16">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Истина, если значение $а ложно
      </font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="88" VALIGN="TOP" HEIGHT="14">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      NOT !$a
      </font></p>
    </td>
    <td WIDTH="114" VALIGN="TOP" HEIGHT="14">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Отрицание
      </font></p>
    </td>
    <td WIDTH="293" VALIGN="TOP" HEIGHT="14">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Истина, если значение $а ложно
      </font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="88" VALIGN="TOP" HEIGHT="14"><p><font face="Times New Roman" size="3" COLOR="#000000">
      $а XOR $b</font></p>
    </td>
    <td WIDTH="114" VALIGN="TOP" HEIGHT="14">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Исключающая дизъюнкция</font></p>
    </td>
    <td WIDTH="293" VALIGN="TOP" HEIGHT="14">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Истина, если истинен только один из
      операндов
      </font></p>
    </td>
  </tr>
</table>
<p>
<font face="Times New Roman" size="3" COLOR="#000000">
Логические операторы часто используются
для проверки результата вызова функций:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">file_exists(&quot;filename.txt&quot;) OR print &quot;File does not exist!&quot;;</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Возможен один из двух вариантов:
</font></p>
<ul>
  <li><font face="Times New Roman" size="3" COLOR="#000000">
файл filename.txt существует;
</font></li>
  <li><font face="Times New Roman" size="3" COLOR="#000000">
будет выведено сообщение: «File does not exist!».
</font></li>
</ul>
<b>
<p><font size="3" face="Times New Roman" COLOR="#000000">Операторы равенства</font></p>
</b><i>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Операторы равенства </font></i><font size="3" face="Times New Roman"><font COLOR="#000000">(табл.
3.7) предназначены для сравнения двух
величин и проверки их эквивалентности.
</font></font></p>
<b>
<p><font size="3" face="Times New Roman"><font color="#000000">Таблица 3.7.<i>
</i> </font></font></b><i><font face="Times New Roman" color="#000000" size="3">Операторы
равенства</font></i></p>
<table BORDER="1" cellspacing="0" cellpadding="0" WIDTH="500" height="121">
  <tr>
    <td WIDTH="69" VALIGN="TOP" HEIGHT="19" align="center">
      <p>
      <b><font face="Times New Roman" size="3" COLOR="#000000">
      Пример
      </font></b>
      </p>
    </td>
    <td WIDTH="182" VALIGN="TOP" HEIGHT="19" align="center">
      <p>
      <b><font face="Times New Roman" size="3" COLOR="#000000">
      Название
      </font></b>
      </p>
    </td>
    <td WIDTH="213" VALIGN="TOP" HEIGHT="19" align="center">
      <p><b><font size="3" face="Times New Roman"><font COLOR="#000000">
      Результат</font>&nbsp;</font></b></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="69" VALIGN="TOP" HEIGHT="9"><font face="Times New Roman" size="3" COLOR="#000000">$a==$b
      </font></td>
    <td WIDTH="182" VALIGN="TOP" HEIGHT="16"><font face="Times New Roman" size="3" COLOR="#000000">Проверка равенства
      </font></td>
    <td WIDTH="219" VALIGN="TOP" HEIGHT="9"><font face="Times New Roman" size="3" COLOR="#000000">Истина, если $а и $b равны
      </font></td>
  </tr>
  <tr>
    <td WIDTH="69" VALIGN="TOP" HEIGHT="24"><font face="Times New Roman" size="3" COLOR="#000000"> $а
      != $b
      </font></td>
    <td WIDTH="182" VALIGN="TOP" HEIGHT="1"><font face="Times New Roman" size="3" COLOR="#000000"> Проверка
      неравенства
      </font></td>
    <td WIDTH="219" VALIGN="TOP" HEIGHT="24"><font face="Times New Roman" size="3" COLOR="#000000"> Истина, если $а
      и $b не равны
      </font></td>
  </tr>
  <tr>
    <td WIDTH="69" VALIGN="TOP" HEIGHT="45"><p><font face="Times New Roman" size="3" COLOR="#000000">
      $а === $b</font></p>
    </td>
    <td WIDTH="182" VALIGN="TOP" HEIGHT="45">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Проверка идентичности
      </font></p>
    </td>
    <td WIDTH="219" VALIGN="TOP" HEIGHT="45">
      <p><font face="Times New Roman" size="3" COLOR="#000000">Истина, если $а и $b равны и
      имеют одинаковый тип
      </font></p>
    </td>
  </tr>
</table>
<p><font size="3" face="Times New Roman">
<font COLOR="#000000">
Даже опытные программисты часто
допускают одну распространенную ошибку —
они пытаются проверять равенство двух
величин, используя всего один знак
равенства (например, $а = $b). Помните, при
такой записи значение $b присваивается $а, и
желаемый результат </font><i><font FACE="Times New Roman" SIZE="3" COLOR="#000000">не
будет </font></i><font COLOR="#000000">достигнут.
</font></font></p>
<b>
<p><font size="3" face="Times New Roman" COLOR="#000000">Операторы сравнения</font></p>
</b><i>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Операторы сравнения </font></i><font size="3" face="Times New Roman"><font COLOR="#000000">(табл.
3.8), как и логические операторы, позволяют
управлять логикой программы и принимать
решения при сравнении двух и более
переменных.
</font></font></p>
<b>
<p><font size="3" face="Times New Roman"><font color="#000000">Таблица 3.8.<i>
</i> </font></font></b><i><font face="Times New Roman" color="#000000" size="3">Операторы
сравнения</font></i></p>
<table BORDER="1" cellspacing="0" cellpadding="0" WIDTH="500" height="141">
  <tr>
    <td WIDTH="88" VALIGN="TOP" HEIGHT="19" align="center">
      <p>
      <b><font face="Times New Roman" size="3" COLOR="#000000">
      Пример
      </font></b>
      </p>
    </td>
    <td WIDTH="101" VALIGN="TOP" HEIGHT="19" align="center">
      <p>
      <b><font face="Times New Roman" size="3" COLOR="#000000">
      Название
      </font></b>
      </p>
    </td>
    <td WIDTH="289" VALIGN="TOP" HEIGHT="19" align="center">
      <p>
      <b><font face="Times New Roman" size="3" COLOR="#000000">
      Результат
      </font></b>
      </p>
    </td>
  </tr>
  <tr>
    <td WIDTH="88" VALIGN="TOP" HEIGHT="19">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      $a&lt;$b
      </font></p>
    </td>
    <td WIDTH="101" VALIGN="TOP" HEIGHT="19">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Меньше
      </font></p>
    </td>
    <td WIDTH="289" VALIGN="TOP" HEIGHT="19"><p><font face="Times New Roman" size="3" COLOR="#000000">
      Истина, если переменная $а меньше $b</font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="88" VALIGN="TOP" HEIGHT="19">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      $a&gt;$b
      </font></p>
    </td>
    <td WIDTH="101" VALIGN="TOP" HEIGHT="19">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Больше
      </font></p>
    </td>
    <td WIDTH="289" VALIGN="TOP" HEIGHT="19"><p><font face="Times New Roman" size="3" COLOR="#000000">
      Истина, если переменная $а больше $b</font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="88" VALIGN="TOP" HEIGHT="38">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      $a &lt;= $b
      </font></p>
    </td>
    <td WIDTH="101" VALIGN="TOP" HEIGHT="38">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Меньше или равно
      </font></p>
    </td>
    <td WIDTH="289" VALIGN="TOP" HEIGHT="38"><p><font face="Times New Roman" size="3" COLOR="#000000">
      Истина, если переменная $а меньше или
      равна $b</font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="88" VALIGN="TOP" HEIGHT="38">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      $a &gt;= $b
      </font></p>
    </td>
    <td WIDTH="101" VALIGN="TOP" HEIGHT="38">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Больше или равно
      </font></p>
    </td>
    <td WIDTH="289" VALIGN="TOP" HEIGHT="38"><p><font face="Times New Roman" size="3" COLOR="#000000">
      Истина, если переменная $а больше или
      равна $b</font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="88" VALIGN="TOP" HEIGHT="1">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      ($a-12)?5: -1
      </font></p>
    </td>
    <td WIDTH="101" VALIGN="TOP" HEIGHT="1">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Тернарный оператор
      </font></p>
    </td>
    <td WIDTH="289" VALIGN="TOP" HEIGHT="1">
      <p><font size="3" face="Times New Roman"><font COLOR="#000000">
      Если переменная $а равна 12,
      возвращается значение 5,</font> <font COLOR="#000000">а если не равна — возвращается 1
      </font></font></p>
    </td>
  </tr>
</table>
<p>
<font face="Times New Roman" size="3" COLOR="#000000">
Обратите внимание: операторы сравнения
предназначены для работы только с
числовыми значениями. Хотя возникает
искушение воспользоваться ими для
сравнения строк, результат, скорее всего,
окажется неверным. В РНР существуют
стандартные функции для сравнения
строковых величин. Эти функции подробно
рассматриваются в главе 8.
</font></p>
<b>
<p><font size="3" face="Times New Roman" COLOR="#000000">Поразрядные операторы</font></p>
</b><i>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Поразрядные операторы </font></i><font face="Times New Roman" size="3" COLOR="#000000">выполняют
операции с целыми числами на уровне
отдельных битов, составляющих число. Чтобы
лучше понять принцип их работы, необходимо
иметь хотя бы общее представление о
двоичном представлении десятичных чисел. В
табл. 3.9 приведены примеры десятичных чисел
и соответствующих им двоичных
представлений.
</font></p>
<b>
<p><font size="3" face="Times New Roman"><font color="#000000">
Таблица 3.9.
<i>
 </i> </font></font></b><i><font color="#000000" size="3" face="Times New Roman">Десятичные
числа и их двоичные представления</font></i></p>
<table border="1" width="500" cellspacing="0" cellpadding="0">
  <tr>
    <td width="151" align="center"><b><font face="Times New Roman" size="3" color="#000000">Десятичное целое
</font></b></td>
    <td width="333" align="center"><b><font face="Times New Roman" size="3" color="#000000">Двоичное представление
</font></b></td>
  </tr>
  <tr>
    <td width="151"><font size="3" face="Times New Roman">2</font></td>
    <td width="333"><font size="3" face="Times New Roman">10</font></td>
  </tr>
  <tr>
    <td width="151"><font size="3" face="Times New Roman">5</font></td>
    <td width="333"><font size="3" face="Times New Roman">101</font></td>
  </tr>
  <tr>
    <td width="151"><font size="3" face="Times New Roman">10</font></td>
    <td width="333"><font size="3" face="Times New Roman">1010</font></td>
  </tr>
  <tr>
    <td width="151"><font size="3" face="Times New Roman">12</font></td>
    <td width="333"><font size="3" face="Times New Roman">1100</font></td>
  </tr>
  <tr>
    <td width="151"><font size="3" face="Times New Roman">145</font></td>
    <td width="333"><font size="3" face="Times New Roman">10010001</font></td>
  </tr>
  <tr>
    <td width="151"><font size="3" face="Times New Roman">1 452 012</font></td>
    <td width="333"><font size="3" face="Times New Roman">1011000100111111101100</font></td>
  </tr>
</table>
<p><font face="Times New Roman" size="3" COLOR="#000000">Поразрядные операторы, перечисленные в
табл. 3.10, представляют собой особый случай
логических операторов, однако они приводят
к совершенно иным результатам.
</font></p>
<b>
<p><font size="3" face="Times New Roman"><font color="#000000">Таблица 3.10.<i>
</i> </font></font></b><i><font face="Times New Roman" color="#000000" size="3">Поразрядные
операторы</font></i></p>
<table BORDER="1" CELLSPACING="0" CELLPADDING="0" WIDTH="504" height="265">
  <tr>
    <td WIDTH="60" VALIGN="TOP" HEIGHT="19" align="center">
      <p><b><font color="#000000" size="3" face="Times New Roman">Пример</font></b></p>
    </td>
    <td WIDTH="101" VALIGN="TOP" HEIGHT="19" align="center">
      <p><b><font color="#000000" size="3" face="Times New Roman">Название</font></b></p>
    </td>
    <td WIDTH="335" VALIGN="TOP" HEIGHT="19" align="center">
      <p><b><font color="#000000" size="3" face="Times New Roman">Результат</font></b></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="60" VALIGN="TOP" HEIGHT="40">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      $а&amp;$b
      </font></p>
    </td>
    <td WIDTH="101" VALIGN="TOP" HEIGHT="40">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Конъюнкция
      </font></p>
    </td>
    <td WIDTH="335" VALIGN="TOP" HEIGHT="40">
      <p><font size="3" face="Times New Roman"><font COLOR="#000000">
      С битами, находящимися в одинаковых
      разрядах $а и $b, выполняется</font> <font face="Times New Roman" size="3" COLOR="#000000">
      операция конъюнкции</font></font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="60" VALIGN="TOP" HEIGHT="36">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      $а|$Ь
      </font></p>
    </td>
    <td WIDTH="101" VALIGN="TOP" HEIGHT="36">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Дизъюнкция
      </font></p>
    </td>
    <td WIDTH="335" VALIGN="TOP" HEIGHT="36">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      С битами, находящимися в одинаковых
      разрядах $а и $b, выполняется операция дизъюнкции
      </font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="60" VALIGN="TOP" HEIGHT="55">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      $а^$b
      </font></p>
      <p><font size="3" face="Times New Roman">&nbsp;</font></td>
    <td WIDTH="101" VALIGN="TOP" HEIGHT="55">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Исключающая
      </font></p>
    </td>
    <td WIDTH="335" VALIGN="TOP" HEIGHT="55">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      С битами, находящимися в одинаковых
      разрядах $а и $b, выполняется операция исключающей
      дизъюнкции </font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="60" VALIGN="TOP" HEIGHT="19">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      ~$b
      </font></p>
    </td>
    <td WIDTH="101" VALIGN="TOP" HEIGHT="19">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Отрицание
      </font></p>
    </td>
    <td WIDTH="335" VALIGN="TOP" HEIGHT="19">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Все разряды переменной $b
      инвертируются
      </font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="60" VALIGN="TOP" HEIGHT="38">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      $а &lt;&lt; $b
      </font></p>
    </td>
    <td WIDTH="101" VALIGN="TOP" HEIGHT="38">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Сдвиг влево
      </font></p>
    </td>
    <td WIDTH="335" VALIGN="TOP" HEIGHT="38">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Переменной $а присваивается значение $b,
      сдвинутое влево на два бита
      </font></p>
    </td>
  </tr>
  <tr>
    <td WIDTH="60" VALIGN="TOP" HEIGHT="38">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      $а &gt;&gt; $b
      </font></p>
    </td>
    <td WIDTH="101" VALIGN="TOP" HEIGHT="38">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Сдвиг вправо
      </font></p>
    </td>
    <td WIDTH="335" VALIGN="TOP" HEIGHT="38">
      <p><font face="Times New Roman" size="3" COLOR="#000000">
      Переменной $а присваивается значение $b,
      сдвинутое вправо на два бита
      </font></p>
    </td>
  </tr>
</table>
<p>
<font face="Times New Roman" size="3" COLOR="#000000">
Если вам захочется больше узнать о
двоичном представлении и поразрядных
операторах, я рекомендую обратиться к
обширному электронному справочнику
Рэндалла Хайда (Randall Hyde) «The Art of Assembly Language
Programming», доступному по адресу <a href="http://webster.cs.ucr.edu/Page_asm/Page_asm.html">http://webster.cs.ucr.edu/Page_asm/Page_asm.html</a>.
Это лучший из ресурсов, которые мне когда-либо
встречались в Web.
</font></p>
<b>
<p><A NAME="e"></A><font face="Times New Roman" color="#000000" size="4">Управляющие конструкции</font></p>
</b><i>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Управляющие конструкции </font></i><font face="Times New Roman" size="3" COLOR="#000000">предоставляют
в распоряжение программиста средства для
построения сложных программ, способных
проверять условия и реагировать на
изменения значений входных данных во время
работы. Короче говоря, эти структуры
управляют выполнением программы.
</font></p>
<p><A NAME="f"></A><font face="Times New Roman" color="#000000" size="4">
Проверка условий</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Управляющие конструкции обычно проверяют
условия на истинность или ложность, и в
зависимости от результата проверки
выполняется то или иное действие.
Рассмотрим выражение $а == $b. Это выражение
истинно, если $а равно $b, и ложно в противном
случае. Результат истинного выражения
считается равным 1, а результат ложного
выражения равен 0. Рассмотрим следующий
фрагмент:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$а = 5;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$b = 5;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print $а == $b;</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
В результате выводится значение 1. Если
изменить $а или $Ь и присвоить переменной
значение, отличное от 5, выводится 0.
</font></p>
<b>
<p><font size="3" face="Times New Roman" COLOR="#000000">if</font></p>
</b>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Команда if представляет собой
разновидность команды выбора, которая
вычисляет значение выражения и в
зависимости от того, будет ли полученный
результат истинным или ложным, выполняет (или
не выполняет) блок программного кода.
Существует две общих формы команды i f:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">if (выражение) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">блок</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">}</font></p>
<p><font size="3" face="Times New Roman" COLOR="#000000">и</font></p>
<p><font face="Courier New"><font size="3" COLOR="#000000">if</font></font><font size="3" face="Courier New" COLOR="#000000"> (выражение) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">блок</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">}</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">else {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">блок</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">}</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Как упоминалось в предыдущем разделе,
проверка условий дает либо истинный, либо
ложный результат. Выполнение блоков
зависит от результата проверки, причем блок
может состоять как из одной, так и из
нескольких команд. В следующем примере
после проверки условия выбирается и
выводится одно из двух утверждений:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">if ($cooking_weight &lt; 200) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;This is enough pasta (&lt; 200g) for 1-2 people&quot;;</font></p>
<p><font size="3" color="#000000" face="Courier New">}</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">else {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;That's a lot of pasta. Having a party perhaps?&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">}</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Если в результате проверки условия
выполняется всего одна команда, фигурные
скобки не обязательны:
</font>
</p>
<p><font color="#000000" size="3" face="Courier New">if ($cooking_weight &lt; 100) print &quot;Are you sure this is enough?&quot;;</font></p>
<b>
<p><font size="3" face="Times New Roman" COLOR="#000000">elseif</font></p>
</b>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Команда elseif добавляет в управляющую
конструкцию if дополнительный уровень
проверки и увеличивает количество условий,
на основании которых принимается решение:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">if (выражение) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">блок</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">}</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">elseif (выражение) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">блок</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">}</font></p>
<p><img border="0" src="prim.gif" align=left width="36" height="35"><i><font face="Times New Roman" color="#000000" size="3">В
РНР существует альтернативное
представление команды elself — в виде двух
отдельных слов else if. Оба варианта приводят к
одинаковым результатам, а альтернативное
представление поддерживается
исключительно для удобства. Команда elself
особенно полезна в тех случаях, когда
происходит последовательное уточнение
проверяемых условий. Обратите внимание:
условие elself вычисляется лишь в том случае,
если все предшествующие условия if и elself
оказались ложными.</font></i></p>
<p><font size="3" face="Courier New" COLOR="#000000">if ($cooking_weight &lt; 200) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;This is enough pasta (&lt; 200g) for 1-2 people&quot;;</font></p>
<p><font size="3" face="Courier New">}</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">elseif ($cooking_weight &lt; 500) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;That's a lot of pasta. Having a party perhaps?&quot;; }</font></p>
<p><font size="3" face="Courier New">}</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">else {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;Whoa! Who are you cooking for, a football team?&quot;;</font></p>
<p><font color="#000000" size="3" face="Courier New">}</font></p>
<p><b><font size="3" face="Times New Roman" COLOR="#000000">Вложенные команды if</font></p>
</b>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Вложение команд i f обеспечивает
максимальный контроль над проверкой
условий. Давайте исследуем эту возможность,
усовершенствовав пример из предыдущих
разделов. Предположим, вес продукта должен
проверяться лишь в том случае, если речь
идет о пасте (макаронных изделиях):
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">// Проверить значение $pasta</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">if ($food == &quot;pasta&quot;)
{</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">// Проверить значение $cooking_weight</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">if ($cooking_weight &lt; 200) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;This is enough pasta (&lt; 200g) for 1-2 people&quot;;</font></p>
<p><font size="3" face="Courier New">}</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">elseif ($cooking_weight &lt; 500) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;That's a lot of pasta. Having a party perhaps?&quot;;</font></p>
<p><font size="3" face="Courier New">}</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">else {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;Whoa! Who are you cooking for. a football team?&quot;;</font></p>
<p><font face="Courier New" size="3" COLOR="#000000">
}
</font></p>
<p><font color="#000000" size="3" face="Courier New">}</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Как видно из приведенного кода, вложенные
команды if позволяют лучше управлять
логикой работы программы. Вскоре, с
увеличением объемов и сложности ваших
программ, вы убедитесь, что вложение
управляющих конструкций является
неоценимым приемом в арсенале программиста.
</font></p>
<b>
<p><font size="3" face="Times New Roman" COLOR="#000000">Вычисление нескольких условий</font></p>
</b>
<p><font face="Times New Roman" size="3" COLOR="#000000">
При выборе логики работы программы в
управляющей структуре можно проверять
комбинацию сразу нескольких условий:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">if ($cooking_weight &lt; 0) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">&nbsp;&nbsp;&nbsp; print &quot;Invalid cooking weight!&quot;;</font></p>
<p><font face="Courier New" size="3" COLOR="#000000">
}
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">if ( ($cooking_weight &gt; 0) &amp;&amp; ($cooking_weight &lt; 200) ) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">&nbsp;&nbsp; print
&quot;This is enough pasta (&lt; 200g) for 1-2 people&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">}</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">elseif ( ($cooking_weight &gt; 200) &amp;&amp; ($cooking_weight &lt; 500) ) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">&nbsp;&nbsp; print &quot;That's a lot of pasta. Having a party perhaps?&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">}</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">else {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">&nbsp;&nbsp; print &quot;Whoa! Who are you cooking for, a football team?&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">}</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Проверка сложных условий позволяет
устанавливать интервальные ограничения,
обеспечивающие более четкий контроль над
логикой выполнения программы и уменьшающие
количество лишних управляющих конструкций,
в результате чего программа становится
более понятной.
</font></p>
<p><A NAME="g"></A><font face="Times New Roman" color="#000000" size="4">Альтернативное ограничение блоков</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
В управляющих структурах используются
специальные ограничители, определяющие
границы блоков. Фигурные скобки ({ }) уже
упоминались выше. Для удобства
программистов в РНР поддерживается
альтернативный формат ограничения блоков:
</font></p>
<p><font face="Courier New" size="3" COLOR="#000000">
if (выражение) :
</font></p>
<p><font face="Courier New" size="3" COLOR="#000000">
блок
</font></p>
<p><font face="Courier New" size="3" COLOR="#000000">
else :
</font></p>
<p><font face="Courier New" size="3" COLOR="#000000">
блок
</font></p>
<p><font face="Courier New" size="3" COLOR="#000000">
endif;
</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Следовательно, две приведенных ниже
команды if полностью эквивалентны:
</font>
</p>
<p><font color="#000000" size="3" face="Courier New">if ($а== $b) {</font></p>
<p><font color="#000000" size="3" face="Courier New">print &quot;Equivalent values!&quot;;</font></p>
<p><font color="#000000" size="3" face="Courier New">}</font></p>
<p><font color="#000000" size="3" face="Courier New">if ($a ==<i> </i>$b) :</font></p>
<p><font color="#000000" size="3" face="Courier New">print &quot;Equivalent values!&quot;;</font></p>
<p><font color="#000000" size="3" face="Courier New">endif;</font></p>
<p><A NAME="h"></A><font color="#000000" face="Times New Roman" size="4">while</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Конструкция while предназначена для
многократного (циклического) выполнения
блока команд. Блок команды while выполняется
до тех пор, пока условие цикла остается
истинным. Общая форма цикла while выглядит так:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">while (выражение) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">блок</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">endwhile;</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Рассмотрим использование цикла while на
примере вычисления факториала (n!), где n = 5:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$n = 5;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$nсору = $n;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$factorial = 1; // Установить начальное значение
факториала</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">while ($n &gt; 0) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$factorial - $n *
$factorial;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$n--; // Уменьшить $n на 1&nbsp;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">endwhile;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;The factorial of
$ncopy is $factorial.&quot;;</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Программа выводит следующий результат:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">The factorial of 5 is 120.</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
В этом примере $n уменьшается в конце
каждой итерации. Условие цикла не должно
быть истинным в тот момент, когда
переменная $n станет равна 0, поскольку
величина $factorial умножится на 0 — конечно,
этого быть не должно.
</font></p>
<p><img border="0" src="prim.gif" align=left width="36" height="35"><i><font face="Times New Roman" color="#000000" size="3">В
приведенном примере условие цикла
следовало бы оптимизировать и привести его
к виду $n &gt; 1, поскольку умножать $factorial на 1
бессмысленно — число от этого не изменится.
Хотя ускорение работы программы будет
ничтожно малым, такие факторы всегда
принимаются во внимание с ростом объема и
сложности программ.</font></i></p>
<p><A NAME="i"></A><font color="#000000" face="Times New Roman" size="4">do. .while</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Цикл do. .while работает почти так же, как и
цикл while, описанный в предыдущем разделе,
однако в do. .while условие проверяется не в
начале, а в конце каждой итерации. Учтите,
что цикл do. .while всегда выполняется хотя бы
один раз, а цикл while может вообще не
выполняться, если перед входом в цикл
условие окажется ложным:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">do:</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">блок</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">while (выражение);</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Давайте пересмотрим пример с вычислением
факториала и перепишем его с
использованием конструкции do. .while:
</font>
</p>
<p><font face="Courier New" size="3" color="#000000">
$n = 5:
</font></p>
<p><font color="#000000" size="3" face="Courier New">
$ncopy = $n;
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$factorial = 1; // Установить начальное значение
факториала</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">do {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$factorial = $n *
$factorial;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$n--: // Уменьшить Sn на 1</font></p>
<p><font face="Courier New" size="3"><font COLOR="#000000">}</font> <font COLOR="#000000">while (Sn &gt; 0);</font></font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;The
factorial of Sncopy is $factorial.&quot;;</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
При выполнении этого примера будет
получен тот же результат, что и при
выполнении его прототипа из предыдущего
раздела.
</font></p>
<p><font color="#000000" size="3" face="Times New Roman"><i><img border="0" src="prim.gif" align=left width="36" height="35">В</i></font><i><font face="Times New Roman" size="3" COLOR="#000000">
цикле do. .while не поддерживается
альтернативный синтаксис (ограничение
блоков при помощи : и завершающего
ключевого слова), поэтому блок может
заключаться только в фигурные скобки.
</font> </i> </p>
<p><A NAME="j"></A><font face="Times New Roman" color="#000000" size="4">
for</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Цикл for обеспечивает еще одну возможность
многократного выполнения блоков. Он
отличается от цикла while только тем, что
условие изменяется в самой
</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
управляющей конструкции, а не где-то
внутри блока команд. Как и в случае с циклом
while, цикл выполняется до тех пор, пока
проверяемое условие остается истинным.
Общая форма конструкции for выглядит так:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">for (инициализация: условие; приращение) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">блок</font></p>
<p><font face="Courier New" size="3" COLOR="#000000">
}
</font></p>
<p><font size="3" face="Times New Roman"><font COLOR="#000000">
Условная часть цикла for в
действительности состоит из трех
компонентов. </font><i><font COLOR="#000000">Инициализация
</font></i><font COLOR="#000000">выполняется
всего один раз и определяет начальное
значение управляющей переменной цикла. </font><i><font COLOR="#000000">Условие
</font></i><font COLOR="#000000">проверяется
в начале каждой итерации и определяет,
должна ли выполняться текущая итерация или
нет. Наконец, </font><i><font COLOR="#000000">приращение
</font></i><font COLOR="#000000">определяет
изменение управляющей переменной при
каждой итерации. Возможно, термин «приращение»
в данном случае неточен, поскольку
переменная может как увеличиваться, так и
уменьшаться в соответствии с намерениями
программиста. Следующий пример
демонстрирует простейший случай
применения цикла for:</font></font></p>
<p><font face="Courier New" COLOR="#000000" size="3">for
($i = 10; $1 &lt;- 100: $1 +=10) : // Обратная косая черта предотвращает</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;\$i = $i &lt;br&gt;&quot;; endfor;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
возможную интерполяцию переменной $1</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Выполнение этого фрагмента дает
следующий результат:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$i = 10</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$i = 20</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$i = 30</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$i = 40</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$i - 50</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$i = 60</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$i = 70</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$i = 80</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$i = 90</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$i = 100</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
В этом примере управляющая переменная $i
инициализируется значением 10. Условие
заключается в том, что цикл продолжается до
тех пор, пока $i не достигнет или не превысит
пороговую величину 100. Наконец, при каждой
итерации значение $i увеличивается на 10. В
результате команда print выполняется 10 раз,
каждый раз выводя текущее значение $i.
Обратите внимание: для увеличения $i на 10
используется оператор сложения с
присваиванием. Для этого есть веские
причины, поскольку циклы for в РНР не
поддерживают более традиционной записи $i =
$i + 10.
</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Кстати, этот пример можно записать и в
другом виде, но с теми же результатами:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">for ($i = 10; $i &lt;= 100; print &quot;\$i - $i &lt;br&gt;&quot;.
$i+=10);</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Многие новички не понимают, зачем
создавать несколько разновидностей циклов
в языке программирования, будь то РНР или
какой-нибудь другой язык. Почему нельзя
обойтись одной циклической конструкцией?
Дело в том, что у цикла for существует
несколько специфических особенностей.
</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Например, вы можете инициализировать
несколько переменных одновременно,
разделяя команды инициализации запятыми:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">for ($x=0,$y=0: $x+$y&lt;10;
$x++) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$У +=
2;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// Увеличить $у на 2&nbsp;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;\$y = $y &lt;BR&gt;&quot;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //
Вывести значение $у</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$sum = $x + $y;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;\surn = $sum&lt;BR&gt;&quot;;&nbsp;&nbsp; // Вывести значение $sum</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">endfor;</font></p>
<p><font size="3" face="Times New Roman" COLOR="#000000">Результат:</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$y = 2&nbsp;</font></p>
<p> <font size="3" face="Courier New" COLOR="#000000"> $sum = 2&nbsp;</font></p>
<p> <font size="3" face="Courier New" COLOR="#000000"> Sy = 4&nbsp;</font></p>
<p> <font size="3" face="Courier New" COLOR="#000000"> $sum = 5&nbsp;</font></p>
<p> <font size="3" face="Courier New" COLOR="#000000"> $y = 6&nbsp;</font></p>
<p> <font size="3" face="Courier New" COLOR="#000000"> $sum = 8&nbsp;</font></p>
<p> <font size="3" face="Courier New" COLOR="#000000"> $y = 8&nbsp;</font></p>
<p> <font size="3" face="Courier New" COLOR="#000000"> $sum = 11</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Этот пример выводит текущие значения $y и
суммы $х и $у. Как видно из приведенных
результатов, выводится значение $sum = 11, хотя
эта сумма выходит за границы условия цикла
($х + $у &lt; 10). Это происходит из-за того, что
при входе в данную итерацию переменная $у
была равна 6, а переменная $х была равна 2.
Значения переменных соответствовали
условию цикла, поэтому $х и $у были присвоены
новые значения, в результате чего была
выведена сумма И. При очередной проверке
условия сумма 11 превысила пороговое
значение 10 и цикл завершился.</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
В управляющих выражениях циклов for могут
отсутствовать любые компоненты. Например,
вы можете передать ранее
инициализированную переменную прямо в цикл,
не присваивая ей определенного начального
значения. Возможны и другие ситуации —
например, приращение переменной цикла
может осуществляться в зависимости от
некоторого условия, определяемого в цикле.
В этом случае приращение не должно
указываться в управляющем выражении.
Пример:</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$х = 5:</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">for (: : $х +=2) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot; $х &quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">if ($x == 15) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">break; // Выйти из цикла for</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">endif;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">endfor;</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Результат выглядит так:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">5 7 9 11 13 15</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Хотя циклические конструкции for и while
выполняют практически одинаковые функции,
считается, что цикл for делает программу
более наглядной. Это объясняется тем, что
программист при виде команды for немедленно
получает всю необходимую информацию о
механике и продолжительности цикла. С
другой стороны, в командах while приходится
тратить лишнее время на поиск обновлений
управляющих переменных — в больших
программах это может занимать немало
времени.
</font></p>
<p><A NAME="k"></A><font face="Times New Roman" color="#000000" size="4">
foreach</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Конструкция foreach представляет собой
разновидность for, включенную в язык для
упрощения перебора элементов массива.
Существуют две разновидности команды foreach,
предназначенные для разных типов массивов:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">foreach (массив as $элемент) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">блок</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">}</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">foreach (массив as $ключ =&gt; $элемент) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">блок</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">}</font></p>
<p><font size="3" face="Times New Roman" COLOR="#000000">Например, при выполнении следующего
фрагмента:</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$menu = аrrау(&quot;pasta&quot;, &quot;steak&quot;, &quot;potatoes&quot;,
&quot;fish&quot;, &quot;fries&quot;);</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">foreach ($menu as $item) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;$item &lt;BR&gt;&quot;;</font></p>
<p><font size="3" face="Times New Roman" COLOR="#000000">}</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
будет выведен следующий результат:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">pasta</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">steak</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">potatoes</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">fish</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">fries</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
В этом примере следует обратить внимание
на два обстоятельства. Во-первых,
конструкция foreach автоматически
возвращается в начало массива (в других
циклических конструкциях этого не
происходит). Во-вторых, нет необходимости
явно увеличивать счетчик или иным способом
переходить к следующему элементу массива —
это происходит автоматически при каждой
итерации foreach.
</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Второй вариант используется при работе с
ассоциативными массивами:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$wine_inventory = array {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">&quot;merlot&quot; =&gt; 15,</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">&quot;zinfandel&quot;
=&gt; 17,</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">&quot;sauvignon&quot; =&gt; 32</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">}</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">foreach ($wine_inventory as $i =&gt;
$item_count) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;$item_count
bottles of $i remaining&lt;BR&gt;&quot;;</font></p>
<p><font face="Courier New" size="3" COLOR="#000000">
}
</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
В этом случае результат выглядит так:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">15 bottles of merlot remaining</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">17 bottles of zinfandel remaining</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">32 bottles of sauvignon remaining</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Как видно из приведенных примеров,
конструкция foreach заметно упрощает работу с
массивами. За дополнительной информацией о
массивах обращайтесь к главе 5.
</font></p>
<p><A NAME="l"></A><font face="Times New Roman" color="#000000" size="4">
switch</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Принцип работы конструкции switch отчасти
напоминает if — результат, полученный при
вычислении выражения, проверяется по
списку потенциальных совпадений.</font></p>
<p><font size="3" face="Times New Roman"><font COLOR="#000000">
Это особенно удобно при проверке
нескольких значений, поскольку применение
switch делает программу более наглядной и
компактной. Общий формат команды</font> <font COLOR="#000000">switch:</font></font></p>
<p><font size="3" face="Courier New" COLOR="#000000">switch (выражение) {</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">case (условие):</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">блок</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">case (условие):</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">блок</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">...</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">default:</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">блок</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">}</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Проверяемое условие указывается в
круглых скобках после ключевого слова switch.
Результат его вычисления последовательно
сравнивается с условиями в секциях case. При
обнаружении совпадения выполняется блок
соответствующей секции. Если совпадение не
будет обнаружено, выполняется блок
необязательной секции default.</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Как будет показано в следующих главах,
одной из сильнейших сторон РНР является
обработка пользовательского ввода.
Допустим, программа отображает
раскрывающийся список с несколькими
вариантами и каждая строка списка
соответствует некоторой команде,
выполняемой в отдельной конструкции case.
Реализацию очень удобно построить на
использовании команды switch:</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$user_input
= &quot;recipes&quot;; // Команда,выбранная
пользователем</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">switch ($user_input) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">case(&quot;search&quot;) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;Let's perform a search!&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">break;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">case(&quot;dictionary&quot;) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;What word would you like to look up?&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">break;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">case(&quot;recipes&quot;) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;Here is a list of recipes...&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">break;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">default :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;Here is the menu...&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">break;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">endswitch;</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Как видно из приведенного фрагмента,
команда switch обеспечивает четкую и
наглядную организацию кода. Переменная,
указанная в условии switch (в данном примере —
$user_input), сравнивается с условиями всех
последующих секций case. Если значение,
указанное в секции case, совпадает Со
значением сравниваемой переменной,
выполняется блок этой секции. Команда break
предотвращает проверку дальнейших секций
case и завершает выполнение конструкции switch.
Если ни одно из проверенных условий не
выполняется, активизируется
необязательная секция default. Если секция default
отсутствует и ни одно из условий не
выполняется, команда switch просто
завершается и выполнение программы
продолжается со следующей команды.
</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Вы должны помнить, что при отсутствии в
секции case команды break (см. следующий раздел)
выполнение switch продолжается со следующей
команды до тех пор,
</font></p>
<p><font face="Times New Roman"><font size="3"><font COLOR="#000000">
пока не встретится команда break или не
будет достигнут конец конструкции switch.
Следующий пример демонстрирует
последствия отсутствия забытой команды break:
</font></font><font size="3" COLOR="#000000">$value = 0.4;</font></font></p>
<p><font size="3" face="Courier New" COLOR="#000000">switch($value) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">case (0.4) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;value is 0.4&lt;br&gt;&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">case (0.6) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;value is 0.6&lt;br&gt;&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">break;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">case (0.3) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;value is 0.3&lt;br&gt;&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">break;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">default :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;You didn't choose a value!&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">break;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">endswitch;</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Результат выглядит так:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">value is 0.4</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">value is 0.6</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Отсутствие команды break привело к тому, что
была выполнена не только команда print в той
секции, где было найдено совпадение, но и
команда print в следующей секции. Затем
выполнение команд конструкции switch
прервалось из-за команды switch, следующей за
второй командой print.
</font></p>
<p><img border="0" src="prim.gif" align=left width="36" height="35"><i><font face="Times New Roman" color="#000000" size="3">Выбор
между командами switch и if практически не
влияет на быстродействие про-граммы.
Решение об использовании той или иной
конструкции является скорее личным делом
программиста.</font></i></p>
<p><A NAME="m"></A><font face="Times New Roman" color="#000000" size="4">
break</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Команда break немедленно прерывает
выполнение той конструкции while, for или switch, в
которой она находится. Эта команда уже
упоминалась в предыдущем разделе, однако
прерывание текущего цикла не исчерпывает
возможностей команды break. В общем виде
синтаксис break выглядит так:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">break n;</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Необязательный параметр n определяет
количество уровней управляющих
конструкций, завершаемых командой break.
Например, если команда break вложена в две
команды while и после break стоит цифра 2,
происходит немедленный выход из обоих
циклов. По умолчанию значение n равно 1;
выход на один уровень может обозначаться
как явным указанием 1, так и указанием
команды break без параметра. Обратите
внимание: команда i f не относится к числу
управляющих конструкций, прерываемых
командой break. Об этом следует помнить при
использовании необязательного параметра п.
</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Рассмотрим пример использования команды
break в цикле foreach:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$arr = array(14, 12, 128, 34, 5);</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$magic number = 128:</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">foreach ($arr as $val) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">if (Sval == $magic_number) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;The magic number is in the array!&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">break;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">endif;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;val is Sval &lt;br&gt;&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">endforeach;</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Если значение $magic_number присутствует в
массиве $аrr (как в приведенном примере),
поиск прерывается. Результат выглядит так:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">val is 14</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">val is 12</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">The magic number is in the
array!</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Приведенный пример всего лишь
демонстрирует использование команды break. В
РНР существует стандартная функция in_array( ),
предназначенная для поиска заранее
заданной величины в массиве; эта функция
подробно описана в главе 5.
</font></p>
<p><A NAME="n"></A><font face="Times New Roman" color="#000000" size="4">
continue</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Остается рассмотреть еще одну
управляющую конструкцию РНР — continue. При
выполнении команды continue в цикле
пропускаются все оставшиеся команды
текущей итерации и немедленно начинается
новая итерация. Синтаксис команды continue в
общем виде:
</font>
</p>
<p><font color="#000000" size="3" face="Courier New">continue n;</font></p>
<p>
<font face="Times New Roman" size="3" COLOR="#000000">
Необязательный параметр n указывает, на
сколько уровней внешних циклов
распространяется действие continue.
</font></p>
<p>
<font face="Times New Roman" size="3" COLOR="#000000">
Рассмотрим пример использования команды
continue. Допустим, вы хотите сосчитать простые
числа в интервале от 0 до некоторой заданной
границы. Простоты ради предположим, что у
нас имеется функция is_prime(), которая
проверяет, является число простым или нет:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$boundary = 558;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">for ($i = 0; $i &lt;=
$boundary: $i++) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">if (! is_prime($i)) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">continue;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">endif;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$prime_counter++;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">endfor;</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Если проверяемое число является простым,
блок команды if обходится и переменная
$prime_counter увеличивается. В противном случае
выполняется команда continue, в результате чего
происходит немедленный переход в начало
следующей итерации.
</font></p>
<p><img border="0" src="prim.gif" align=left width="36" height="35"><i><font face="Times New Roman" color="#000000" size="3">Использование
continue в длинных и сложных алгоритмах
приводит к появлению запу- танного и
невразумительного кода. В подобных случаях
использовать continue не рекомендуется.</font></i></p>
<p>
<font face="Times New Roman" size="3" COLOR="#000000">
Команда continue не является безусловно
необходимой в программах, поскольку
аналогичного эффекта можно добиться при
помощи команды if.
</font></p>
<b>
<p><A NAME="o"></A><font color="#000000" face="Times New Roman" size="4">Проект: календарь событий</font></p>
</b>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Для практической демонстрации многих
концепций, рассмотренных ранее, я завершаю
эту главу описанием программы-календаря. В
календаре хранится информация о последних
кулинарных мероприятиях, семинарах по
дегустации вин и любых других событиях,
которые вы сочтете нужным в него включить. В
этом проекте задействованы многие
концепции, описанные в этой главе, а также
представлен ряд новых концепций, которые
будут рассматриваться в следующих главах.
</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
Информация о событиях хранится в обычном
текстовом файле и выглядит примерно так:
</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">July 21, 2000|8 p. m.|Cooking With Rasmus|PHP creator Rasmus Lerdorf
discusses the wonders
of cheese.</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">July 23, 2000|11 a. m.|Boxed Lunch|Valerie researches the latest ham sandwich
making
techniques (documentary)</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">July 31,
2000|2:30p.m.|Progressive Gourmet|Forget the Chardonnay: iced tea is
the
sophisticated gourmet's beverage of choice.</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">August 1, 2000|7
p.m.|Coder's Critique|Famed Food Critic Brian rates NYC's
hottest new
Internet cafes.</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">August 3, 2000|6
p.m.|Australian Algorithms|Matt studies the alligator's diet.</font></p>
<p><font face="Times New Roman" size="3" COLOR="#000000">
На рис. 3.1 изображен результат работы
сценария РНР, приведенного в листинге 3.1.
</font></p>
<p><img border="0" src="3.1.jpg" width="495" height="339"></p>
<b>
<p><font size="3" face="Times New Roman"><font color="#000000"><i>Рис. З.1. </i> </font></font></b><i><font face="Times New Roman" color="#000000" size="3">Примерный
вид календаря</font></i></p>
<p>
<font face="Times New Roman" size="3" COLOR="#000000">
Прежде чем переходить к подробному
анализу кода, потратьте немного времени на
изучение алгоритма:
</font></p>
<ol>
  <li>
<font face="Times New Roman" size="3" COLOR="#000000">
Открыть файл, содержащий информацию о
событиях.
</font></li>
  <li>
<font face="Times New Roman" size="3" COLOR="#000000">
Разделить каждую строку на 4 элемента:
дату, время, название и краткое описание
мероприятия.
</font></li>
  <li>
<font face="Times New Roman" size="3" COLOR="#000000">
Отформатировать и вывести данные.
</font></li>
  <li>
<font face="Times New Roman" size="3" COLOR="#000000">
Закрыть файл.
</font></li>
</ol>
<b>
<p><font face="Times New Roman"><font size="3" COLOR="#000000"><i>Листинг 3.1.
</i>
</font></font></b><i><font COLOR="#000000">Сценарий
для вывода содержимого events.txt в браузере</font>
</i></p>
<p><font size="3" face="Courier New" COLOR="#000000">&lt;?</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">// Приложение: календарь</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">// Назначение: чтение и анализ содержимого
файла</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">// с последующим форматированием для
вывода в браузере</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">// Открыть файловый манипулятор Sevents для
файла events.txt</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$events - fopen (&quot;events.txt&quot;. &quot;r&quot;);</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;&lt;table border = 0 width = 250&gt;&quot;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print&quot;&quot;&lt;tr&gt;&lt;td valign=top&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;&lt;h3&gt;Events Calendar:&lt;/h3&gt;&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">// Читать, пока не будет найден конец файла</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">while (! feof(Sevents)) :</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">// Прочитать следующую строку файла</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">events.txt
$event = fgets($events. 4096);</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">// Разделить компоненты текущей строки на
элементы массива</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">$event_info = explode(&quot;|&quot;. Jevent);</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">// Отформатировать и вывести информацию о
событии</font></p>
<p> <font size="3" face="Courier New" COLOR="#000000"> print &quot;$event_info[0] ( $event_info[1] ) &lt;br&gt;&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print &quot;&lt;b&gt;$event_info[2]&lt;/b&gt; &lt;br&gt;&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print
&quot;$event_info[3] &lt;br&gt; &lt;br&gt;&quot;;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">endwhile;</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">// Завершить таблицу</font></p>
<p><font size="3" face="Courier New" COLOR="#000000">print
&quot;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&quot;;</font></p>
<p><font face="Courier New" color="#000000" size="3">
fclose ($events);
</font></p>
<p><font face="Courier New" size="3" color="#000000">
?&gt;
</font></p>
<p>
<font face="Times New Roman" size="3" COLOR="#000000">
Этот короткий пример убедительно
доказывает, что РНР позволяет даже
неопытным программистам создавать
реальные приложения с минимальными
усилиями и затратами времени. Если какие-нибудь
из представленных концепций покажутся
непонятными, не огорчайтесь — на самом деле
они очень просты и будут подробно описаны в
следующих главах. А если вам не терпится
узнать побольше об этих вопросах,
обратитесь к главе 7 «Файловый ввод/вывод и
файловая система» и главе 8 «Строки и
регулярные выражения» поскольку большая
часть незнакомого синтаксиса описана
именно там.
</font>
</p>
<p><A NAME="p"></A><b><font face="Times New Roman" color="#000000" size="4">Итоги</font></p>
</b>
<p><font face="Times New Roman" size="3" COLOR="#000000">
В этой главе были представлены выражения
и управляющие конструкции — средства языка
РНР, которые, вероятно, в той или иной форме
присутствуют практически в любом сценарии.
Мы рассмотрели некоторые вопросы
использования этих средств, а именно:
</font></p>
<ul>
  <li><font face="Times New Roman" size="3" COLOR="#000000">
операторы;
</font></li>
  <li><font face="Times New Roman" size="3" COLOR="#000000">
операнды;
</font></li>
  <li><font face="Times New Roman" size="3" COLOR="#000000">
приоритет операторов;
</font></li>
  <li><font face="Times New Roman" size="3" COLOR="#000000">
ассоциативность операторов;
</font></li>
<li><font face="Times New Roman" size="3" COLOR="#000000">
управляющие структуры (If, while, do. .while, for,
foreach, switch, break, continue).
</font></li>
</ul>
<p><font face="Times New Roman" size="3" COLOR="#000000">
В первых трех главах книги вы
познакомились с базовыми компонентами
языка РНР. Остальные пять глав первой части
расширяют этот материал; в них вы найдете
дополнительную информацию о работе с
массивами, объектно-ориентированных
возможностях, файловом вводе/выводе и
строковых операциях РНР. Весь этот материал
готовит читателя ко второй части книги,
причем особое внимание уделяется средствам
РНР, часто используемым при построении
приложений. Итак, держитесь покрепче и не
сходите с дистанции!
</font>

</p>

</BODY></HTML>
